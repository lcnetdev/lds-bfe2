<?xml version="1.0" encoding="utf-8"?>
<xslt:stylesheet version="1.0" extension-element-prefixes="exsl date xdmp" exclude-result-prefixes="fn rdf rdfs bf bflc madsrdf local" xmlns:xslt="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" xmlns:date="http://exslt.org/dates-and-times" xmlns:xdmp="http://marklogic.com/xdmp" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:marc="http://www.loc.gov/MARC21/slim" xmlns:bf="http://id.loc.gov/ontologies/bibframe/" xmlns:bflc="http://id.loc.gov/ontologies/bflc/" xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#" xmlns:local="http://example.org/local">
  <xslt:output encoding="UTF-8" method="xml" indent="yes" />
  <xslt:strip-space elements="*" />
  <xslt:param name="pRecordId" select="'default'" />
  <xslt:param name="pCatScript" select="'Latn'" />
  <xslt:key name="langs" match="//@xml:lang[contains(., '-') and not(contains(., 'atn'))]" use="." />
  <xslt:param name="pGenerationDatestamp">
    <xslt:choose>
      <xslt:when test="function-available('date:date-time')">
        <xslt:value-of select="concat(translate(substring(date:date-time(),1,19),'-:T',''),'.0')" />
      </xslt:when>
      <xslt:when test="function-available('fn:current-dateTime')">
        <xslt:value-of select="concat(translate(substring(fn:current-dateTime(),1,19),'-:T',''),'.0')" />
      </xslt:when>
    </xslt:choose>
  </xslt:param>
  <xslt:param name="pSourceRecordId" />
  <xslt:param name="pConversionAgency" select="'DLC'" />
  <xslt:param name="pGenerationUri" select="'https://github.com/lcnetdev/bibframe2marc'" />
  <xslt:param name="pSRULookup" />
  <xslt:variable name="lower">abcdefghijklmnopqrstuvwxyz</xslt:variable>
  <xslt:variable name="upper">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xslt:variable>
  <xslt:variable name="xslProcessor">
    <xslt:value-of select="system-property('xslt:vendor')" />
  </xslt:variable>
  <xslt:variable name="vCurrentVersion">DLC bibframe2marc v2.8.0</xslt:variable>
  <xslt:variable name="df880script">
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>arab</lang>
      <code>(3</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>cyrl</lang>
      <code>(N</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>grek</lang>
      <code>(S</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hang</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hani</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hebr</lang>
      <code>(2</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>jpan</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>latn</lang>
      <code>(B</code>
    </script>
  </xslt:variable>
  <xslt:variable name="df045BCEtimePeriods">
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>a0</code>
      <edtfDate>-XXXX/-3000</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b0</code>
      <edtfDate>-29XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b1</code>
      <edtfDate>-28XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b2</code>
      <edtfDate>-27XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b3</code>
      <edtfDate>-26XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b4</code>
      <edtfDate>-25XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b5</code>
      <edtfDate>-24XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b6</code>
      <edtfDate>-23XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b7</code>
      <edtfDate>-22XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b8</code>
      <edtfDate>-21XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b9</code>
      <edtfDate>-20XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c0</code>
      <edtfDate>-19XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c1</code>
      <edtfDate>-18XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c2</code>
      <edtfDate>-17XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c3</code>
      <edtfDate>-16XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c4</code>
      <edtfDate>-15XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c5</code>
      <edtfDate>-14XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c6</code>
      <edtfDate>-13XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c7</code>
      <edtfDate>-12XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c8</code>
      <edtfDate>-11XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c9</code>
      <edtfDate>-10XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d0</code>
      <edtfDate>-09XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d1</code>
      <edtfDate>-08XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d2</code>
      <edtfDate>-07XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d3</code>
      <edtfDate>-06XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d4</code>
      <edtfDate>-05XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d5</code>
      <edtfDate>-04XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d6</code>
      <edtfDate>-03XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d7</code>
      <edtfDate>-02XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d8</code>
      <edtfDate>-01XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d9</code>
      <edtfDate>-00XX</edtfDate>
    </timePeriod>
  </xslt:variable>
  <xslt:variable name="df045CEtimePeriods">
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>e</code>
      <century>00</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>f</code>
      <century>01</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>g</code>
      <century>02</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>h</code>
      <century>03</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>i</code>
      <century>04</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>j</code>
      <century>05</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>k</code>
      <century>06</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>l</code>
      <century>07</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>m</code>
      <century>08</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>n</code>
      <century>09</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>o</code>
      <century>10</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>p</code>
      <century>11</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>q</code>
      <century>12</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>r</code>
      <century>13</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>s</code>
      <century>14</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>t</code>
      <century>15</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>u</code>
      <century>16</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>v</code>
      <century>17</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>w</code>
      <century>18</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>x</code>
      <century>19</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>y</code>
      <century>20</century>
    </timePeriod>
  </xslt:variable>
  <xslt:variable name="df048performers">
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ba</code>
      <type>brass</type>
      <label>horn</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bb</code>
      <type>brass</type>
      <label>trumpet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bc</code>
      <type>brass</type>
      <label>coronet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bd</code>
      <type>brass</type>
      <label>trombone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>be</code>
      <type>brass</type>
      <label>tuba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bf</code>
      <type>brass</type>
      <label>baritone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bn</code>
      <type>brass</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>by</code>
      <type>brass, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ca</code>
      <type>chorus</type>
      <label>mixed chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cb</code>
      <type>chorus</type>
      <label>female chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cc</code>
      <type>chorus</type>
      <label>male chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cd</code>
      <type>chorus</type>
      <label>children chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cn</code>
      <type>chorus</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cy</code>
      <type>chorus, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ea</code>
      <type>electronic</type>
      <label>electronic synthesizer</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>eb</code>
      <type>electronic</type>
      <label>electronic tape</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ec</code>
      <type>electronic</type>
      <label>computer</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ed</code>
      <type>electronic</type>
      <label>ondes martinot</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>en</code>
      <type>electronic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ka</code>
      <type>keyboard</type>
      <label>piano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kb</code>
      <type>keyboard</type>
      <label>organ</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kc</code>
      <type>keyboard</type>
      <label>harpsichord</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kd</code>
      <type>keyboard</type>
      <label>clavichord</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ke</code>
      <type>keyboard</type>
      <label>continuo</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kf</code>
      <type>keyboard</type>
      <label>celeste</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kn</code>
      <type>keyboard</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ky</code>
      <type>keyboard, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oa</code>
      <type>instrumental</type>
      <label>orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ob</code>
      <type>instrumental</type>
      <label>chamber orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oc</code>
      <type>instrumental</type>
      <label>string orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>od</code>
      <type>instrumental</type>
      <label>band</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oe</code>
      <type>instrumental</type>
      <label>dance orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>of</code>
      <type>instrumental</type>
      <label>brass band</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>on</code>
      <type>instrumental</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oy</code>
      <type>instrumental, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pa</code>
      <type>percussion</type>
      <label>timpani</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pb</code>
      <type>percussion</type>
      <label>xylophone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pc</code>
      <type>percussion</type>
      <label>marimba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pd</code>
      <type>percussion</type>
      <label>drum</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pn</code>
      <type>percussion</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>py</code>
      <type>percussion, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sa</code>
      <type>string, bowed</type>
      <label>violin</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sb</code>
      <type>string, bowed</type>
      <label>viola</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sc</code>
      <type>string, bowed</type>
      <label>violoncello</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sd</code>
      <type>string, bowed</type>
      <label>double bass</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>se</code>
      <type>string, bowed</type>
      <label>viol</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sf</code>
      <type>string, bowed</type>
      <label>viola d'amore</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sg</code>
      <type>string, bowed</type>
      <label>viola da gamba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sn</code>
      <type>string, bowed</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sy</code>
      <type>string, bowed, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ta</code>
      <type>string, plucked</type>
      <label>harp</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tb</code>
      <type>string, plucked</type>
      <label>guitar</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tc</code>
      <type>string, plucked</type>
      <label>lute</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>td</code>
      <type>string, plucked</type>
      <label>mandolin</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tn</code>
      <type>string, plucked</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ty</code>
      <type>string, plucked, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>va</code>
      <type>voice</type>
      <label>soprano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vb</code>
      <type>voice</type>
      <label>mezzo soprano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vc</code>
      <type>voice</type>
      <label>alto</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vd</code>
      <type>voice</type>
      <label>tenor</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ve</code>
      <type>voice</type>
      <label>baritone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vf</code>
      <type>voice</type>
      <label>bass</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vg</code>
      <type>voice</type>
      <label>counter tenor</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vh</code>
      <type>voice</type>
      <label>high voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vi</code>
      <type>voice</type>
      <label>medium voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vj</code>
      <type>voice</type>
      <label>low voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vn</code>
      <type>voice</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vy</code>
      <type>voice, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wa</code>
      <type>woodwind</type>
      <label>flute</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wb</code>
      <type>woodwind</type>
      <label>oboe</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wc</code>
      <type>woodwind</type>
      <label>clarinet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wd</code>
      <type>woodwind</type>
      <label />
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>we</code>
      <type>woodwind</type>
      <label>bassoon</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wf</code>
      <type>woodwind</type>
      <label>English horn</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wg</code>
      <type>woodwind</type>
      <label>bass clarinet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wh</code>
      <type>woodwind</type>
      <label>recorder</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wi</code>
      <type>woodwind</type>
      <label>saxophone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wn</code>
      <type>woodwind</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wy</code>
      <type>woodwind, ethnic</type>
    </performer>
  </xslt:variable>
  <xslt:variable name="languages">
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>aa</xmllang>
      <iso6392>aar</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ab</xmllang>
      <iso6392>abk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ace</xmllang>
      <iso6392>ace</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ach</xmllang>
      <iso6392>ach</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ada</xmllang>
      <iso6392>ada</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ady</xmllang>
      <iso6392>ady</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>afa</xmllang>
      <iso6392>afa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>afh</xmllang>
      <iso6392>afh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>af</xmllang>
      <iso6392>afr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ain</xmllang>
      <iso6392>ain</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ak</xmllang>
      <iso6392>aka</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>akk</xmllang>
      <iso6392>akk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sq</xmllang>
      <iso6392>sqi</iso6392>
      <iso6392>alb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ale</xmllang>
      <iso6392>ale</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>alg</xmllang>
      <iso6392>alg</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>alt</xmllang>
      <iso6392>alt</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>am</xmllang>
      <iso6392>amh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ang</xmllang>
      <iso6392>ang</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>anp</xmllang>
      <iso6392>anp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>apa</xmllang>
      <iso6392>apa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ar</xmllang>
      <iso6392>ara</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>arc</xmllang>
      <iso6392>arc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>an</xmllang>
      <iso6392>arg</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hy</xmllang>
      <iso6392>hye</iso6392>
      <iso6392>arm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>arn</xmllang>
      <iso6392>arn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>arp</xmllang>
      <iso6392>arp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>art</xmllang>
      <iso6392>art</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>arw</xmllang>
      <iso6392>arw</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>as</xmllang>
      <iso6392>asm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ast</xmllang>
      <iso6392>ast</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ath</xmllang>
      <iso6392>ath</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>aus</xmllang>
      <iso6392>aus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>av</xmllang>
      <iso6392>ava</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ae</xmllang>
      <iso6392>ave</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>awa</xmllang>
      <iso6392>awa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ay</xmllang>
      <iso6392>aym</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>az</xmllang>
      <iso6392>aze</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bad</xmllang>
      <iso6392>bad</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bai</xmllang>
      <iso6392>bai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ba</xmllang>
      <iso6392>bak</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bal</xmllang>
      <iso6392>bal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bm</xmllang>
      <iso6392>bam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ban</xmllang>
      <iso6392>ban</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>eu</xmllang>
      <iso6392>eus</iso6392>
      <iso6392>baq</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bas</xmllang>
      <iso6392>bas</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bat</xmllang>
      <iso6392>bat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bej</xmllang>
      <iso6392>bej</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>be</xmllang>
      <iso6392>bel</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bem</xmllang>
      <iso6392>bem</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bn</xmllang>
      <iso6392>ben</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ber</xmllang>
      <iso6392>ber</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bho</xmllang>
      <iso6392>bho</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bh</xmllang>
      <iso6392>bih</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bik</xmllang>
      <iso6392>bik</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bin</xmllang>
      <iso6392>bin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bi</xmllang>
      <iso6392>bis</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bla</xmllang>
      <iso6392>bla</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bnt</xmllang>
      <iso6392>bnt</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bo</xmllang>
      <iso6392>bod</iso6392>
      <iso6392>tib</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bs</xmllang>
      <iso6392>bos</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bra</xmllang>
      <iso6392>bra</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>br</xmllang>
      <iso6392>bre</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>btk</xmllang>
      <iso6392>btk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bua</xmllang>
      <iso6392>bua</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bug</xmllang>
      <iso6392>bug</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>bg</xmllang>
      <iso6392>bul</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>my</xmllang>
      <iso6392>mya</iso6392>
      <iso6392>bur</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>byn</xmllang>
      <iso6392>byn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cad</xmllang>
      <iso6392>cad</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cai</xmllang>
      <iso6392>cai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>car</xmllang>
      <iso6392>car</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ca</xmllang>
      <iso6392>cat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cau</xmllang>
      <iso6392>cau</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ceb</xmllang>
      <iso6392>ceb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cel</xmllang>
      <iso6392>cel</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cs</xmllang>
      <iso6392>ces</iso6392>
      <iso6392>cze</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ch</xmllang>
      <iso6392>cha</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chb</xmllang>
      <iso6392>chb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ce</xmllang>
      <iso6392>che</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chg</xmllang>
      <iso6392>chg</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zh</xmllang>
      <iso6392>zho</iso6392>
      <iso6392>chi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chk</xmllang>
      <iso6392>chk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chm</xmllang>
      <iso6392>chm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chn</xmllang>
      <iso6392>chn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cho</xmllang>
      <iso6392>cho</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chp</xmllang>
      <iso6392>chp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chr</xmllang>
      <iso6392>chr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cu</xmllang>
      <iso6392>chu</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cv</xmllang>
      <iso6392>chv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>chy</xmllang>
      <iso6392>chy</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cmc</xmllang>
      <iso6392>cmc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cop</xmllang>
      <iso6392>cop</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kw</xmllang>
      <iso6392>cor</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>co</xmllang>
      <iso6392>cos</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cpe</xmllang>
      <iso6392>cpe</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cpf</xmllang>
      <iso6392>cpf</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cpp</xmllang>
      <iso6392>cpp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cr</xmllang>
      <iso6392>cre</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>crh</xmllang>
      <iso6392>crh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>crp</xmllang>
      <iso6392>crp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>csb</xmllang>
      <iso6392>csb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cus</xmllang>
      <iso6392>cus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>cy</xmllang>
      <iso6392>cym</iso6392>
      <iso6392>wel</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dak</xmllang>
      <iso6392>dak</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>da</xmllang>
      <iso6392>dan</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dar</xmllang>
      <iso6392>dar</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>day</xmllang>
      <iso6392>day</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>del</xmllang>
      <iso6392>del</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>den</xmllang>
      <iso6392>den</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>de</xmllang>
      <iso6392>ger</iso6392>
      <iso6392>deu</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dgr</xmllang>
      <iso6392>dgr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>din</xmllang>
      <iso6392>din</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dv</xmllang>
      <iso6392>div</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>doi</xmllang>
      <iso6392>doi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dra</xmllang>
      <iso6392>dra</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dsb</xmllang>
      <iso6392>dsb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dua</xmllang>
      <iso6392>dua</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dum</xmllang>
      <iso6392>dum</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nl</xmllang>
      <iso6392>nld</iso6392>
      <iso6392>dut</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dyu</xmllang>
      <iso6392>dyu</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>dz</xmllang>
      <iso6392>dzo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>efi</xmllang>
      <iso6392>efi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>egy</xmllang>
      <iso6392>egy</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>eka</xmllang>
      <iso6392>eka</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>el</xmllang>
      <iso6392>ell</iso6392>
      <iso6392>gre</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>elx</xmllang>
      <iso6392>elx</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>en</xmllang>
      <iso6392>eng</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>enm</xmllang>
      <iso6392>enm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>eo</xmllang>
      <iso6392>epo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>et</xmllang>
      <iso6392>est</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ee</xmllang>
      <iso6392>ewe</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ewo</xmllang>
      <iso6392>ewo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fan</xmllang>
      <iso6392>fan</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fo</xmllang>
      <iso6392>fao</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fa</xmllang>
      <iso6392>fas</iso6392>
      <iso6392>per</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fat</xmllang>
      <iso6392>fat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fj</xmllang>
      <iso6392>fij</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fil</xmllang>
      <iso6392>fil</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fi</xmllang>
      <iso6392>fin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fiu</xmllang>
      <iso6392>fiu</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fon</xmllang>
      <iso6392>fon</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fr</xmllang>
      <iso6392>fre</iso6392>
      <iso6392>fra</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>frm</xmllang>
      <iso6392>frm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fro</xmllang>
      <iso6392>fro</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>frr</xmllang>
      <iso6392>frr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>frs</xmllang>
      <iso6392>frs</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fy</xmllang>
      <iso6392>fry</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ff</xmllang>
      <iso6392>ful</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>fur</xmllang>
      <iso6392>fur</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gaa</xmllang>
      <iso6392>gaa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gay</xmllang>
      <iso6392>gay</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gba</xmllang>
      <iso6392>gba</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gem</xmllang>
      <iso6392>gem</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ka</xmllang>
      <iso6392>geo</iso6392>
      <iso6392>kat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gez</xmllang>
      <iso6392>gez</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gil</xmllang>
      <iso6392>gil</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gd</xmllang>
      <iso6392>gla</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ga</xmllang>
      <iso6392>gle</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gl</xmllang>
      <iso6392>glg</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gv</xmllang>
      <iso6392>glv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gmh</xmllang>
      <iso6392>gmh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>goh</xmllang>
      <iso6392>goh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gon</xmllang>
      <iso6392>gon</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gor</xmllang>
      <iso6392>gor</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>got</xmllang>
      <iso6392>got</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>grb</xmllang>
      <iso6392>grb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>grc</xmllang>
      <iso6392>grc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gn</xmllang>
      <iso6392>grn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gsw</xmllang>
      <iso6392>gsw</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gu</xmllang>
      <iso6392>guj</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>gwi</xmllang>
      <iso6392>gwi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hai</xmllang>
      <iso6392>hai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ht</xmllang>
      <iso6392>hat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ha</xmllang>
      <iso6392>hau</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>haw</xmllang>
      <iso6392>haw</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>he</xmllang>
      <iso6392>heb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hz</xmllang>
      <iso6392>her</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hil</xmllang>
      <iso6392>hil</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>him</xmllang>
      <iso6392>him</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hi</xmllang>
      <iso6392>hin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hit</xmllang>
      <iso6392>hit</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hmn</xmllang>
      <iso6392>hmn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ho</xmllang>
      <iso6392>hmo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hr</xmllang>
      <iso6392>hrv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hsb</xmllang>
      <iso6392>hsb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hu</xmllang>
      <iso6392>hun</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>hup</xmllang>
      <iso6392>hup</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>iba</xmllang>
      <iso6392>iba</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ig</xmllang>
      <iso6392>ibo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>is</xmllang>
      <iso6392>isl</iso6392>
      <iso6392>ice</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>io</xmllang>
      <iso6392>ido</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ii</xmllang>
      <iso6392>iii</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ijo</xmllang>
      <iso6392>ijo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>iu</xmllang>
      <iso6392>iku</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ie</xmllang>
      <iso6392>ile</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ilo</xmllang>
      <iso6392>ilo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ia</xmllang>
      <iso6392>ina</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>inc</xmllang>
      <iso6392>inc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>id</xmllang>
      <iso6392>ind</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ine</xmllang>
      <iso6392>ine</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>inh</xmllang>
      <iso6392>inh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ik</xmllang>
      <iso6392>ipk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ira</xmllang>
      <iso6392>ira</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>iro</xmllang>
      <iso6392>iro</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>it</xmllang>
      <iso6392>ita</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>jv</xmllang>
      <iso6392>jav</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>jbo</xmllang>
      <iso6392>jbo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ja</xmllang>
      <iso6392>jpn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>jpr</xmllang>
      <iso6392>jpr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>jrb</xmllang>
      <iso6392>jrb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kaa</xmllang>
      <iso6392>kaa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kab</xmllang>
      <iso6392>kab</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kac</xmllang>
      <iso6392>kac</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kl</xmllang>
      <iso6392>kal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kam</xmllang>
      <iso6392>kam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kn</xmllang>
      <iso6392>kan</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kar</xmllang>
      <iso6392>kar</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ks</xmllang>
      <iso6392>kas</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kr</xmllang>
      <iso6392>kau</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kaw</xmllang>
      <iso6392>kaw</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kk</xmllang>
      <iso6392>kaz</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kbd</xmllang>
      <iso6392>kbd</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kha</xmllang>
      <iso6392>kha</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>khi</xmllang>
      <iso6392>khi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>km</xmllang>
      <iso6392>khm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kho</xmllang>
      <iso6392>kho</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ki</xmllang>
      <iso6392>kik</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rw</xmllang>
      <iso6392>kin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ky</xmllang>
      <iso6392>kir</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kmb</xmllang>
      <iso6392>kmb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kok</xmllang>
      <iso6392>kok</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kv</xmllang>
      <iso6392>kom</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kg</xmllang>
      <iso6392>kon</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ko</xmllang>
      <iso6392>kor</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kos</xmllang>
      <iso6392>kos</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kpe</xmllang>
      <iso6392>kpe</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>krc</xmllang>
      <iso6392>krc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>krl</xmllang>
      <iso6392>krl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kro</xmllang>
      <iso6392>kro</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kru</xmllang>
      <iso6392>kru</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kj</xmllang>
      <iso6392>kua</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kum</xmllang>
      <iso6392>kum</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ku</xmllang>
      <iso6392>kur</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>kut</xmllang>
      <iso6392>kut</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lad</xmllang>
      <iso6392>lad</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lah</xmllang>
      <iso6392>lah</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lam</xmllang>
      <iso6392>lam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lo</xmllang>
      <iso6392>lao</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>la</xmllang>
      <iso6392>lat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lv</xmllang>
      <iso6392>lav</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lez</xmllang>
      <iso6392>lez</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>li</xmllang>
      <iso6392>lim</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ln</xmllang>
      <iso6392>lin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lt</xmllang>
      <iso6392>lit</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lol</xmllang>
      <iso6392>lol</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>loz</xmllang>
      <iso6392>loz</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lb</xmllang>
      <iso6392>ltz</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lua</xmllang>
      <iso6392>lua</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lu</xmllang>
      <iso6392>lub</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lg</xmllang>
      <iso6392>lug</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lui</xmllang>
      <iso6392>lui</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lun</xmllang>
      <iso6392>lun</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>luo</xmllang>
      <iso6392>luo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>lus</xmllang>
      <iso6392>lus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mk</xmllang>
      <iso6392>mkd</iso6392>
      <iso6392>mac</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mad</xmllang>
      <iso6392>mad</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mag</xmllang>
      <iso6392>mag</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mh</xmllang>
      <iso6392>mah</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mai</xmllang>
      <iso6392>mai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mak</xmllang>
      <iso6392>mak</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ml</xmllang>
      <iso6392>mal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>man</xmllang>
      <iso6392>man</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mi</xmllang>
      <iso6392>mri</iso6392>
      <iso6392>mao</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>map</xmllang>
      <iso6392>map</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mr</xmllang>
      <iso6392>mar</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mas</xmllang>
      <iso6392>mas</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ms</xmllang>
      <iso6392>msa</iso6392>
      <iso6392>may</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mdf</xmllang>
      <iso6392>mdf</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mdr</xmllang>
      <iso6392>mdr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>men</xmllang>
      <iso6392>men</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mga</xmllang>
      <iso6392>mga</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mic</xmllang>
      <iso6392>mic</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>min</xmllang>
      <iso6392>min</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mis</xmllang>
      <iso6392>mis</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mkh</xmllang>
      <iso6392>mkh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mg</xmllang>
      <iso6392>mlg</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mt</xmllang>
      <iso6392>mlt</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mnc</xmllang>
      <iso6392>mnc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mni</xmllang>
      <iso6392>mni</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mno</xmllang>
      <iso6392>mno</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>moh</xmllang>
      <iso6392>moh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mn</xmllang>
      <iso6392>mon</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mos</xmllang>
      <iso6392>mos</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mul</xmllang>
      <iso6392>mul</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mun</xmllang>
      <iso6392>mun</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mus</xmllang>
      <iso6392>mus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mwl</xmllang>
      <iso6392>mwl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>mwr</xmllang>
      <iso6392>mwr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>myn</xmllang>
      <iso6392>myn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>myv</xmllang>
      <iso6392>myv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nah</xmllang>
      <iso6392>nah</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nai</xmllang>
      <iso6392>nai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nap</xmllang>
      <iso6392>nap</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>na</xmllang>
      <iso6392>nau</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nv</xmllang>
      <iso6392>nav</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nr</xmllang>
      <iso6392>nbl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nd</xmllang>
      <iso6392>nde</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ng</xmllang>
      <iso6392>ndo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nds</xmllang>
      <iso6392>nds</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ne</xmllang>
      <iso6392>nep</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>new</xmllang>
      <iso6392>new</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nia</xmllang>
      <iso6392>nia</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nic</xmllang>
      <iso6392>nic</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>niu</xmllang>
      <iso6392>niu</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nn</xmllang>
      <iso6392>nno</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nb</xmllang>
      <iso6392>nob</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nog</xmllang>
      <iso6392>nog</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>non</xmllang>
      <iso6392>non</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>no</xmllang>
      <iso6392>nor</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nqo</xmllang>
      <iso6392>nqo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nso</xmllang>
      <iso6392>nso</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nub</xmllang>
      <iso6392>nub</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nwc</xmllang>
      <iso6392>nwc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ny</xmllang>
      <iso6392>nya</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nym</xmllang>
      <iso6392>nym</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nyn</xmllang>
      <iso6392>nyn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nyo</xmllang>
      <iso6392>nyo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>nzi</xmllang>
      <iso6392>nzi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>oc</xmllang>
      <iso6392>oci</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>oj</xmllang>
      <iso6392>oji</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>or</xmllang>
      <iso6392>ori</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>om</xmllang>
      <iso6392>orm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>osa</xmllang>
      <iso6392>osa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>os</xmllang>
      <iso6392>oss</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ota</xmllang>
      <iso6392>ota</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>oto</xmllang>
      <iso6392>oto</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>paa</xmllang>
      <iso6392>paa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pag</xmllang>
      <iso6392>pag</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pal</xmllang>
      <iso6392>pal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pam</xmllang>
      <iso6392>pam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pa</xmllang>
      <iso6392>pan</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pap</xmllang>
      <iso6392>pap</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pau</xmllang>
      <iso6392>pau</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>peo</xmllang>
      <iso6392>peo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>phi</xmllang>
      <iso6392>phi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>phn</xmllang>
      <iso6392>phn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pi</xmllang>
      <iso6392>pli</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pl</xmllang>
      <iso6392>pol</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pon</xmllang>
      <iso6392>pon</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pt</xmllang>
      <iso6392>por</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pra</xmllang>
      <iso6392>pra</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>pro</xmllang>
      <iso6392>pro</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ps</xmllang>
      <iso6392>pus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>qaa-qtz</xmllang>
      <iso6392>qaa-qtz</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>qu</xmllang>
      <iso6392>que</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>raj</xmllang>
      <iso6392>raj</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rap</xmllang>
      <iso6392>rap</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rar</xmllang>
      <iso6392>rar</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>roa</xmllang>
      <iso6392>roa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rm</xmllang>
      <iso6392>roh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rom</xmllang>
      <iso6392>rom</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ro</xmllang>
      <iso6392>ron</iso6392>
      <iso6392>rum</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rn</xmllang>
      <iso6392>run</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>rup</xmllang>
      <iso6392>rup</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ru</xmllang>
      <iso6392>rus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sad</xmllang>
      <iso6392>sad</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sg</xmllang>
      <iso6392>sag</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sah</xmllang>
      <iso6392>sah</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sai</xmllang>
      <iso6392>sai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sal</xmllang>
      <iso6392>sal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sam</xmllang>
      <iso6392>sam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sa</xmllang>
      <iso6392>san</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sas</xmllang>
      <iso6392>sas</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sat</xmllang>
      <iso6392>sat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>scn</xmllang>
      <iso6392>scn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sco</xmllang>
      <iso6392>sco</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sel</xmllang>
      <iso6392>sel</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sem</xmllang>
      <iso6392>sem</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sga</xmllang>
      <iso6392>sga</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sgn</xmllang>
      <iso6392>sgn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>shn</xmllang>
      <iso6392>shn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sid</xmllang>
      <iso6392>sid</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>si</xmllang>
      <iso6392>sin</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sio</xmllang>
      <iso6392>sio</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sit</xmllang>
      <iso6392>sit</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sla</xmllang>
      <iso6392>sla</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sk</xmllang>
      <iso6392>slk</iso6392>
      <iso6392>slo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sl</xmllang>
      <iso6392>slv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sma</xmllang>
      <iso6392>sma</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>se</xmllang>
      <iso6392>sme</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>smi</xmllang>
      <iso6392>smi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>smj</xmllang>
      <iso6392>smj</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>smn</xmllang>
      <iso6392>smn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sm</xmllang>
      <iso6392>smo</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sms</xmllang>
      <iso6392>sms</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sn</xmllang>
      <iso6392>sna</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sd</xmllang>
      <iso6392>snd</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>snk</xmllang>
      <iso6392>snk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sog</xmllang>
      <iso6392>sog</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>so</xmllang>
      <iso6392>som</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>son</xmllang>
      <iso6392>son</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>st</xmllang>
      <iso6392>sot</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>es</xmllang>
      <iso6392>spa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sc</xmllang>
      <iso6392>srd</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>srn</xmllang>
      <iso6392>srn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sr</xmllang>
      <iso6392>srp</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>srr</xmllang>
      <iso6392>srr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ssa</xmllang>
      <iso6392>ssa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ss</xmllang>
      <iso6392>ssw</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>suk</xmllang>
      <iso6392>suk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>su</xmllang>
      <iso6392>sun</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sus</xmllang>
      <iso6392>sus</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sux</xmllang>
      <iso6392>sux</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sw</xmllang>
      <iso6392>swa</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>sv</xmllang>
      <iso6392>swe</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>syc</xmllang>
      <iso6392>syc</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>syr</xmllang>
      <iso6392>syr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ty</xmllang>
      <iso6392>tah</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tai</xmllang>
      <iso6392>tai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ta</xmllang>
      <iso6392>tam</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tt</xmllang>
      <iso6392>tat</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>te</xmllang>
      <iso6392>tel</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tem</xmllang>
      <iso6392>tem</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ter</xmllang>
      <iso6392>ter</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tet</xmllang>
      <iso6392>tet</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tg</xmllang>
      <iso6392>tgk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tl</xmllang>
      <iso6392>tgl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>th</xmllang>
      <iso6392>tha</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tig</xmllang>
      <iso6392>tig</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ti</xmllang>
      <iso6392>tir</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tiv</xmllang>
      <iso6392>tiv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tkl</xmllang>
      <iso6392>tkl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tlh</xmllang>
      <iso6392>tlh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tli</xmllang>
      <iso6392>tli</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tmh</xmllang>
      <iso6392>tmh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tog</xmllang>
      <iso6392>tog</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>to</xmllang>
      <iso6392>ton</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tpi</xmllang>
      <iso6392>tpi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tsi</xmllang>
      <iso6392>tsi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tn</xmllang>
      <iso6392>tsn</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ts</xmllang>
      <iso6392>tso</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tk</xmllang>
      <iso6392>tuk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tum</xmllang>
      <iso6392>tum</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tup</xmllang>
      <iso6392>tup</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tr</xmllang>
      <iso6392>tur</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tut</xmllang>
      <iso6392>tut</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tvl</xmllang>
      <iso6392>tvl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tw</xmllang>
      <iso6392>twi</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>tyv</xmllang>
      <iso6392>tyv</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>udm</xmllang>
      <iso6392>udm</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>uga</xmllang>
      <iso6392>uga</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ug</xmllang>
      <iso6392>uig</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>uk</xmllang>
      <iso6392>ukr</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>umb</xmllang>
      <iso6392>umb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>und</xmllang>
      <iso6392>und</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ur</xmllang>
      <iso6392>urd</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>uz</xmllang>
      <iso6392>uzb</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>vai</xmllang>
      <iso6392>vai</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ve</xmllang>
      <iso6392>ven</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>vi</xmllang>
      <iso6392>vie</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>vo</xmllang>
      <iso6392>vol</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>vot</xmllang>
      <iso6392>vot</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>wak</xmllang>
      <iso6392>wak</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>wal</xmllang>
      <iso6392>wal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>war</xmllang>
      <iso6392>war</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>was</xmllang>
      <iso6392>was</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>wen</xmllang>
      <iso6392>wen</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>wa</xmllang>
      <iso6392>wln</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>wo</xmllang>
      <iso6392>wol</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>xal</xmllang>
      <iso6392>xal</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>xh</xmllang>
      <iso6392>xho</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>yao</xmllang>
      <iso6392>yao</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>yap</xmllang>
      <iso6392>yap</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>yi</xmllang>
      <iso6392>yid</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>yo</xmllang>
      <iso6392>yor</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>ypk</xmllang>
      <iso6392>ypk</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zap</xmllang>
      <iso6392>zap</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zbl</xmllang>
      <iso6392>zbl</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zen</xmllang>
      <iso6392>zen</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zgh</xmllang>
      <iso6392>zgh</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>za</xmllang>
      <iso6392>zha</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>znd</xmllang>
      <iso6392>znd</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zu</xmllang>
      <iso6392>zul</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zun</xmllang>
      <iso6392>zun</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zxx</xmllang>
      <iso6392>zxx</iso6392>
    </language>
    <language xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <xmllang>zza</xmllang>
      <iso6392>zza</iso6392>
    </language>
  </xslt:variable>
  <xslt:template match="/">
    <xslt:choose>
      <xslt:when test="rdf:RDF">
        <xslt:choose>
          <xslt:when test="count(rdf:RDF/bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]) = 1">
            <xslt:choose>
              <xslt:when test="count(rdf:RDF/bf:Work) = 0" />
              <xslt:when test="count(rdf:RDF/bf:Work) = 1">
                <xslt:choose>
                  <xslt:when test="rdf:RDF/bf:Instance/bf:instanceOf/bf:*[@rdf:about=/rdf:RDF/bf:Work/@rdf:about]" />
                  <xslt:when test="rdf:RDF/bf:Instance/bf:instanceOf[@rdf:resource=/rdf:RDF/bf:Work/@rdf:about]" />
                  <xslt:when test="rdf:RDF/bf:Work/bf:hasInstance[@rdf:resource=/rdf:RDF/bf:Instance/@rdf:about]" />
                  <xslt:otherwise>
                    <xslt:message terminate="yes">Invalid document: top-level Instance and Work are not linked</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message terminate="yes">Invalid document: document can only have 0 or 1 top-level Work element</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message terminate="yes">Invalid document: document must have exactly one top-level Instance element</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message terminate="yes">Invalid document: no RDF root element</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
    <xslt:apply-templates />
  </xslt:template>
  <xslt:template match="rdf:RDF">
    <xslt:variable name="vPrincipalInstance" select="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]" />
    <xslt:variable name="vAdminMetadata" select="$vPrincipalInstance/bf:adminMetadata/bf:AdminMetadata | bf:Work/bf:adminMetadata/bf:AdminMetadata[not(/rdf:RDF/bf:Instance/bf:adminMetadata/bf:AdminMetadata)]" />
    <xslt:variable name="vRecordId">
      <xslt:choose>
        <xslt:when test="$pRecordId = 'default'">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata/bf:identifiedBy/bf:Local[not(bf:source) or bf:source/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/rdfs:label='DLC']/rdf:value">
              <xslt:value-of select="$vAdminMetadata/bf:identifiedBy/bf:Local[not(bf:source) or bf:source/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/rdfs:label='DLC']/rdf:value" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:value-of select="generate-id()" />
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
        <xslt:otherwise>
          <xslt:value-of select="$pRecordId" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <marc:record>
      <marc:leader>
        <xslt:attribute name="xml:space">preserve</xslt:attribute>
        <xslt:text>     </xslt:text>
        <xslt:variable name="vPosition-2">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata/bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/d'] or                       $vAdminMetadata/bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/d']">
              <xsl:value-of select="'d'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$vAdminMetadata/bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/c'] or                       $vAdminMetadata/bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']">
              <xsl:value-of select="'c'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$vAdminMetadata/bf:status[@rdf:resource] or                       $vAdminMetadata/bf:status/bf:Status[@rdf:about]">
              <xslt:for-each select="$vAdminMetadata/bf:status/@rdf:resource |                            $vAdminMetadata/bf:status/bf:Status/@rdf:about">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xsl:variable name="vStatusCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:call-template name="tUriCode">
                        <xsl:with-param name="pUri" select="." />
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:value-of select="substring($vStatusCode, 1,1)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element LDR.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:when test="string-length($vAdminMetadata/bf:status/bf:Status/bf:code) = 1">
              <xslt:for-each select="$vAdminMetadata/bf:status/bf:Status/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element LDR.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vPosition-2 != ''">
            <xslt:value-of select="$vPosition-2" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>n</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
        <xslt:variable name="vPosition-3">
          <xslt:choose>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xslt:text>d</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic']">
              <xslt:text>c</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xslt:text>f</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography']">
              <xslt:text>e</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage']">
              <xslt:text>g</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NonMusicAudio']">
              <xslt:text>i</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicAudio']">
              <xslt:text>j</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage']">
              <xslt:text>k</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Multimedia']">
              <xslt:text>m</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MixedMaterial']">
              <xslt:text>p</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Object']">
              <xslt:text>r</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Text'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xslt:text>t</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vPosition-3 != ''">
            <xslt:value-of select="$vPosition-3" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>a</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
        <xslt:variable name="vPosition-4">
          <xslt:choose>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Collection']">
              <xslt:text>c</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Integrating']">
              <xslt:text>i</xslt:text>
            </xslt:when>
            <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Serial']">
              <xslt:text>s</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vPosition-4 != ''">
            <xslt:value-of select="$vPosition-4" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>m</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
        <xslt:text> a22     </xslt:text>
        <xslt:variable name="vPosition-6">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata/bflc:encodingLevel[@rdf:resource] or                       $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel[@rdf:about] or                        $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel[not(@rdf:about) and bf:code]">
              <xslt:for-each select="$vAdminMetadata/bflc:encodingLevel/@rdf:resource |                            $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel/@rdf:about |                             $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel[not(@rdf:about)]/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:variable name="vLdr17" select="substring(.,string-length(.))" />
                    <xslt:choose>
                      <xslt:when test="$vLdr17='f'">
                        <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vLdr17!=''">
                        <xsl:value-of select="$vLdr17" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vLdr17=''">
                        <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element LDR.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vPosition-6 != ''">
            <xslt:value-of select="$vPosition-6" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
        <xslt:text>i 4500</xslt:text>
      </marc:leader>
      <marc:controlfield>
        <xslt:attribute name="xml:space">preserve</xslt:attribute>
        <xslt:attribute name="tag">001</xslt:attribute>
        <xsl:value-of select="$vRecordId" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </marc:controlfield>
      <marc:controlfield>
        <xslt:attribute name="xml:space">preserve</xslt:attribute>
        <xslt:attribute name="tag">003</xslt:attribute>
        <xslt:choose>
          <xslt:when test="$pConversionAgency != 'DLC' and $pRecordId != ''">
            <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:choose>
              <xslt:when test="$vAdminMetadata/bf:identifiedBy/*[local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']/bf:assigner/*/*[local-name()='code']">
                <xsl:value-of select="$vAdminMetadata/bf:identifiedBy/*[local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']/bf:assigner/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:otherwise>
        </xslt:choose>
      </marc:controlfield>
      <xslt:choose>
        <xslt:when test="$pGenerationDatestamp != ''">
          <marc:controlfield>
            <xslt:attribute name="xml:space">preserve</xslt:attribute>
            <xslt:attribute name="tag">005</xslt:attribute>
            <xsl:value-of select="$pGenerationDatestamp" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </marc:controlfield>
        </xslt:when>
        <xslt:when test="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']]">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']][fn:last()]/bf:date[@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime']">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xslt:variable name="vDT">
                  <xsl:value-of select="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']][fn:last()]/bf:date[@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xsl:value-of select="concat(translate(substring($vDT, 1, 19), '-T:', ''),'.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="$vAdminMetadata[bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/c']]">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata[bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/c']][fn:last()]/bf:date[@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime']">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xslt:variable name="vDT">
                  <xsl:value-of select="$vAdminMetadata[bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/c']][fn:last()]/bf:date[@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xsl:value-of select="concat(translate(substring($vDT, 1, 19), '-T:', ''),'.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="$vAdminMetadata/bf:changeDate">
          <xslt:choose>
            <xslt:when test="$vAdminMetadata/bf:changeDate/@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime'">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),substring($vAdminMetadata/bf:changeDate,12,2),substring($vAdminMetadata/bf:changeDate,15,2),substring($vAdminMetadata/bf:changeDate,18,2),'.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:when test="$vAdminMetadata/bf:changeDate/@rdf:datatype='http://www.w3.org/2001/XMLSchema#date'">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),'000000.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 19 and                     substring($vAdminMetadata/bf:changeDate,5,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,8,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,11,1) = 'T' and                     substring($vAdminMetadata/bf:changeDate,14,1) = ':' and                     substring($vAdminMetadata/bf:changeDate,17,1) = ':'">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),substring($vAdminMetadata/bf:changeDate,12,2),substring($vAdminMetadata/bf:changeDate,15,2),substring($vAdminMetadata/bf:changeDate,18,2),'.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 10 and                     substring($vAdminMetadata/bf:changeDate,5,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,8,1) = '-'">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),'000000.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 14 and                     translate($vAdminMetadata/bf:changeDate,'-:.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','') = $vAdminMetadata/bf:changeDate">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,14),'.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 8 and                     translate($vAdminMetadata/bf:changeDate,'-:.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','') = $vAdminMetadata/bf:changeDate">
              <marc:controlfield>
                <xslt:attribute name="xml:space">preserve</xslt:attribute>
                <xslt:attribute name="tag">005</xslt:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,8),'000000.0')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </marc:controlfield>
            </xslt:when>
            <xslt:otherwise>
              <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:changeDate. Invalid datatype for 005.</xsl:message>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="/rdf:RDF/bf:Instance" mode="generate-007">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="/rdf:RDF" mode="generate-008">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[         (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and         not(           bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv'         )]" mode="generate-010">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Nbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Nbn']]" mode="generate-015">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/bf:Local[bf:source/bf:Source]|bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source//@rdf:*[.='http://id.loc.gov/authorities/names/no2004037399']]" mode="generate-016">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='CopyrightNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CopyrightNumber']]" mode="generate-017">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='Isbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']) and rdf:value/text()]" mode="generate-020">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()]" mode="generate-022">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()]" mode="generate-023">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']] |       bf:Instance/bf:identifiedBy/*[local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']] |       bf:Instance/bf:identifiedBy/*[local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']] |       bf:Work/bf:identifiedBy/*[local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr'] or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Eidr']] |       bf:Instance/bf:identifiedBy/*[local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']] |       bf:Instance/bf:identifiedBy/*[local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']] |       bf:Instance/bf:identifiedBy/*[local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']] |       bf:Instance/bf:identifiedBy/bf:Identifier[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo')]" mode="generate-024">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']] |                     //bf:Item/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']]" mode="generate-025">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]|                     //bf:Item/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]" mode="generate-026">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Strn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn']]" mode="generate-027">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='PublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']) and rdf:value/text()]" mode="generate-028">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Coden' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden']]" mode="generate-030">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='PostalRegistration' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PostalRegistration']]" mode="generate-032">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:capture/bf:Capture[bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf'] or bf:place/@rdf:resource]" mode="generate-033">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:scale/bf:Scale[starts-with(rdfs:label,'linear') or starts-with(rdfs:label,'angular')]" mode="generate-034">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='Local' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']) and bf:assigner]" mode="generate-035">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='OclcNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/OclcNumber']) and rdf:value]" mode="generate-035">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='StudyNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]" mode="generate-036">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:acquisitionSource/bf:AcquisitionSource |                     //bf:Item/bf:acquisitionSource/bf:AcquisitionSource" mode="generate-037">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="$vAdminMetadata/bflc:metadataLicensor">
          <marc:datafield>
            <xslt:attribute name="tag">038</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:variable name="v038-a">
              <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pString" select="$vAdminMetadata/bflc:metadataLicensor/bflc:MetadataLicensor/rdfs:label|$vAdminMetadata/bflc:metadataLicensor/*[local-name()='Authority' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]/madsrdf:code[@rdf:datatype='http://id.loc.gov/datatypes/orgs/code']" />
              </xsl:call-template>
            </xslt:variable>
            <xslt:if test="$v038-a != ''">
              <marc:subfield code="a">
                <xslt:value-of select="$v038-a" />
              </marc:subfield>
            </xslt:if>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="$vAdminMetadata[bf:descriptionLevel or bf:descriptionConventions or bflc:encodingLevel]">
          <marc:datafield>
            <xslt:attribute name="tag">040</xslt:attribute>
            <xslt:variable name="vLanguageUri">
              <xslt:choose>
                <xslt:when test="$vAdminMetadata[bf:descriptionLevel or bf:descriptionConventions or bflc:encodingLevel]/bf:descriptionLanguage/@rdf:resource">
                  <xsl:value-of select="$vAdminMetadata/bf:descriptionLanguage/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vAdminMetadata[bf:descriptionLevel or bf:descriptionConventions or bflc:encodingLevel]/bf:descriptionLanguage/*/@rdf:about">
                  <xsl:value-of select="$vAdminMetadata/bf:descriptionLanguage/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="df040sfsPreNS">
              <xslt:choose>
                <xslt:when test="$vAdminMetadata/bflc:marcKey[starts-with(., '040')]">
                  <xsl:call-template name="tParseMarcKey" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pString" select="substring($vAdminMetadata/bflc:marcKey[starts-with(., '040')], 6)" />
                  </xsl:call-template>
                </xslt:when>
                <xslt:when test="$vAdminMetadata/bf:note/bf:Note[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/internal']/rdfs:label[starts-with(., '040')]">
                  <xsl:call-template name="tParseMarcKey" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pString" select="substring($vAdminMetadata/bf:note/bf:Note[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/internal']/rdfs:label[starts-with(., '040')], 6)" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="df040sfs" select="exsl:node-set($df040sfsPreNS)" />
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:variable name="vAuri">
              <xslt:choose>
                <xslt:when test="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]/bf:agent//@rdf:*">
                  <xsl:value-of select="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]/bf:agent//@rdf:*[1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vAdminMetadata/bf:assigner/@rdf:resource">
                  <xsl:value-of select="$vAdminMetadata/bf:assigner/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vAdminMetadata/bf:assigner/*/@rdf:about">
                  <xsl:value-of select="$vAdminMetadata/bf:assigner/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vAcode">
              <xslt:choose>
                <xslt:when test="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]/bf:agent//bf:code">
                  <xsl:value-of select="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]/bf:agent//bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vAdminMetadata/bf:assigner/*/*[local-name()='code']">
                  <xsl:value-of select="$vAdminMetadata/bf:assigner/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vAuri != '' and contains($vAuri,'id.loc.gov')">
                  <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="$vAuri" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vAcode = 'dlc'">
                <xslt:variable name="v040-a">
                  <xsl:value-of select="translate($vAcode,$lower,$upper)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-a != ''">
                  <marc:subfield code="a">
                    <xslt:value-of select="$v040-a" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
              <xslt:when test="$vAcode != ''">
                <xslt:variable name="v040-a">
                  <xsl:value-of select="$vAcode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-a != ''">
                  <marc:subfield code="a">
                    <xslt:value-of select="$v040-a" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="$vLanguageUri != '' and contains($vLanguageUri,'id.loc.gov')">
                <xslt:variable name="v040-b">
                  <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="$vLanguageUri" />
                  </xsl:call-template>
                </xslt:variable>
                <xslt:if test="$v040-b != ''">
                  <marc:subfield code="b">
                    <xslt:value-of select="$v040-b" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
              <xslt:when test="$vAdminMetadata[bf:descriptionConventions or bflc:encodingLevel]/bf:descriptionLanguage/*/*[local-name()='code']">
                <xslt:variable name="v040-b">
                  <xsl:value-of select="$vAdminMetadata[bf:descriptionConventions or bflc:encodingLevel]/bf:descriptionLanguage/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-b != ''">
                  <marc:subfield code="b">
                    <xslt:value-of select="$v040-b" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
            </xslt:choose>
            <xslt:for-each select="$vAdminMetadata[bf:descriptionConventions or bflc:encodingLevel]/bf:descriptionConventions[not(contains(@rdf:resource,'isbd')) and                           not(contains(*/@rdf:about,'isbd')) and                           not(*/rdf:value='isbd') and                           not(*/*[local-name()='code']='isbd') and                           not(*/rdfs:label='isbd') and                           not(contains(@rdf:resource,'aacr')) and                           not(contains(*/@rdf:about,'aacr')) and                           not(*/rdf:value='aacr') and                           not(*/*[local-name()='code']='aacr') and                           not(*/rdfs:label='aacr')]">
              <marc:subfield code="e">
                <xslt:variable name="vConvUri">
                  <xslt:choose>
                    <xslt:when test="@rdf:resource">
                      <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="*/@rdf:about">
                      <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vConvUri != '' and contains($vConvUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vConvUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:when test="*/rdf:value">
                    <xsl:value-of select="*/rdf:value" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="*/*[local-name()='code']">
                    <xsl:value-of select="*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="*/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </marc:subfield>
            </xslt:for-each>
            <xslt:choose>
              <xslt:when test="$df040sfs//marc:subfield[@code='c']">
                <xslt:variable name="v040-c">
                  <xsl:value-of select="$df040sfs//marc:subfield[@code='c'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-c != ''">
                  <marc:subfield code="c">
                    <xslt:value-of select="$v040-c" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
              <xslt:when test="$vAcode = 'dlc'">
                <xslt:variable name="v040-c">
                  <xsl:value-of select="translate($vAcode,$lower,$upper)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-c != ''">
                  <marc:subfield code="c">
                    <xslt:value-of select="$v040-c" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
              <xslt:when test="$vAcode != ''">
                <xslt:variable name="v040-c">
                  <xsl:value-of select="$vAcode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v040-c != ''">
                  <marc:subfield code="c">
                    <xslt:value-of select="$v040-c" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="count($vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']]) &gt; 0">
                <xsl:variable name="modifierCodePreNS" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <marc:codes>
                    <xsl:for-each select="$df040sfs//marc:subfield[@code='d']">
                      <marc:modifierCode>
                        <xsl:value-of select="." />
                      </marc:modifierCode>
                    </xsl:for-each>
                    <xsl:for-each select="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/c']]">
                      <xsl:sort select="bf:date" data-type="text" order="ascending" />
                      <xsl:variable name="mCode">
                        <xsl:choose>
                          <xsl:when test="bf:descriptionModifier//bf:code">
                            <xsl:value-of select="bf:descriptionModifier//bf:code" />
                          </xsl:when>
                          <xsl:when test="bf:agent//bf:code">
                            <xsl:value-of select="bf:agent//bf:code" />
                          </xsl:when>
                          <xsl:when test="bf:descriptionModifier//@rdf:*[1]">
                            <xsl:call-template name="tUriCode">
                              <xsl:with-param name="pUri" select="bf:descriptionModifier//@rdf:*[1]" />
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:when test="bf:agent//@rdf:*[1]">
                            <xsl:call-template name="tUriCode">
                              <xsl:with-param name="pUri" select="bf:agent//@rdf:*[1]" />
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:when test="preceding::bf:AdminMetadata//bf:descriptionModifier//bf:code">
                            <xsl:value-of select="preceding::bf:AdminMetadata//bf:descriptionModifier//bf:code" />
                          </xsl:when>
                          <xsl:when test="preceding::bf:AdminMetadata//bf:agent//bf:code">
                            <xsl:value-of select="preceding::bf:AdminMetadata//bf:agent//bf:code" />
                          </xsl:when>
                          <xsl:when test="preceding::bf:AdminMetadata//bf:descriptionModifier//@rdf:*[1]">
                            <xsl:call-template name="tUriCode">
                              <xsl:with-param name="pUri" select="preceding::bf:AdminMetadata//bf:descriptionModifier//@rdf:*[1]" />
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:when test="preceding::bf:AdminMetadata//bf:agent//@rdf:*[1]">
                            <xsl:call-template name="tUriCode">
                              <xsl:with-param name="pUri" select="preceding::bf:AdminMetadata//bf:agent//@rdf:*[1]" />
                            </xsl:call-template>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:variable>
                      <marc:modifierCode>
                        <xsl:choose>
                          <xsl:when test="$mCode = 'dlc'">DLC</xsl:when>
                          <xsl:when test="$mCode = 'dlcmrc'">DLCMRC</xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="$mCode" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:modifierCode>
                    </xsl:for-each>
                  </marc:codes>
                </xsl:variable>
                <xsl:variable name="modifierCodes" select="exsl:node-set($modifierCodePreNS)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:for-each select="$modifierCodes//marc:modifierCode[not(.=preceding::*[1])]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <marc:subfield code="d">
                    <xsl:value-of select="." />
                  </marc:subfield>
                </xsl:for-each>
              </xslt:when>
              <xslt:when test="count($vAdminMetadata/bf:descriptionModifier) &gt; 0">
                <xslt:variable name="vLastAgentUri">
                  <xslt:choose>
                    <xslt:when test="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/@rdf:resource">
                      <xsl:value-of select="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/*/@rdf:about">
                      <xsl:value-of select="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vModifierCode">
                  <xslt:choose>
                    <xslt:when test="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/*/*[local-name()='code']">
                      <xsl:value-of select="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vLastAgentUri != '' and contains($vLastAgentUri,'id.loc.gov')">
                      <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vLastAgentUri" />
                      </xsl:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xsl:value-of select="$vAdminMetadata/bf:descriptionModifier[count($vAdminMetadata/bf:descriptionModifier)]/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vModifierCode = 'dlc'">
                    <xslt:variable name="v040-d">
                      <xsl:value-of select="translate($vModifierCode,$lower,$upper)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:variable>
                    <xslt:if test="$v040-d != ''">
                      <marc:subfield code="d">
                        <xslt:value-of select="$v040-d" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="$vModifierCode != ''">
                    <xslt:variable name="v040-d">
                      <xsl:value-of select="$vModifierCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:variable>
                    <xslt:if test="$v040-d != ''">
                      <marc:subfield code="d">
                        <xslt:value-of select="$v040-d" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:language//@rdf:*[contains(., 'id.loc.gov/vocabulary/languages')] or bf:Work/bf:language/*/*[not(bf:source)]">
          <xslt:variable name="vAllLangElements" select="         bf:Work/bf:language/@rdf:resource[contains(., 'id.loc.gov/vocabulary/languages')] |         bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part)]//@rdf:about[contains(., 'id.loc.gov/vocabulary/languages')] |          bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part) and not(@rdf:about)] |          bf:Work/bf:language/bf:Language[not(bf:source) and bf:part] |         bf:Work/bf:accompaniedBy/bf:*[contains(rdf:type/@rdf:resource, 'id.loc.gov/vocabulary/resourceComponents')]/bf:language//@rdf:*[contains(., 'id.loc.gov/vocabulary/languages')][1] |         bf:Work/bf:note/bf:*[contains(rdf:type/@rdf:resource, 'id.loc.gov/vocabulary/resourceComponents')]/bf:language//@rdf:*[contains(., 'id.loc.gov/vocabulary/languages')][1]         " />
          <xslt:choose>
            <xslt:when test="count($vAllLangElements) &gt; 1">
              <marc:datafield>
                <xslt:attribute name="tag">041</xslt:attribute>
                <xslt:attribute name="ind1">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="bf:Work/bf:note/bf:Note[rdfs:label='Includes translation or is translation']">
                        <xslt:text>1</xslt:text>
                      </xslt:when>
                      <xslt:when test="bf:Work/bf:note/bf:Note[rdfs:label='Includes translation']">
                        <xslt:text>1</xslt:text>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:attribute name="ind2">
                  <xslt:text> </xslt:text>
                </xslt:attribute>
                <xsl:variable name="vLangElements" select="bf:Work/bf:language/@rdf:resource[contains(., 'id.loc.gov/vocabulary/languages')] |                                                      bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part)]//@rdf:about[contains(., 'id.loc.gov/vocabulary/languages')] |                                                       bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part) and not(@rdf:about)] |                                                       bf:Work/bf:language/bf:Language[not(bf:source) and bf:part]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="vFirstLangCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="starts-with($vLangElements[1],'http://id.loc.gov/vocabulary/languages/')">
                      <xsl:value-of select="substring-after($vLangElements[1],'http://id.loc.gov/vocabulary/languages/')" />
                    </xsl:when>
                    <xsl:when test="$vLangElements[1]/madsrdf:code">
                      <xsl:value-of select="$vLangElements[1]/madsrdf:code" />
                    </xsl:when>
                    <xsl:when test="starts-with($vLangElements[1]/rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                      <xsl:value-of select="substring-after($vLangElements[1]/rdf:value,'http://id.loc.gov/vocabulary/languages/')" />
                    </xsl:when>
                    <xsl:when test="starts-with($vLangElements[1]/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                      <xsl:value-of select="substring-after($vLangElements[1]/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')" />
                    </xsl:when>
                    <xsl:when test="$vLangElements[1]/rdf:value">
                      <xsl:value-of select="$vLangElements[1]/rdf:value" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vLangElements[1]/rdfs:label" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:for-each select="$vAllLangElements" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <marc:subfield code="a">
                        <xsl:value-of select="$vFirstLangCode" />
                      </marc:subfield>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="vLangCode">
                        <xsl:choose>
                          <xsl:when test="starts-with(.,'http://id.loc.gov/vocabulary/languages/')">
                            <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/languages/')" />
                          </xsl:when>
                          <xsl:when test="madsrdf:code">
                            <xsl:value-of select="madsrdf:code" />
                          </xsl:when>
                          <xsl:when test="starts-with(rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                            <xsl:value-of select="substring-after(rdf:value,'http://id.loc.gov/vocabulary/languages/')" />
                          </xsl:when>
                          <xsl:when test="starts-with(rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                            <xsl:value-of select="substring-after(rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')" />
                          </xsl:when>
                          <xsl:when test="rdf:value">
                            <xsl:value-of select="rdf:value" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdfs:label" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vLangCode != ''">
                        <xsl:variable name="vtype" select="ancestor::bf:accompaniedBy/bf:*/rdf:type/@rdf:resource[contains(., 'id.loc.gov/vocabulary/resourceComponents')]|ancestor::bf:note/bf:*/rdf:type/@rdf:resource[contains(., 'id.loc.gov/vocabulary/resourceComponents')]" />
                        <xsl:variable name="vSFcode">
                          <xsl:choose>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/res'">a</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/str'">a</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/sum'">b</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/stx'">d</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/lib'">e</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/toc'">f</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/amt'">g</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/otx'">h</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/int'">i</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/sub'">j</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/itr'">k</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/olb'">n</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/amt'">m</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/cap'">p</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/aud'">q</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/vis'">r</xsl:when>
                            <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/tav'">t</xsl:when>
                            <xsl:when test="bf:part='summary'">b</xsl:when>
                            <xsl:when test="bf:part='sung or spoken text'">d</xsl:when>
                            <xsl:when test="bf:part='libretto'">e</xsl:when>
                            <xsl:when test="bf:part='table of contents'">f</xsl:when>
                            <xsl:when test="bf:part='accompanying material'">g</xsl:when>
                            <xsl:when test="bf:part='original'">h</xsl:when>
                            <xsl:when test="bf:part='intertitles'">i</xsl:when>
                            <xsl:when test="bf:part='subtitles or captions'">j</xsl:when>
                            <xsl:when test="bf:part='intermediate translations'">k</xsl:when>
                            <xsl:when test="bf:part='original accompanying materials'">m</xsl:when>
                            <xsl:when test="bf:part='original libretto'">n</xsl:when>
                            <xsl:when test="bf:part='captions'">p</xsl:when>
                            <xsl:when test="bf:part='accessible audio'">q</xsl:when>
                            <xsl:when test="bf:part='accessible visual material'">r</xsl:when>
                            <xsl:when test="bf:part='accompanying transcripts'">t</xsl:when>
                            <xsl:otherwise>a</xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="$vSFcode" />
                          </xsl:attribute>
                          <xsl:value-of select="$vLangCode" />
                        </marc:subfield>
                      </xsl:if>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </marc:datafield>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:language//@rdf:*[(local-name='resource' or local-name='about') and not(contains(., 'id.loc.gov/vocabulary/languages'))] or bf:Work/bf:language/*/bf:source">
          <marc:datafield>
            <xslt:attribute name="tag">041</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:variable name="vInd">
                <xslt:choose>
                  <xslt:when test="bf:Work/bf:note/bf:Note[rdfs:label='Includes translation or is translation']">
                    <xslt:text>1</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:note/bf:Note[rdfs:label='Includes translation']">
                    <xslt:text>1</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="$vInd != ''">
                  <xslt:value-of select="$vInd" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text> </xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xsl:variable name="vLangElements" select="bf:Work/bf:language/@rdf:resource[not(contains(., 'id.loc.gov/vocabulary/languages'))] |             bf:Work/bf:language/bf:Language[bf:source and not(bf:part)]//@rdf:about[not(contains(., 'id.loc.gov/vocabulary/languages'))] |              bf:Work/bf:language/bf:Language[bf:source] |              bf:Work/bf:language/bf:Language[bf:source and bf:part]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            <xsl:variable name="vFirstLangCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:choose>
                <xsl:when test="starts-with($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-1/')">
                  <xsl:value-of select="substring-after($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-1/')" />
                </xsl:when>
                <xsl:when test="starts-with($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-2/')">
                  <xsl:value-of select="substring-after($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-2/')" />
                </xsl:when>
                <xsl:when test="starts-with($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-5/')">
                  <xsl:value-of select="substring-after($vLangElements[1],'http://id.loc.gov/vocabulary/iso639-5/')" />
                </xsl:when>
                <xsl:when test="$vLangElements[1]/madsrdf:code">
                  <xsl:value-of select="$vLangElements[1]/madsrdf:code" />
                </xsl:when>
                <xsl:when test="starts-with($vLangElements[1]/rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                  <xsl:value-of select="substring-after($vLangElements[1]/rdf:value,'http://id.loc.gov/vocabulary/languages/')" />
                </xsl:when>
                <xsl:when test="starts-with($vLangElements[1]/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                  <xsl:value-of select="substring-after($vLangElements[1]/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')" />
                </xsl:when>
                <xsl:when test="$vLangElements[1]/rdf:value">
                  <xsl:value-of select="$vLangElements[1]/rdf:value" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$vLangElements[1]/rdfs:label" />
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:for-each select="$vLangElements|             bf:Work/bf:accompaniedBy/bf:*[contains(rdf:type/@rdf:resource, 'id.loc.gov/vocabulary/resourceComponents')]/bf:language//@rdf:*[not(contains(., 'id.loc.gov/vocabulary/languages'))][1] |             bf:Work/bf:note/bf:*[contains(rdf:type/@rdf:resource, 'id.loc.gov/vocabulary/resourceComponents')]/bf:language//@rdf:*[not(contains(., 'id.loc.gov/vocabulary/languages'))][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <marc:subfield code="a">
                    <xsl:value-of select="$vFirstLangCode" />
                  </marc:subfield>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:variable name="vLangCode">
                    <xsl:choose>
                      <xsl:when test="starts-with(.,'http://id.loc.gov/vocabulary/iso639-1/')">
                        <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/iso639-1/')" />
                      </xsl:when>
                      <xsl:when test="starts-with(.,'http://id.loc.gov/vocabulary/iso639-2/')">
                        <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/iso639-2/')" />
                      </xsl:when>
                      <xsl:when test="starts-with(.,'http://id.loc.gov/vocabulary/iso639-5/')">
                        <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/iso639-5/')" />
                      </xsl:when>
                      <xsl:when test="madsrdf:code">
                        <xsl:value-of select="madsrdf:code" />
                      </xsl:when>
                      <xsl:when test="rdf:value">
                        <xsl:value-of select="rdf:value" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="rdfs:label" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$vLangCode != ''">
                    <xsl:variable name="vtype" select="ancestor::bf:accompaniedBy/bf:*/rdf:type/@rdf:resource[contains(., 'id.loc.gov/vocabulary/resourceComponents')]|ancestor::bf:note/bf:*/rdf:type/@rdf:resource[contains(., 'id.loc.gov/vocabulary/resourceComponents')]" />
                    <xsl:variable name="vSFcode">
                      <xsl:choose>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/res'">a</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/str'">a</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/sum'">b</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/stx'">d</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/lib'">e</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/toc'">f</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/amt'">g</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/otx'">h</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/int'">i</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/sub'">j</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/itr'">k</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/olb'">n</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/amt'">m</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/olb'">p</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/aud'">q</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/vis'">r</xsl:when>
                        <xsl:when test="$vtype='http://id.loc.gov/vocabulary/resourceComponents/tav'">t</xsl:when>
                        <xsl:when test="bf:part='summary'">b</xsl:when>
                        <xsl:when test="bf:part='sung or spoken text'">d</xsl:when>
                        <xsl:when test="bf:part='libretto'">e</xsl:when>
                        <xsl:when test="bf:part='table of contents'">f</xsl:when>
                        <xsl:when test="bf:part='accompanying material'">g</xsl:when>
                        <xsl:when test="bf:part='original'">h</xsl:when>
                        <xsl:when test="bf:part='intertitles'">i</xsl:when>
                        <xsl:when test="bf:part='subtitles or captions'">j</xsl:when>
                        <xsl:when test="bf:part='intermediate translations'">k</xsl:when>
                        <xsl:when test="bf:part='original accompanying materials'">m</xsl:when>
                        <xsl:when test="bf:part='original libretto'">n</xsl:when>
                        <xsl:when test="bf:part='captions'">p</xsl:when>
                        <xsl:when test="bf:part='accessible audio'">q</xsl:when>
                        <xsl:when test="bf:part='accessible visual material'">r</xsl:when>
                        <xsl:when test="bf:part='accompanying transcripts'">t</xsl:when>
                        <xsl:otherwise>a</xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="$vSFcode" />
                      </xsl:attribute>
                      <xsl:value-of select="$vLangCode" />
                    </marc:subfield>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
            <xslt:variable name="vSourceLang" select="bf:Work/bf:language/@rdf:resource[not(contains(., 'id.loc.gov/vocabulary/languages'))]|                                        bf:Work/bf:language/bf:Language[bf:source//@rdf:*[not(contains(., 'id.loc.gov/vocabulary/languages'))]]|                                        bf:Work/bf:language/bf:Language[bf:source]" />
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="$vSourceLang[1]/bf:source/@rdf:resource">
                  <xsl:value-of select="$vSourceLang[1]/bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vSourceLang[1]/bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="$vSourceLang[1]/bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <marc:subfield code="2">
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vSourceLang[1]/bf:source/bf:Source/*[local-name()='code']">
                  <xsl:value-of select="$vSourceLang[1]/bf:source/bf:Source/*[local-name()='code']" />
                </xsl:when>
                <xsl:when test="$vSourceUri != ''">
                  <xsl:choose>
                    <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                      <xsl:call-template name="tUriCode">
                        <xsl:with-param name="pUri" select="$vSourceUri" />
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vSourceUri" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="$vSourceLang[1]/bf:source/bf:Source/rdfs:label" />
                  </xsl:call-template>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="$vAdminMetadata/bf:descriptionAuthentication">
          <marc:datafield>
            <xslt:attribute name="tag">042</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:for-each select="$vAdminMetadata/bf:descriptionAuthentication">
              <marc:subfield code="a">
                <xslt:choose>
                  <xslt:when test="*/rdf:value">
                    <xsl:value-of select="*/rdf:value" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="*/*[local-name()='code']">
                    <xsl:value-of select="*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="starts-with(*/@rdf:about,'http://id.loc.gov/vocabulary/marcauthen/')">
                    <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/marcauthen/')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/marcauthen/')">
                    <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/marcauthen/')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: missing value from bf:descriptionAuthentication property</xsl:message>
                  </xslt:otherwise>
                </xslt:choose>
              </marc:subfield>
            </xslt:for-each>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="bf:Work/bf:geographicCoverage[                       contains(@rdf:resource,'id.loc.gov/vocabulary/geographicAreas') or                       contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/vocabulary/geographicAreas') or                       bf:GeographicCoverage/rdf:value or                        bf:GeographicCoverage/madsrdf:code  or                        madsrdf:Geographic/madsrdf:code]" mode="generate-043">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:temporalCoverage">
          <marc:datafield>
            <xslt:attribute name="tag">045</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:variable name="vInd">
                <xslt:choose>
                  <xslt:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and not (contains(.,'/'))]) = 1">
                    <xslt:text>0</xslt:text>
                  </xslt:when>
                  <xslt:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and not (contains(.,'/'))]) &gt; 1">
                    <xslt:text>1</xslt:text>
                  </xslt:when>
                  <xslt:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and contains(.,'/')]) = 1">
                    <xslt:text>2</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="$vInd != ''">
                  <xslt:value-of select="$vInd" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text> </xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:for-each select="bf:Work/bf:temporalCoverage[@rdf:datatype='http://id.loc.gov/datatypes/edtf' and contains(.,'X')]">
              <marc:subfield code="a">
                <xslt:choose>
                  <xslt:when test="contains(.,'/')">
                    <xsl:variable name="v045Date1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:variable name="vDate1">
                        <xsl:call-template name="EDTF-Date1">
                          <xsl:with-param name="pEDTFDate" select="." />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="starts-with($vDate1,'-')">
                          <xsl:value-of select="exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vDate1]/code" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vDate1,1,2)]/code" />
                          <xsl:variable name="vDecade">
                            <xsl:choose>
                              <xsl:when test="substring($vDate1,3,1)='X'">-</xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="substring($vDate1,3,1)" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:value-of select="concat($vCentury,$vDecade)" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="v045Date2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:variable name="vDate2">
                        <xsl:call-template name="EDTF-Date2">
                          <xsl:with-param name="pEDTFDate" select="." />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="starts-with($vDate2,'-')">
                          <xsl:value-of select="exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vDate2]/code" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vDate2,1,2)]/code" />
                          <xsl:variable name="vDecade">
                            <xsl:choose>
                              <xsl:when test="substring($vDate2,3,1)='X'">-</xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="substring($vDate2,3,1)" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:value-of select="concat($vCentury,$vDecade)" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:value-of select="concat($v045Date1,$v045Date2)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:choose>
                      <xslt:when test="starts-with(.,'-')">
                        <xsl:variable name="vEdtfDate" select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        <xsl:value-of select="concat(exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vEdtfDate]/code,exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vEdtfDate]/code)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:variable name="vEdtfDate" select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vEdtfDate,1,2)]/code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="substring($vEdtfDate,3,1)='X'">
                            <xsl:value-of select="concat($vCentury,'-',$vCentury,'-')" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="concat($vCentury,substring($vEdtfDate,3,1),$vCentury,substring($vEdtfDate,3,1))" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:otherwise>
                </xslt:choose>
              </marc:subfield>
            </xslt:for-each>
            <xslt:for-each select="bf:Work/bf:temporalCoverage[not(contains(.,'X'))]">
              <xslt:choose>
                <xslt:when test="@rdf:datatype='http://id.loc.gov/datatypes/edtf' and contains(.,'/')">
                  <xsl:variable name="vDate1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="EDTF-Date1">
                      <xsl:with-param name="pEDTFDate" select="." />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:variable name="vDate2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="EDTF-Date2">
                      <xsl:with-param name="pEDTFDate" select="." />
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="b">
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:when test="substring($vDate1,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate($vDate1,' -:T',''))" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate($vDate1,' -:T',''))" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                  <marc:subfield code="b">
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:when test="substring($vDate2,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate($vDate2,' -:T',''))" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate($vDate2,' -:T',''))" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                </xslt:when>
                <xslt:when test="(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not (contains(.,'/'))">
                  <marc:subfield code="b">
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:when test="substring(.,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate(.,' -:T',''))" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate(.,' -:T',''))" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                </xslt:when>
                <xslt:otherwise>
                  <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: no datatype for bf:temporalCoverage predicate, putting unformatted string into 045 $b</xsl:message>
                  <marc:subfield code="b">
                    <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pString" select="." />
                    </xsl:call-template>
                  </marc:subfield>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="bf:Work/bf:originDate[@rdf:datatype='http://id.loc.gov/datatypes/edtf']" mode="generate-046">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:instrument/bf:MusicInstrument or       bf:Work/bf:ensemble/bf:MusicEnsemble or       bf:Work/bf:voice/bf:MusicVoice">
          <marc:datafield>
            <xslt:attribute name="tag">048</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:for-each select="bf:Work/bf:instrument/bf:MusicInstrument|bf:Work/bf:ensemble/bf:MusicEnsemble|bf:Work/bf:voice/bf:MusicVoice">
              <xslt:variable name="v048-a">
                <xsl:variable name="vType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="local-name() = 'MusicInstrument'">
                      <xsl:value-of select="bf:instrumentalType" />
                    </xsl:when>
                    <xsl:when test="local-name() = 'MusicEnsemble'">
                      <xsl:value-of select="bf:ensembleType" />
                    </xsl:when>
                    <xsl:when test="local-name() = 'MusicVoice'">
                      <xsl:value-of select="bf:voiceType" />
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:value-of select="rdfs:label" />
                </xsl:variable>
                <xsl:variable name="vCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="rdfs:label and $vType != ''">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($df048performers)/performer[type=$vType and label=$vLabel]">
                          <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and label=$vLabel]/code" />
                        </xsl:when>
                        <xsl:when test="exsl:node-set($df048performers)/performer[type=$vType and not(label)]">
                          <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and not(label)]/code" />
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vType != ''">
                      <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and not(label)]/code" />
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vCount" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:if test="bf:count">
                    <xsl:value-of select="format-number(bf:count,'00')" />
                  </xsl:if>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$vCode != ''">
                    <xsl:value-of select="concat($vCode,$vCount)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId" />: no 048 performer match for <xsl:value-of select="name()" />[<xsl:value-of select="position()" />]</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xslt:variable>
              <xslt:if test="$v048-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v048-a" />
                </marc:subfield>
              </xslt:if>
            </xslt:for-each>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="bf:Work/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-050">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="//bf:Item[(bf:heldBy/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or *[local-name()='label']='United States, Library of Congress' or *[local-name()='code']='DLC'] or bf:heldBy[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc']) and bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']]">
        <marc:datafield>
          <xslt:attribute name="tag">051</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:for-each select="bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']/rdfs:label[. != '']">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 051 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']/bf:note/bf:Note/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="c">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 051 $c.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </marc:datafield>
      </xslt:for-each>
      <xslt:apply-templates select="//bf:Item/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-051">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/authorities/classification/G') or                contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/authorities/classification/G')]" mode="generate-052">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/*[(local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */@rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada']]" mode="generate-055">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/*[local-name()='ClassificationNlm' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationNlm']" mode="generate-060">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="//@xml:lang[generate-id() = generate-id(key('langs',.)[1])]" mode="generate-066">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/bf:ClassificationNal|bf:Work/bf:classification/bf:Classification[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or                     bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal']" mode="generate-070">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:subject/bf:Topic[*[local-name()='code']]" mode="generate-072">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo']" mode="generate-074">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/*[(local-name()='ClassificationDdc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationDdc') and bf:classificationPortion/text()]" mode="generate-082">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/bf:Classification[not(                                                                       rdf:type or                                                                        bf:assigner//@rdf:*[contains(., 'dnal')] or                                                                        bf:source//@rdf:*[contains(., 'sudocs')] or                                                                        bf:source//@rdf:*[contains(., 'cacodoc')]                                                                 )]" mode="generate-084">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="//bf:Item/bf:shelfMark/bf:ShelfMark[not(rdf:type)]" mode="generate-084">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:classification/bf:Classification[bf:source//@rdf:*[contains(., 'sudocs') or contains(., 'cacodoc')]]" mode="generate-086">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='ReportNumber' or rdf:type='http://id.loc.gov/ontologies/bibframe/ReportNumber']" mode="generate-088">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent[@rdf:resource]|       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/bf:* |       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/madsrdf:*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent[@rdf:resource]|       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/bf:* |       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/madsrdf:*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="agentURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/authorities/names')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/rwo/agents')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/rwo/agents')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuthPreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$agentURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
            <xslt:variable name="vMainEntryTag">
              <xslt:choose>
                <xslt:when test="$vNameAuth//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='100']">
                      <xslt:text>100</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='110']">
                      <xslt:text>110</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='111']">
                      <xslt:text>111</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
                      <xslt:text>110</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vAuthSubfields">
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='110'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='111'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="rdfs:label/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">
                    <xslt:value-of select="$vMainEntryTag" />
                  </xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
                          <xsl:value-of select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:choose>
                            <xslt:when test="contains(local-name(),'Family')">
                              <xslt:text>3</xslt:text>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:text>1</xslt:text>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='110'">
                          <xslt:choose>
                            <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                              <xslt:text>1</xslt:text>
                            </xslt:when>
                            <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
                              <xslt:text>1</xslt:text>
                            </xslt:when>
                          </xslt:choose>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>2</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
                      <xsl:for-each select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="vvMainEntryTag-a">
                        <xslt:choose>
                          <xslt:when test="$vMainEntryTag='100'">
                            <xslt:choose>
                              <xslt:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                                <xslt:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:when test="madsrdf:authoritativeLabel">
                                <xslt:for-each select="madsrdf:authoritativeLabel">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:for-each select="rdfs:label">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:choose>
                              <xslt:when test="madsrdf:elementList">
                                <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:when test="madsrdf:authoritativeLabel">
                                <xslt:for-each select="madsrdf:authoritativeLabel">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:for-each select="rdfs:label">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvMainEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$vvMainEntryTag-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='110'">
                          <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='111'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $q.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='111'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                        <marc:subfield code="e">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="../bf:role/@rdf:resource">
                        <marc:subfield code="e">
                          <xsl:if test="contains(., 'id.loc.gov/vocabulary/relators/')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:value-of select="substring-after(., 'vocabulary/relators/')" />
                          </xsl:if>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vMainEntryTag='111'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                        <marc:subfield code="j">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]|../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="                 ../../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))] |                  ../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xslt:variable name="vvMainEntryTag-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvMainEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$vvMainEntryTag-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:variable name="vvMainEntryTag-0">
                    <xslt:choose>
                      <xslt:when test="$agentURI != '' and contains($agentURI, '/authorities/')">
                        <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$agentURI != '' and contains($agentURI, 'id.loc.gov/rwo/agents/')">
                        <xsl:value-of select="concat(substring-before($agentURI,'rwo/agents'), 'authorities/names/', substring-after($agentURI,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="@rdf:about[             not(contains(.,'example.org')) and              not(contains(.,'REPLACE')) and              not(contains(., '/agents/')) and             not(contains(., '/isni/')) and             not(contains(., '/gnd/'))             ]">
                        <xslt:for-each select="@rdf:about[               not(contains(.,'example.org')) and                not(contains(.,'REPLACE')) and                not(contains(., '/agents/')) and               not(contains(., '/isni/')) and               not(contains(., '/gnd/'))               ]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $0.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$vvMainEntryTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvMainEntryTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="vvMainEntryTag-1">
                    <xslt:choose>
                      <xslt:when test="$agentURI != '' and (contains($agentURI, '/agents/') or contains($agentURI, '/gnd/'))">
                        <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="@rdf:about[             contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')              ]">
                        <xslt:for-each select="@rdf:about[               contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')               ]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $1.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$vvMainEntryTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvMainEntryTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (vMainEntryTag).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent[@rdf:resource]|       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/bf:* |       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/madsrdf:*">
            <xslt:variable name="agentURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/authorities/names')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/rwo/agents')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/rwo/agents')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuthPreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$agentURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
            <xslt:variable name="vMainEntryTag">
              <xslt:choose>
                <xslt:when test="$vNameAuth//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='100']">
                      <xslt:text>100</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='110']">
                      <xslt:text>110</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='111']">
                      <xslt:text>111</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
                      <xslt:text>110</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vAuthSubfields">
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='110'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='111'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="rdfs:label/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">
                    <xslt:value-of select="$vMainEntryTag" />
                  </xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
                          <xsl:value-of select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:choose>
                            <xslt:when test="contains(local-name(),'Family')">
                              <xslt:text>3</xslt:text>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:text>1</xslt:text>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='110'">
                          <xslt:choose>
                            <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                              <xslt:text>1</xslt:text>
                            </xslt:when>
                            <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
                              <xslt:text>1</xslt:text>
                            </xslt:when>
                          </xslt:choose>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>2</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
                      <xsl:for-each select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="vvMainEntryTag-a">
                        <xslt:choose>
                          <xslt:when test="$vMainEntryTag='100'">
                            <xslt:choose>
                              <xslt:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                                <xslt:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:when test="madsrdf:authoritativeLabel">
                                <xslt:for-each select="madsrdf:authoritativeLabel">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:for-each select="rdfs:label">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:choose>
                              <xslt:when test="madsrdf:elementList">
                                <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:when test="madsrdf:authoritativeLabel">
                                <xslt:for-each select="madsrdf:authoritativeLabel">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:for-each select="rdfs:label">
                                  <xslt:choose>
                                    <xslt:when test="position() = 1">
                                      <xslt:call-template name="tChopPunct">
                                        <xslt:with-param name="pString" select="." />
                                      </xslt:call-template>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:for-each>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvMainEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$vvMainEntryTag-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='110'">
                          <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='111'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vMainEntryTag='100'">
                          <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $q.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:when test="$vMainEntryTag='111'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                        <marc:subfield code="e">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="../bf:role/@rdf:resource">
                        <marc:subfield code="e">
                          <xsl:if test="contains(., 'id.loc.gov/vocabulary/relators/')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:value-of select="substring-after(., 'vocabulary/relators/')" />
                          </xsl:if>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vMainEntryTag='111'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                        <marc:subfield code="j">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]|../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="                 ../../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))] |                  ../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xslt:variable name="vvMainEntryTag-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvMainEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$vvMainEntryTag-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:variable name="vvMainEntryTag-0">
                    <xslt:choose>
                      <xslt:when test="$agentURI != '' and contains($agentURI, '/authorities/')">
                        <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$agentURI != '' and contains($agentURI, 'id.loc.gov/rwo/agents/')">
                        <xsl:value-of select="concat(substring-before($agentURI,'rwo/agents'), 'authorities/names/', substring-after($agentURI,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="@rdf:about[             not(contains(.,'example.org')) and              not(contains(.,'REPLACE')) and              not(contains(., '/agents/')) and             not(contains(., '/isni/')) and             not(contains(., '/gnd/'))             ]">
                        <xslt:for-each select="@rdf:about[               not(contains(.,'example.org')) and                not(contains(.,'REPLACE')) and                not(contains(., '/agents/')) and               not(contains(., '/isni/')) and               not(contains(., '/gnd/'))               ]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $0.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$vvMainEntryTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvMainEntryTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="vvMainEntryTag-1">
                    <xslt:choose>
                      <xslt:when test="$agentURI != '' and (contains($agentURI, '/agents/') or contains($agentURI, '/gnd/'))">
                        <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="@rdf:about[             contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')              ]">
                        <xslt:for-each select="@rdf:about[               contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')               ]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $1.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$vvMainEntryTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvMainEntryTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (vMainEntryTag).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:expressionOf/bf:*[(local-name() = 'Hub' or local-name() = 'Work') and                                                    bf:title and                                                    not(../../bf:contribution/bf:PrimaryContribution) and                                                    not(../../bf:contribution/bflc:PrimaryContribution) and                                                    not(../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')])                                             ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:expressionOf/bf:*[(local-name() = 'Hub' or local-name() = 'Work') and                                                    bf:title and                                                    not(../../bf:contribution/bf:PrimaryContribution) and                                                    not(../../bf:contribution/bflc:PrimaryContribution) and                                                    not(../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')])                                             ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="vTitleResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="@rdf:about" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">130</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="$xslProcessor='libxslt' and contains(@rdf:about, 'resources/hubs') and not(bflc:marcKey)">
                      <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 130 output.</xsl:message>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                          <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
                      <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="v130-a">
                        <xslt:choose>
                          <xslt:when test="bf:title/bf:Title/rdfs:label">
                            <xslt:for-each select="bf:title/bf:Title/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                            <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v130-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v130-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="bf:legalDate">
                        <marc:subfield code="d">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:originDate">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="f">
                              <xslt:value-of select="." />
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $f.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                        <marc:subfield code="m">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                        <marc:subfield code="n">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:title/bf:Title/bf:partName">
                        <marc:subfield code="p">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:choose>
                        <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                          <marc:subfield code="o">arranged</marc:subfield>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:for-each select="bf:musicKey">
                        <marc:subfield code="r">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:version">
                        <marc:subfield code="s">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (130).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:expressionOf/bf:*[(local-name() = 'Hub' or local-name() = 'Work') and                                                    bf:title and                                                    not(../../bf:contribution/bf:PrimaryContribution) and                                                    not(../../bf:contribution/bflc:PrimaryContribution) and                                                    not(../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')])                                             ]">
            <xslt:variable name="vTitleResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="@rdf:about" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">130</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="$xslProcessor='libxslt' and contains(@rdf:about, 'resources/hubs') and not(bflc:marcKey)">
                      <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 130 output.</xsl:message>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                          <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
                      <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="v130-a">
                        <xslt:choose>
                          <xslt:when test="bf:title/bf:Title/rdfs:label">
                            <xslt:for-each select="bf:title/bf:Title/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                            <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v130-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v130-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="bf:legalDate">
                        <marc:subfield code="d">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:originDate">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="f">
                              <xslt:value-of select="." />
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $f.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                        <marc:subfield code="m">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                        <marc:subfield code="n">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:title/bf:Title/bf:partName">
                        <marc:subfield code="p">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:choose>
                        <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                          <marc:subfield code="o">arranged</marc:subfield>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:for-each select="bf:musicKey">
                        <marc:subfield code="r">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="bf:version">
                        <marc:subfield code="s">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (130).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:apply-templates select="bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']] |                     bf:Work/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]" mode="generate-210">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:title/*[local-name() = 'KeyTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]" mode="generate-222">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:expressionOf[contains(@rdf:resource, 'hubs')][../bf:contribution/*[local-name()='PrimaryContribution'] or ../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]] |                     bf:Work/bf:expressionOf/bf:*[contains(@rdf:about, 'hubs') or bflc:marcKey or marc:record][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:expressionOf[contains(@rdf:resource, 'hubs')][../bf:contribution/*[local-name()='PrimaryContribution'] or ../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]] |                     bf:Work/bf:expressionOf/bf:*[contains(@rdf:about, 'hubs') or bflc:marcKey or marc:record][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">240</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$xslProcessor='libxslt' and contains($relURI, 'resources/hubs') and not(bflc:marcKey)">
                  <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 240 output.</xsl:message>
                </xslt:when>
              </xslt:choose>
              <xslt:attribute name="ind1">
                <xslt:text>1</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text>0</xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[@tag = '240']">
                  <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[(@code = 't' or preceding-sibling::marc:subfield[@code = 't']) and contains('dgfhklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="translate(@code, 't', 'a')" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:variable name="v240-1">
                <xslt:choose>
                  <xslt:when test="$relURI != ''">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v240-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$v240-1" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:expressionOf[contains(@rdf:resource, 'hubs')][../bf:contribution/*[local-name()='PrimaryContribution'] or ../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]] |                     bf:Work/bf:expressionOf/bf:*[contains(@rdf:about, 'hubs') or bflc:marcKey or marc:record][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]       ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">240</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$xslProcessor='libxslt' and contains($relURI, 'resources/hubs') and not(bflc:marcKey)">
                  <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 240 output.</xsl:message>
                </xslt:when>
              </xslt:choose>
              <xslt:attribute name="ind1">
                <xslt:text>1</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text>0</xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[@tag = '240']">
                  <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[(@code = 't' or preceding-sibling::marc:subfield[@code = 't']) and contains('dgfhklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="translate(@code, 't', 'a')" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:variable name="v240-1">
                <xslt:choose>
                  <xslt:when test="$relURI != ''">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v240-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$v240-1" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:expressionOf/child::node()[         not(contains(@rdf:resource, 'hubs')) and not(contains(@rdf:about, 'hubs')) and          not(contains(@rdf:resource, 'REPLACE')) and not(contains(@rdf:about, 'REPLACE')) and          not(bflc:marcKey or marc:record) and          (local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:expressionOf/child::node()[         not(contains(@rdf:resource, 'hubs')) and not(contains(@rdf:about, 'hubs')) and          not(contains(@rdf:resource, 'REPLACE')) and not(contains(@rdf:about, 'REPLACE')) and          not(bflc:marcKey or marc:record) and          (local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">240</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:text>1</xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                          <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:variable name="v240-a">
                    <xslt:choose>
                      <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                        <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v240-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v240-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (240).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:expressionOf/child::node()[         not(contains(@rdf:resource, 'hubs')) and not(contains(@rdf:about, 'hubs')) and          not(contains(@rdf:resource, 'REPLACE')) and not(contains(@rdf:about, 'REPLACE')) and          not(bflc:marcKey or marc:record) and          (local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">240</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:text>1</xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                          <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:variable name="v240-a">
                    <xslt:choose>
                      <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                        <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v240-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v240-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (240).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:apply-templates select="bf:Instance/bf:title/*[(local-name() = 'VariantTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']) and bf:variantType = 'translated']" mode="generate-242">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">243</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:text>1</xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bflc:nonSortNum">
                          <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 243 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (243).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ]">
            <xslt:choose>
              <xslt:when test="position()=1">
                <xslt:variable name="vXmlLang">
                  <xslt:value-of select="bf:mainTitle/@xml:lang" />
                </xslt:variable>
                <marc:datafield>
                  <xslt:attribute name="tag">243</xslt:attribute>
                  <xslt:if test="$vXmlLang != ''">
                    <xslt:attribute name="xml:lang">
                      <xslt:value-of select="$vXmlLang" />
                    </xslt:attribute>
                  </xslt:if>
                  <xslt:attribute name="ind1">
                    <xslt:text>1</xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bflc:nonSortNum">
                          <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 243 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (243).</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:apply-templates select="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:title/bf:Title[not(rdf:type)]|bf:Work[not(../bf:Instance/bf:title/bf:Title[not(rdf:type)])]/bf:title/bf:Title[not(rdf:type)]" mode="generate-245">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:title/bf:Title[not(rdf:type)]|bf:Work[not(../bf:Instance/bf:title/bf:Title[not(rdf:type)])]/bf:title/bf:Title[not(rdf:type)]">
        <xslt:variable name="v880Script">
          <xslt:variable name="vlang">
            <xslt:value-of select="translate(substring-after(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]/@xml:lang,'-'),$upper,$lower)" />
          </xslt:variable>
          <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="position()=1 and (count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])">
            <marc:datafield>
              <xslt:attribute name="tag">880</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="bflc:nonSortNum[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:value-of select="bflc:nonSortNum[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and                           (string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) &lt; string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]))">
                      <xsl:value-of select="string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) - string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:variable name="v880-6">
                <xslt:choose>
                  <xslt:when test="$v880Script != ''">
                    <xsl:value-of select="concat('245-01/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>245-01</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xslt:value-of select="$v880-6" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="v880-a">
                <xslt:choose>
                  <xslt:when test="bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xslt:for-each select="bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="                   bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and                   not(                     substring(                       bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))],                        string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]),                       1) = '.'                   )                 ">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">.</xsl:text>
                  </xslt:when>
                  <xslt:when test="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">.</xsl:text>
                  </xslt:when>
                  <xslt:when test="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
                  </xslt:when>
                  <xslt:when test="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v880-a" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="v880-n">
                <xslt:variable name="nExists">
                  <xslt:choose>
                    <xslt:when test="bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xslt:for-each select="bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $n.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="$nExists='1' and bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">.</xsl:text>
                  </xslt:when>
                  <xslt:when test="$nExists='1' and bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
                  </xslt:when>
                  <xslt:when test="$nExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-n != ''">
                <marc:subfield code="n">
                  <xslt:value-of select="$v880-n" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="v880-p">
                <xslt:variable name="pExists">
                  <xslt:choose>
                    <xslt:when test="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xslt:for-each select="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $p.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="$pExists='1' and bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
                  </xslt:when>
                  <xslt:when test="$pExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-p != ''">
                <marc:subfield code="p">
                  <xslt:value-of select="$v880-p" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="v880-b">
                <xslt:variable name="bExists">
                  <xslt:choose>
                    <xslt:when test="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xslt:for-each select="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $b.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="$bExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-b != ''">
                <marc:subfield code="b">
                  <xslt:value-of select="$v880-b" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="v880-c">
                <xslt:choose>
                  <xslt:when test="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <xslt:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:value-of select="." />
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $c.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:variable name="vEndsWith">
                      <xsl:call-template name="tEndsWith" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pStr" select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" />
                        <xsl:with-param name="pEndChar" select="'.'" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xsl:if test="$vEndsWith = '0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:text>.</xsl:text>
                    </xsl:if>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v880-c != ''">
                <marc:subfield code="c">
                  <xslt:value-of select="$v880-c" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="                       bf:*[local-name()='Instance' or local-name()='Work']/bf:title/bf:*[(                         local-name()='VariantTitle' or                         local-name()='ParallelTitle' or                         local-name()='TranscribedTitle' or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                       ) and                          not(bf:variantType = 'translated') and                         not(bf:variantType = 'former') and                         bf:mainTitle]                       |                       bf:Instance/bf:hasItem/bf:Item/bf:title/bf:*[                         bflc:applicableInstitution/*/bf:code='DLC' and                          (                         local-name()='VariantTitle' or                         local-name()='ParallelTitle' or                         local-name()='TranscribedTitle' or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                       ) and                        not(bf:variantType = 'translated') and                       not(bf:variantType = 'former') and                       bf:mainTitle]                     " mode="generate-246">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="//bf:title/*[(                       local-name()='VariantTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']                     ) and                     bf:variantType = 'former']" mode="generate-247">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Instance/bf:editionStatement">
        <xslt:variable name="v880Script">
          <xslt:choose>
            <xslt:when test="@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xslt:variable name="vlang">
                <xslt:value-of select="translate(substring-after(@xml:lang,'-'),$upper,$lower)" />
              </xslt:variable>
              <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$v880Script != ''">
            <marc:datafield>
              <xslt:attribute name="tag">880</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="ancestor::bf:Instance/bf:editionStatement[not(@xml:lang)]">
                  <xslt:variable name="v880-6">
                    <xsl:value-of select="concat('250-25/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v880-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v880-6" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:variable name="v880-6">
                    <xsl:value-of select="concat('250-00/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v880-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v880-6" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:otherwise>
              </xslt:choose>
              <xslt:variable name="v880-a">
                <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="vEndsWith" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <transform xmlns="http://www.loc.gov/bf2marc">
                    <xsl:call-template name="tEndsWith">
                      <xsl:with-param name="pStr" select="." />
                      <xsl:with-param name="pEndChar" select="'.'" />
                    </xsl:call-template>
                  </transform>
                </xsl:variable>
                <xsl:if test="$vEndsWith = '0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:text>.</xsl:text>
                </xsl:if>
              </xslt:variable>
              <xslt:if test="$v880-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v880-a" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:when>
          <xslt:otherwise>
            <marc:datafield>
              <xslt:attribute name="tag">250</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="ancestor::bf:Instance/bf:editionStatement[@xml:lang]">
                  <xslt:variable name="v250-6">
                    <xsl:value-of select="'880-25'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v250-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v250-6" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:variable name="v250-a">
                <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="vEndsWith" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <transform xmlns="http://www.loc.gov/bf2marc">
                    <xsl:call-template name="tEndsWith">
                      <xsl:with-param name="pStr" select="." />
                      <xsl:with-param name="pEndChar" select="'.'" />
                    </xsl:call-template>
                  </transform>
                </xsl:variable>
                <xsl:if test="$vEndsWith = '0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:text>.</xsl:text>
                </xsl:if>
              </xslt:variable>
              <xslt:if test="$v250-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v250-a" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Work/bf:scale[not(bf:Scale)]" mode="generate-255">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Work/bf:scale/bf:Scale/rdfs:label">
        <xslt:choose>
          <xslt:when test="translate(.,$upper,$lower) != 'linear scale'">
            <marc:datafield>
              <xslt:attribute name="tag">255</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <marc:subfield code="a">
                <xslt:value-of select="." />
              </marc:subfield>
            </marc:datafield>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Work/bf:scale/bf:Scale/bf:note/bf:Note/rdfs:label" mode="generate-255">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:cartographicAttributes/bf:Cartographic[bf:projection or                     bf:coordinates or                     bf:ascensionAndDeclination or                     bf:equinox or                     bf:outerGRing or                     bf:exclusionGRing]" mode="generate-255">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:originPlace/bf:Place" mode="generate-257">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bflc:projectedProvisionDate" mode="generate-263">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Instance/bf:provisionActivity/*[                     (local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production'] or                     local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution'] or                     local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture'] or                     local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication']) and                     (                       (bflc:simplePlace or bflc:simpleAgent or bflc:simpleDate) or                        (bf:place/bf:*[not(@rdf:about)]/rdfs:label or bf:agent/bf:*[not(@rdf:about)]/rdfs:label or bf:date[not(@rdf:datatype)])                     )]">
        <xslt:variable name="serlORintg">
          <xslt:choose>
            <xslt:when test="ancestor::bf:Instance/bf:issuance//@rdf:*[. = 'http://id.loc.gov/vocabulary/issuance/serl']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Instance/bf:issuance//@rdf:*[. = 'http://id.loc.gov/vocabulary/issuance/intg']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>0</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="v264type">
          <xslt:choose>
            <xslt:when test="local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>1</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="v264typeCount">
          <xslt:choose>
            <xslt:when test="$v264type='1'">
              <xsl:value-of select="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication'])])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$v264type='0'">
              <xsl:value-of select="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production'])])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$v264type='2'">
              <xsl:value-of select="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution'])])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$v264type='3'">
              <xsl:value-of select="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture'])])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="v880Script">
          <xslt:choose>
            <xslt:when test="bflc:simplePlace/@xml:lang and not(contains(translate(bflc:simplePlace/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xslt:variable name="vlang">
                <xslt:value-of select="translate(substring-after(bflc:simplePlace/@xml:lang,'-'),$upper,$lower)" />
              </xslt:variable>
              <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
            </xslt:when>
            <xslt:when test="bf:place/*/rdfs:label/@xml:lang and not(contains(translate(bf:place/*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xslt:variable name="vlang">
                <xslt:value-of select="translate(substring-after(bf:place/*/rdfs:label/@xml:lang,'-'),$upper,$lower)" />
              </xslt:variable>
              <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="v880Occurence">
          <xsl:value-of select="10+position()" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$v880Occurence &lt; 21">
            <marc:datafield>
              <xslt:attribute name="tag">264</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$serlORintg='1' and $v264typeCount='1'">
                      <xslt:text> </xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='1' and $v264typeCount!='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/current']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='1' and $v264typeCount!='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/ceased']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/earliest']">
                      <xslt:text> </xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='1' and $v264typeCount!='1' and not(bf:status/bf:Status)">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='2' and $v264typeCount='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/current']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="$serlORintg='2' and $v264typeCount='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/ceased']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>1</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$v880Script != ''">
                  <xslt:variable name="v264-6">
                    <xsl:value-of select="concat('880-',$v880Occurence)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v264-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v264-6" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 264 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:for-each select="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="a">
                      <xsl:value-of select="." />
                      <xsl:if test="following-sibling::bflc:simplePlace[not(@xml:lang)]">
                        <xsl:text> ;</xsl:text>
                      </xsl:if>
                      <xsl:if test="position() = last()">
                        <xsl:if test="../bflc:simpleAgent[not(@xml:lang)]">
                          <xsl:text> :</xsl:text>
                        </xsl:if>
                        <xsl:if test="not(../bflc:simpleAgent[not(@xml:lang)]) and ../bflc:simpleDate[not(@xml:lang)]">
                          <xsl:text> ,</xsl:text>
                        </xsl:if>
                      </xsl:if>
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:when test="bf:place/*[                       (local-name()='Place' or local-name()='Geographic' or local-name()='Authority' or local-name()='Resource') and                       rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]                      ]">
                  <xslt:for-each select="bf:place/*/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <marc:subfield code="a">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="bf:place/*[                       (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                       madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]                      ]">
                  <xslt:for-each select="bf:place/*/madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <marc:subfield code="a">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:for-each select="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="b">
                      <xsl:value-of select="." />
                      <xsl:if test="following-sibling::bflc:simpleAgent[not(@xml:lang)]">
                        <xsl:text>,</xsl:text>
                      </xsl:if>
                      <xsl:if test="position() = last()">
                        <xsl:if test="../bflc:simpleDate[not(@xml:lang)]">
                          <xsl:text>,</xsl:text>
                        </xsl:if>
                      </xsl:if>
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:when test="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:for-each select="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <marc:subfield code="b">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:for-each select="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="c">
                      <xsl:value-of select="." />
                      <xsl:if test="following-sibling::bflc:simpleDate[not(@xml:lang)]">
                        <xsl:text>,</xsl:text>
                      </xsl:if>
                      <xsl:if test="position() = last()">
                        <xsl:variable name="vEndsWith">
                          <xsl:call-template name="tEndsWith">
                            <xsl:with-param name="pStr" select="." />
                            <xsl:with-param name="pEndChar" select="'.'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:if test="$vEndsWith = '0'">
                          <xsl:text>.</xsl:text>
                        </xsl:if>
                      </xsl:if>
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:when test="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:for-each select="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <marc:subfield code="c">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
            <xslt:choose>
              <xslt:when test="$v880Script != ''">
                <marc:datafield>
                  <xslt:attribute name="tag">880</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current'">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                        <xslt:when test="bf:status/@rdf:resource = 'http://id.loc.gov/vocabulary/mstatus/current'">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text> </xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">
                          <xslt:text>0</xslt:text>
                        </xslt:when>
                        <xslt:when test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">
                          <xslt:text>2</xslt:text>
                        </xslt:when>
                        <xslt:when test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>1</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:variable name="v880-6">
                    <xsl:value-of select="concat('264-',$v880Occurence,'/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v880-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v880-6" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:for-each select="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield code="a">
                          <xsl:value-of select="." />
                          <xsl:if test="following-sibling::bflc:simplePlace[@xml:lang]">
                            <xsl:text> ;</xsl:text>
                          </xsl:if>
                          <xsl:if test="position() = last()">
                            <xsl:if test="../bflc:simpleAgent[@xml:lang]">
                              <xsl:text> :</xsl:text>
                            </xsl:if>
                            <xsl:if test="not(../bflc:simpleAgent[@xml:lang]) and ../bflc:simpleDate[@xml:lang]">
                              <xsl:text> ,</xsl:text>
                            </xsl:if>
                          </xsl:if>
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:when test="bf:place/*[                              (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                               rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]                              ]">
                      <xslt:for-each select="bf:place/bf:*/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <marc:subfield code="a">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:when test="bf:place/*[                               (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                               madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]                              ]">
                      <xslt:for-each select="bf:place/bf:*/madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <marc:subfield code="a">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:for-each select="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield code="b">
                          <xsl:value-of select="." />
                          <xsl:if test="following-sibling::bflc:simpleAgent[@xml:lang]">
                            <xsl:text>,</xsl:text>
                          </xsl:if>
                          <xsl:if test="position() = last()">
                            <xsl:if test="../bflc:simpleDate[@xml:lang]">
                              <xsl:text>,</xsl:text>
                            </xsl:if>
                          </xsl:if>
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:when test="bf:agent/bf:Agent/rdfs:label[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:for-each select="bf:agent/bf:Agent/rdfs:label[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <marc:subfield code="b">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xsl:for-each select="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield code="c">
                          <xsl:value-of select="." />
                          <xsl:if test="following-sibling::bflc:simpleDate[@xml:lang]">
                            <xsl:text>,</xsl:text>
                          </xsl:if>
                          <xsl:if test="position() = last()">
                            <xsl:variable name="vEndsWith">
                              <xsl:call-template name="tEndsWith">
                                <xsl:with-param name="pStr" select="." />
                                <xsl:with-param name="pEndChar" select="'.'" />
                              </xsl:call-template>
                            </xsl:variable>
                            <xsl:if test="$vEndsWith = '0'">
                              <xsl:text>.</xsl:text>
                            </xsl:if>
                          </xsl:if>
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:when test="bf:date[not(@rdf:datatype) and @xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                      <xslt:for-each select="bf:date[not(@rdf:datatype) and @xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <marc:subfield code="c">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                </marc:datafield>
              </xslt:when>
            </xslt:choose>
          </xslt:when>
          <xslt:otherwise>
            <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed node <xsl:value-of select="name()" />. Maximum number of 264 fields reached (10).</xsl:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:copyrightDate[. != '']" mode="generate-264">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:extent/bf:Extent" mode="generate-300">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
          <marc:datafield>
            <xslt:attribute name="tag">306</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:for-each select="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
              <marc:subfield code="a">
                <xslt:call-template name="tChopPunct">
                  <xslt:with-param name="pString" select="." />
                </xslt:call-template>
              </marc:subfield>
            </xslt:for-each>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:frequency/bf:Frequency[rdfs:label or bf:date]" mode="generate-vFreqTag">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:issuance" mode="generate-334">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:content/*[local-name()='Content' or                                                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Content'] or                                                  local-name()='Authority' or                                                  rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-336">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:media/*[local-name()='Media' or                                                    rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Media'] or                                                    local-name()='Authority' or                                                    rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-337">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:carrier/*[local-name()='Carrier' or                                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Carrier'] or                                                      local-name()='Authority' or                                                      rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-338">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:baseMaterial/bf:BaseMaterial |                     bf:Instance/bf:appliedMaterial/bf:AppliedMaterial |                     bf:Instance/bf:productionMethod/bf:ProductionMethod |                     bf:Instance/bf:mount/bf:Mount |                     bf:Instance/bf:reductionRatio/bf:ReductionRatio |                     bf:Work/bf:colorContent/bf:ColorContent |                     bf:Instance/bf:generation/bf:Generation |                     bf:Instance/bf:layout/bf:Layout |                     bf:Instance/bf:bookFormat/bf:BookFormat |                     bf:Instance/bf:fontSize/bf:FontSize |                     bf:Instance/bf:polarity/bf:Polarity |                     bf:Instance/bf:binding/bf:Binding |                     bf:Work/bf:illustrativeContent/bf:Illustration" mode="generate-340">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:soundCharacteristic/bf:RecordingMethod |                     bf:Instance/bf:soundCharacteristic/bf:RecordingMedium |                     bf:Instance/bf:soundCharacteristic/bf:PlayingSpeed |                     bf:Instance/bf:soundCharacteristic/bf:GrooveCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:TrackConfig |                     bf:Instance/bf:soundCharacteristic/bf:TapeConfig |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackChannels |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:CaptureStorage |                     bf:Instance/bf:soundCharacteristic/bflc:CaptureStorage |                     bf:Work/bf:soundContent/bf:SoundContent" mode="generate-344">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:projectionCharacteristic/bf:PresentationFormat |                     bf:Instance/bf:projectionCharacteristic/bf:ProjectionSpeed" mode="generate-345">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:aspectRatio/bf:AspectRatio[rdfs:label|rdf:value]" mode="generate-345">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:videoCharacteristic/bf:VideoFormat |                     bf:Instance/bf:videoCharacteristic/bf:BroadcastStandard" mode="generate-346">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:digitalCharacteristic/bf:FileType |                     bf:Instance/bf:digitalCharacteristic/bf:EncodingFormat |                     bf:Instance/bf:digitalCharacteristic/bf:FileSize |                     bf:Instance/bf:digitalCharacteristic/bf:Resolution |                     bf:Instance/bf:digitalCharacteristic/bf:RegionalEncoding |                     bf:Instance/bf:digitalCharacteristic/bf:EncodedBitrate" mode="generate-347">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:musicFormat/bf:MusicFormat | bf:Work/bf:notation/bf:MusicNotation |                     bf:Instance/bf:musicFormat/bf:MusicFormat | bf:Instance/bf:notation/bf:MusicNotation" mode="generate-348">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:collectionArrangement/bf:CollectionArrangement" mode="generate-351">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:digitalCharacteristic/bf:CartographicDataType |                     bf:Instance/bf:digitalCharacteristic/bf:CartographicObjectType" mode="generate-352">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[@rdf:about]" mode="generate-353">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:firstIssue" mode="generate-362">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:originPlace/bf:Place" mode="generate-370">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:musicMedium/bf:MusicMedium[bflc:readMarc382]" mode="generate-382">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:musicSerialNumber or                 bf:Work/bf:musicOpusNumber or                 bf:Work/bf:musicThematicNumber">
          <marc:datafield>
            <xslt:attribute name="tag">383</xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:text> </xslt:text>
            </xslt:attribute>
            <xslt:for-each select="bf:Work/bf:musicSerialNumber |                        bf:Work/bf:musicOpusNumber |                        bf:Work/bf:musicThematicNumber">
              <xslt:choose>
                <xslt:when test="local-name() = 'musicSerialNumber'">
                  <marc:subfield code="a">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:when>
                <xslt:when test="local-name() = 'musicOpusNumber'">
                  <marc:subfield code="b">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:when>
                <xslt:when test="local-name() = 'musicThematicNumber'">
                  <marc:subfield code="c">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:when>
              </xslt:choose>
            </xslt:for-each>
          </marc:datafield>
        </xslt:when>
      </xslt:choose>
      <xslt:apply-templates select="bf:Work/bf:musicKey" mode="generate-384">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Work/bf:intendedAudience">
        <xslt:variable name="vSourceUri">
          <xslt:choose>
            <xslt:when test="*/bf:source/@rdf:resource">
              <xsl:value-of select="*/bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="*/bf:source/bf:Source/@rdf:about">
              <xsl:value-of select="*/bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="@rdf:resource or bf:IntendedAudience[@rdf:about or bflc:demographicGroup or bf:source]">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="bf:IntendedAudience/rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">385</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:variable name="v385-3">
                <xslt:choose>
                  <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
                    <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 385 $3.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 385 $3.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v385-3 != ''">
                <marc:subfield code="3">
                  <xslt:value-of select="$v385-3" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="bf:IntendedAudience/bflc:demographicGroup/bflc:DemographicGroup[not(@rdf:about)]/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 385 $m.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:IntendedAudience/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="n">
                      <xslt:variable name="vDGUri">
                        <xslt:choose>
                          <xslt:when test="@rdf:resource">
                            <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="*/@rdf:about">
                            <xsl:value-of select="*/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:choose>
                        <xslt:when test="*/rdfs:label">
                          <xsl:value-of select="*/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="contains($vDGUri,'id.loc.gov')">
                          <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:with-param name="pUri" select="$vDGUri" />
                          </xsl:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 385 $n.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:IntendedAudience/rdfs:label">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="*/bf:source/bf:Source/*[local-name()='code']">
                  <xslt:variable name="v385-2">
                    <xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v385-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v385-2" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="$vSourceUri != ''">
                  <xslt:variable name="v385-2">
                    <xslt:choose>
                      <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:with-param name="pUri" select="$vSourceUri" />
                        </xsl:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v385-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v385-2" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="@rdf:resource|bf:IntendedAudience/@rdf:about">
                <marc:subfield code="0">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="bf:IntendedAudience/rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">521</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'reading grade level'">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest age level'">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest grade level'">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bf:IntendedAudience/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 521 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:IntendedAudience/rdfs:label">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Work/bflc:creatorCharacteristic" mode="generate-386">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:Series[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bflc:Uncontrolled[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |         //bf:Item/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |                  bf:Work/bf:hasSeries/bf:Series[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |         //bf:Item/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']]">
        <xslt:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pXmlLang" select="rdfs:label/@xml:lang" />
          </xsl:call-template>
        </xslt:variable>
        <xslt:variable name="v880Script">
          <xslt:choose>
            <xslt:when test="bf:title/bf:Title/bf:mainTitle/@xml:lang and not(contains(translate(bf:title/bf:Title/bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xslt:variable name="vlang">
                <xslt:value-of select="translate(substring-after(bf:title/bf:Title/bf:mainTitle/@xml:lang,'-'),$upper,$lower)" />
              </xslt:variable>
              <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="v880Occurence">
          <xsl:value-of select="20+position()" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="bf:title/bf:Title/bf:mainTitle[not(@xml:lang)]">
            <marc:datafield>
              <xslt:attribute name="tag">490</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="bf:status//@rdf:*[1] = 'http://id.loc.gov/vocabulary/mstatus/tr'">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$v880Script != ''">
                  <xslt:variable name="v490-6">
                    <xsl:value-of select="concat('880-',$v880Occurence)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v490-6 != ''">
                    <marc:subfield code="6">
                      <xslt:value-of select="$v490-6" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 490 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:variable name="vMainTitle">
                <xslt:choose>
                  <xslt:when test="bf:title/bf:Title/bf:mainTitle[not(@xml:lang)]">
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle[not(@xml:lang)]">
                      <xslt:value-of select="." />
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vParallelTitle">
                <xslt:choose>
                  <xslt:when test="bf:title/bf:ParallelTitle/bf:mainTitle[not(@xml:lang)]">
                    <xslt:for-each select="bf:title/bf:ParallelTitle/bf:mainTitle[not(@xml:lang)]">
                      <xslt:value-of select="." />
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="$vMainTitle != '' and $vParallelTitle != ''">
                  <xslt:variable name="v490-a">
                    <xsl:value-of select="concat($vMainTitle, ' =')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v490-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v490-a" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="$vMainTitle != ''">
                  <xslt:variable name="v490-a">
                    <xsl:value-of select="$vMainTitle" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v490-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v490-a" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vParallelTitle != ''">
                  <xsl:for-each select="bf:title/bf:ParallelTitle/bf:mainTitle[not(@xml:lang)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="a">
                      <xsl:value-of select="." />
                      <xsl:if test="position() != last()">
                        <xsl:text> =</xsl:text>
                      </xsl:if>
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <marc:subfield code="x">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect')]/rdf:value">
                <marc:subfield code="y">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/caninv' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/caninv')]/rdf:value">
                <marc:subfield code="z">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="../../bf:seriesEnumeration">
                <marc:subfield code="v">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
        </xslt:choose>
        <xslt:choose>
          <xslt:when test="$v880Script!=''">
            <marc:datafield>
              <xslt:attribute name="tag">880</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="../../../../bf:relation/bf:Relation[bf:relationship/bf:Relationship/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:associatedResource/bf:Hub[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled')]">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="../../../../bf:relation/bf:Relation[bf:relationship/bf:Relationship/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:associatedResource/bf:Series[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled')]">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="../../../../bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:Hub[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled')]">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="../../../../bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:Series[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled')]">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:variable name="v880-6">
                <xsl:value-of select="concat('490-',$v880Occurence,'/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xslt:value-of select="$v880-6" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 880 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:variable name="vMainTitle">
                <xslt:choose>
                  <xslt:when test="bf:title/bf:Title/bf:mainTitle[@xml:lang]">
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle[@xml:lang]">
                      <xslt:value-of select="." />
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vParallelTitle">
                <xslt:choose>
                  <xslt:when test="bf:title/bf:ParallelTitle/bf:mainTitle[@xml:lang]">
                    <xslt:for-each select="bf:title/bf:ParallelTitle/bf:mainTitle[@xml:lang]">
                      <xslt:value-of select="." />
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="$vMainTitle != '' and $vParallelTitle != ''">
                  <xslt:variable name="v880-a">
                    <xsl:value-of select="concat($vMainTitle, ' =')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v880-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v880-a" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="$vMainTitle != ''">
                  <xslt:variable name="v880-a">
                    <xsl:value-of select="$vMainTitle" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$v880-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v880-a" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vParallelTitle != ''">
                  <xsl:for-each select="bf:title/bf:ParallelTitle/bf:mainTitle[@xml:lang]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="a">
                      <xsl:value-of select="." />
                      <xsl:if test="position() != last()">
                        <xsl:text> =</xsl:text>
                      </xsl:if>
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <marc:subfield code="x">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect')]/rdf:value">
                <marc:subfield code="y">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/caninv' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/caninv')]/rdf:value">
                <marc:subfield code="z">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="../../bf:seriesEnumeration">
                <marc:subfield code="v">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:Instance/bf:seriesStatement">
        <xslt:variable name="v880Script">
          <xslt:choose>
            <xslt:when test="@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xslt:variable name="vlang">
                <xslt:value-of select="translate(substring-after(@xml:lang,'-'),$upper,$lower)" />
              </xslt:variable>
              <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$v880Script != ''">
            <marc:datafield>
              <xslt:attribute name="tag">880</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text>0</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:variable name="v880-6">
                <xsl:value-of select="concat('490-00/',$v880Script)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xslt:value-of select="$v880-6" />
                </marc:subfield>
              </xslt:if>
              <marc:subfield code="a">
                <xslt:value-of select="." />
              </marc:subfield>
            </marc:datafield>
          </xslt:when>
          <xslt:otherwise>
            <marc:datafield>
              <xslt:attribute name="tag">490</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text>0</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <marc:subfield code="a">
                <xslt:value-of select="." />
              </marc:subfield>
            </marc:datafield>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:Instance/bf:note/bf:Note[rdfs:*[. != ''] or rdf:value[. != ''] or bf:*]|bf:Work/bf:note/bf:Note[rdfs:*[. != ''] or rdf:value[. != ''] or bf:*]|//bf:Item/bf:note/bf:Note[rdfs:*[. != ''] or rdf:value[. != ''] or bf:*]">
        <xslt:choose>
          <xslt:when test="local-name(../..)='Instance' and                   (rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/computer' or translate(bf:noteType,$upper,$lower)='computer file characteristics')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">256</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 256 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='numbering' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/number')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">362</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text>1</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 362 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='with' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/with')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">501</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 501 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 501 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='report type' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/report')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">513</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 513 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='issuance information' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/issuance')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">515</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 515 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='type of computer data' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/computer')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">516</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 516 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='additional physical form' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/addphys')">
            <marc:datafield>
              <xslt:attribute name="tag">530</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 530 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 530 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='StockNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StockNumber']/rdf:value">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 530 $d.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='reproduction version' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/repro')">
            <marc:datafield>
              <xslt:attribute name="tag">533</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 533 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 533 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/*/*[local-name()='code']">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 533 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='original version' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig')">
            <marc:datafield>
              <xslt:attribute name="tag">534</xslt:attribute>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <marc:subfield code="3">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 534 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <marc:subfield code="x">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']/rdf:value">
                <marc:subfield code="z">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='funding information' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/fundinfo')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">536</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="starts-with(.,'Contract:')">
                    <xslt:variable name="v536-b">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Contract:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-b != ''">
                      <marc:subfield code="b">
                        <xslt:value-of select="$v536-b" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="starts-with(.,'Grant:')">
                    <xslt:variable name="v536-c">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Grant:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-c != ''">
                      <marc:subfield code="c">
                        <xslt:value-of select="$v536-c" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="starts-with(.,'Program element:')">
                    <xslt:variable name="v536-e">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Program element:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-e != ''">
                      <marc:subfield code="e">
                        <xslt:value-of select="$v536-e" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="starts-with(.,'Project:')">
                    <xslt:variable name="v536-f">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Project:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-f != ''">
                      <marc:subfield code="f">
                        <xslt:value-of select="$v536-f" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="starts-with(.,'Task:')">
                    <xslt:variable name="v536-g">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Task:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-g != ''">
                      <marc:subfield code="g">
                        <xslt:value-of select="$v536-g" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="starts-with(.,'Work unit:')">
                    <xslt:variable name="v536-h">
                      <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pString" select="substring-after(.,'Work unit:')" />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:if test="$v536-h != ''">
                      <marc:subfield code="h">
                        <xslt:value-of select="$v536-h" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:otherwise>
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and                   (translate(bf:noteType,$upper,$lower)='biographical data' or translate(bf:noteType,$upper,$lower)='administrative history' or                   rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/biogdata' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/adminhist')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">545</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="translate(bf:noteType,$upper,$lower)='biographical data' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/biogdata'">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="translate(bf:noteType,$upper,$lower)='administrative history' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/adminhist'">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 545 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='issuing body' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/issuing')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">550</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 550 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and                   (translate(bf:noteType,$upper,$lower)='index' or translate(bf:noteType,$upper,$lower)='finding aid' or                   rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/index' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/finding')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">555</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="translate(bf:noteType,$upper,$lower)='index' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/index'">
                      <xslt:text> </xslt:text>
                    </xslt:when>
                    <xslt:when test="translate(bf:noteType,$upper,$lower)='finding aid' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/finding'">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>8</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 555 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='related material' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/related')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">581</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text>8</xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 581 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Isbn' or rdf:type/rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']/rdf:value">
                <marc:subfield code="z">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='exhibition' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/exhibit')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">585</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 585 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 585 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 585 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='description source' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/descsource')">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">588</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="starts-with(rdfs:label,'Source of description:') or starts-with(rdfs:label,'Description based on:')">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="starts-with(rdfs:label,'Latest issue consulted:')">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:choose>
                        <xslt:when test="starts-with(.,'Source of description:')">
                          <xsl:value-of select="normalize-space(substring-after(.,'Source of description:'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="starts-with(.,'Latest issue consulted:')">
                          <xsl:value-of select="normalize-space(substring-after(.,'Latest issue consulted:'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:otherwise>
                          <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 588 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 588 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:when test="(local-name(../..)='Work' and          (           translate(bf:noteType,$upper,$lower)='language' or            rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/lang' or            rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/award'         ))" />
          <xslt:when test="(           local-name(../..)='Work' and            contains(rdf:type/@rdf:resource, 'http://id.loc.gov/vocabulary/resourceComponents')         )" />
          <xslt:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and                    (                   (translate(bf:noteType,$upper,$lower)='physical details' or translate(bf:noteType,$upper,$lower)='accompanying material' or translate(bf:noteType,$upper,$lower)='binding' or translate(bf:noteType,$upper,$lower)='action') or                    (rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/physical' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/accmat' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action')                   )" />
          <xslt:otherwise>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">500</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 500 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:variable name="v500-a">
                <xsl:variable name="vNoteText" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = last()">
                        <xsl:value-of select="." />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat(.,' ')" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pString" select="$vNoteText" />
                </xsl:call-template>
              </xslt:variable>
              <xslt:if test="$v500-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v500-a" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 500 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Work/bf:dissertation/bf:Dissertation" mode="generate-502">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label[. != ''] and not(@rdf:about)]  |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label[. != ''] and not(@rdf:about)]       " mode="generate-504">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:tableOfContents/bf:TableOfContents[rdfs:label]" mode="generate-505">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:for-each select="bf:Instance/bf:usageAndAccessPolicy/* | //bf:Item/bf:usageAndAccessPolicy/*">
        <xslt:choose>
          <xslt:when test="local-name()='UsePolicy' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/UsePolicy'">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">540</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 540 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 540 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:note/bf:Note/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="d">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 540 $d.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:source/bf:Source/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="2">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 540 $2.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 540 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">506</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 506 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 506 $a.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:source/bf:Source/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="2">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 506 $2.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 506 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Instance/bf:credits[not(starts-with(text(),'Cast:'))]" mode="generate-508">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bflc:indexedIn/bf:Work |                     bf:Work/bf:references/bf:Work" mode="generate-510">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:credits[starts-with(text(),'Cast:')]" mode="generate-511">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:capture/bf:Capture[not(bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf']) and not(bf:place/@rdf:resource)]" mode="generate-518">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:summary/bf:Summary[rdfs:label]" mode="generate-520">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:geographicCoverage/*[               not(                 bf:source/@rdf:resource='http://id.loc.gov/authorities/classification/G' or                  bf:source/bf:Source/@rdf:about='http://id.loc.gov/authorities/classification/G'               ) and not(@rdf:about) and rdfs:label]" mode="generate-522">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:preferredCitation" mode="generate-524">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:contentAccessibility/bf:ContentAccessibility/rdfs:label" mode="generate-532">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))] |                     //bf:Item/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))]" mode="generate-538">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="//bf:Item/bf:immediateAcquisition/bf:ImmediateAcquisition[rdfs:label[. != '']]" mode="generate-541">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:note/bf:Note[rdf:type/@rdf:resource = 'http://id.loc.gov/vocabulary/mnotetype/lang' and rdfs:label]" mode="generate-546">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:notation/bf:Notation" mode="generate-546">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Instance/bf:custodialHistory|//bf:Item/bf:custodialHistory" mode="generate-561">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="     //bf:Item/bf:note/*[bf:noteType='binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding'] |     bf:Instance/bf:note/*[bf:noteType='binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding'] " mode="generate-563">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="       //bf:Item/bf:note/*[bf:noteType='action' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action'] |       bf:Instance/bf:note/*[bf:noteType='action' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action'] " mode="generate-583">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:awards" mode="generate-586">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:note/bf:Note[rdf:type/@rdf:resource = 'http://id.loc.gov/vocabulary/mnotetype/award']" mode="generate-586">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="       bf:Work/bf:subject/*[bflc:marcKey or marc:record] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.worldcat.org/fast/')]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="       bf:Work/bf:subject/*[bflc:marcKey or marc:record] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.worldcat.org/fast/')]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.') and contains(@rdf:resource, 'rwo/agents')">
                  <xsl:value-of select="concat(substring-before(@rdf:resource,'rwo/agents'), 'authorities/names/', substring-after(@rdf:resource,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.') and contains(@rdf:about, 'rwo/agents')">
                  <xsl:value-of select="concat(substring-before(@rdf:about,'rwo/agents'), 'authorities/names/', substring-after(@rdf:about,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vSubjectTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>600</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>610</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>611</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>630</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='150']">
                      <xslt:text>650</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>651</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vSubjectTag='600'">
                  <xslt:text>abcdfghjklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='610'">
                  <xslt:text>abcdfghklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='611'">
                  <xslt:text>acdefghklmnpqst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='630'">
                  <xslt:text>adfghklmnoprs</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='650'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='651'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vSubjectTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSubjectTag = '630' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != ' '">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:when test="$vSubjectTag = '630' and ($vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = '' or $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = ' ')">
                      <xsl:value-of select="'0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/childrensSubjects/')">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/mesh/')">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/nalt/')">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or                        contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or                        contains($relURI, '/fast/') or                       contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>7</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
                      <xslt:text>5</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
                      <xslt:text>6</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xslt:variable name="vvSubjectTag-2">
                <xslt:choose>
                  <xslt:when test="contains($relURI, '/genreForms/')">
                    <xslt:text>lcgft</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
                    <xslt:text>lcdgt</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/graphicMaterials/')">
                    <xslt:text>lctgm</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/fast/')">
                    <xslt:text>fast</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
                    <xslt:text>gnd</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvSubjectTag-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('tvxyz',@code)])">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != '' and                          ( contains($relURI, 'd-nb.info/gnd/') or contains($relURI, 'isni.org/isni/') )">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != '' and                ( contains($relURI, 'http://id.worldcat.org/fast/') )">
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]) and                      $vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('t',@code)]">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'resources/hubs')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
                  <xslt:variable name="vvSubjectTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSubjectTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
                  <xslt:variable name="vvSubjectTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSubjectTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="($vSubjectTag = '651' or $vSubjectTag = '662') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)])">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != ''">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvSubjectTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvSubjectTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="       bf:Work/bf:subject/*[bflc:marcKey or marc:record] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.worldcat.org/fast/')]       ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.') and contains(@rdf:resource, 'rwo/agents')">
                  <xsl:value-of select="concat(substring-before(@rdf:resource,'rwo/agents'), 'authorities/names/', substring-after(@rdf:resource,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.') and contains(@rdf:about, 'rwo/agents')">
                  <xsl:value-of select="concat(substring-before(@rdf:about,'rwo/agents'), 'authorities/names/', substring-after(@rdf:about,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vSubjectTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>600</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>610</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>611</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>630</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='150']">
                      <xslt:text>650</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>651</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vSubjectTag='600'">
                  <xslt:text>abcdfghjklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='610'">
                  <xslt:text>abcdfghklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='611'">
                  <xslt:text>acdefghklmnpqst</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='630'">
                  <xslt:text>adfghklmnoprs</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='650'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
                <xslt:when test="$vSubjectTag='651'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vSubjectTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSubjectTag = '630' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != ' '">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:when test="$vSubjectTag = '630' and ($vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = '' or $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = ' ')">
                      <xsl:value-of select="'0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/childrensSubjects/')">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/mesh/')">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/nalt/')">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or                        contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or                        contains($relURI, '/fast/') or                       contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>7</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
                      <xslt:text>5</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
                      <xslt:text>6</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xslt:variable name="vvSubjectTag-2">
                <xslt:choose>
                  <xslt:when test="contains($relURI, '/genreForms/')">
                    <xslt:text>lcgft</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
                    <xslt:text>lcdgt</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/graphicMaterials/')">
                    <xslt:text>lctgm</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/fast/')">
                    <xslt:text>fast</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
                    <xslt:text>gnd</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvSubjectTag-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('tvxyz',@code)])">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != '' and                          ( contains($relURI, 'd-nb.info/gnd/') or contains($relURI, 'isni.org/isni/') )">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != '' and                ( contains($relURI, 'http://id.worldcat.org/fast/') )">
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]) and                      $vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('t',@code)]">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'resources/hubs')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
                  <xslt:variable name="vvSubjectTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSubjectTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
                  <xslt:variable name="vvSubjectTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSubjectTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="($vSubjectTag = '651' or $vSubjectTag = '662') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)])">
                  <xslt:choose>
                    <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                    <xslt:when test="$relURI != ''">
                      <xslt:variable name="vvSubjectTag-1">
                        <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-1 != ''">
                        <marc:subfield code="1">
                          <xslt:value-of select="$vvSubjectTag-1" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvSubjectTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSubjectTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvSubjectTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
                      <xslt:variable name="vvSubjectTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvSubjectTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvSubjectTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:Work/bf:subject[                   not(@rdf:resource) and                    (                     (                       not(*/@rdf:about) or                        contains(*/@rdf:about, 'example') or                        contains(*/@rdf:about, 'REPLACE') or                        ( contains(*/@rdf:about, 'd-nb.info/') and contains(*/@rdf:about, '#') ) or                        contains(*/@rdf:about, 'homosaurus.org/v')                     ) and                     not(*/bflc:marcKey) and                      (*/rdfs:label or */madsrdf:authoritativeLabel or */madsrdf:componentList)                   ) and                   not(*/*[local-name()='code'])]           ">
        <xslt:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pXmlLang" select="*/rdfs:label/@xml:lang" />
          </xsl:call-template>
        </xslt:variable>
        <xslt:variable name="vDollar0Uri">
          <xsl:value-of select="*/@rdf:about[             not(contains(.,'example.org')) and              not(contains(.,'REPLACE')) and              ( contains(*/@rdf:about, 'd-nb.info/') and not(contains(*/@rdf:about, '#')) )             ]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
            <xslt:variable name="vInd2Val">
              <xslt:choose>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcsh' or               */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                  <xslt:text>0</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcshac' or               */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                  <xslt:text>1</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='mesh' or               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                  <xslt:text>2</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='nal' or               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                  <xslt:text>3</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='cash' or               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                  <xslt:text>5</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='rvm' or               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                  <xslt:text>6</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source or */madsrdf:isMemberOfMADSScheme or */madsrdf:componentList/*[1]/bf:source">
                  <xslt:text>7</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSf2val">
              <xslt:choose>
                <xslt:when test="$vInd2Val = '7'">
                  <xslt:for-each select="(*/bf:source|*/madsrdf:isMemberOfMADSScheme|*/madsrdf:componentList/*[1]/bf:source)[1]">
                    <xslt:variable name="vSourceUri">
                      <xslt:choose>
                        <xslt:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="bf:Source/bf:code">
                        <xsl:value-of select="bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vSourceUri != ''">
                        <xslt:choose>
                          <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                            <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                              <xsl:with-param name="pUri" select="$vSourceUri" />
                            </xsl:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="*[(local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or                       local-name(madsrdf:componentList/*[1])='PersonalName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName' or                       local-name(madsrdf:componentList/*[1])='FamilyName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName' or                       local-name(madsrdf:componentList/*[1])='Person' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person' or                       local-name(madsrdf:componentList/*[1])='Family' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family' or                       bf:contribution/*/bf:agent/*[local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">600</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or                               local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                               local-name(madsrdf:componentList/*[1])='Family' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family' or                               local-name(madsrdf:componentList/*[1])='FamilyName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName' or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']]]">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>1</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*[                                     position()=1 and                                      (                                       contains('Hub,PersonalName,FamilyName,', local-name()) or                                       contains('PersonalName,FamilyName', substring-after(rdf:type/@rdf:resource, '#')) or                                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']                                      ) and                                      (@rdf:about or bflc:marcKey)                                 ]">
                    <xslt:variable name="relURI">
                      <xslt:choose>
                        <xslt:when test="contains(@rdf:about,'id.') and not(contains(@rdf:about, 'REPLACE'))">
                          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelResourcePreNS">
                      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pRelUri" select="$relURI" />
                        <xsl:with-param name="pContext" select="." />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
                    <xslt:choose>
                      <xslt:when test="$vRelResource/marc:record/marc:datafield[@tag='100']">
                        <xsl:for-each select="$vRelResource/marc:record/marc:datafield[@tag='100']/marc:subfield[contains('abcdghjklmnopqrst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="                   *[                                            contains('Hub,Work,Person,Family', local-name()) or                       rdf:type[contains('PersonalName,FamilyName', @rdf:resource)] or                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']                                         ] |                   */madsrdf:componentList/*[                     position()=1 and                      (                       contains('Hub,Work,Person,Family', local-name()) or                       rdf:type[contains('PersonalName,FamilyName', @rdf:resource)] or                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']                        ) and                        not(bflc:marcKey) and                        (                       not(@rdf:about) or                       contains(@rdf:about, 'REPLACE') or                        contains(@rdf:about, 'example')                       )                     ]">
                    <xslt:choose>
                      <xslt:when test="bf:title">
                        <xslt:variable name="v600-a">
                          <xslt:choose>
                            <xslt:when test="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="bf:contribution/*/bf:agent/*/rdfs:label">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v600-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v600-a" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v600-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                              <xslt:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v600-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v600-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="d">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $d.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="q">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $q.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="t">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $t.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:originDate">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="f">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $f.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicKey">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="r">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $r.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v600-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v600-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v600-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v600-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v600-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v600-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v600-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v600-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v600-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v600-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 600 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v600-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v600-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v600-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v600-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v600-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction'] or                       local-name(madsrdf:componentList/*[1])='CorporateName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName' or                       local-name(madsrdf:componentList/*[1])='Organization' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization' or                       local-name(madsrdf:componentList/*[1])='Jurisdiction' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction' or                       bf:contribution/*/bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">610</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction'] or                               local-name(madsrdf:componentList/*[1])='Jurisdiction' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction' or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]]">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>2</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*[                                   position()=1 and                                    (                                     contains('Hub,Work,CorporateName,Organization,Jurisdiction,', local-name()) or                                     contains('PersonalName,FamilyName', substring-after(rdf:type/@rdf:resource, '#')) or                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                                     rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                                     rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']                                    ) and                                    (@rdf:about or bflc:marcKey)                              ]">
                    <xslt:variable name="relURI">
                      <xslt:choose>
                        <xslt:when test="contains(@rdf:about,'id.') and not(contains(@rdf:about, 'REPLACE'))">
                          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelResourcePreNS">
                      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pRelUri" select="$relURI" />
                        <xsl:with-param name="pContext" select="." />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
                    <xslt:choose>
                      <xslt:when test="$vRelResource/marc:record/marc:datafield[@tag='110']">
                        <xsl:for-each select="$vRelResource/marc:record/marc:datafield[@tag='110']/marc:subfield[contains('abcdfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="                 *[                 (                 contains('Hub,Work,CorporateName,Organization,Jurisdiction', local-name()) or                 rdf:type[contains('CorporateName', @rdf:resource)] or                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']                  )                 ] |                 */madsrdf:componentList/*[                 position()=1 and                  (                 contains('Hub,Work,CorporateName,Organization,Jurisdiction', local-name()) or                 contains('CorporateName', substring-after(rdf:type/@rdf:resource, '#')) or                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']                  ) and                  not(bflc:marcKey) and                  (                   not(@rdf:about) or                   contains(@rdf:about, 'REPLACE') or                    contains(@rdf:about, 'example')                 )                 ]">
                    <xslt:choose>
                      <xslt:when test="bf:title">
                        <xslt:variable name="v610-a">
                          <xslt:choose>
                            <xslt:when test="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="bf:contribution/*/bf:agent/*/rdfs:label">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v610-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v610-a" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v610-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList">
                              <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v610-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v610-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="b">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="t">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $t.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:originDate">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="f">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $f.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="l">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $l.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicKey">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="r">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $r.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v610-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v610-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v610-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v610-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v610-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v610-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v610-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v610-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v610-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v610-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 610 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v610-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v610-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v610-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v610-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v610-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting'] or                       local-name(madsrdf:componentList/*[1])='ConferenceName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName' or                       local-name(madsrdf:componentList/*[1])='Meeting' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting' or                       bf:contribution/*/bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">611</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text>2</xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*[                                 position()=1 and                                  (                                   contains('Hub,Work,ConferenceName,Meeting', local-name()) or                                   rdf:type[contains('ConferenceName', @rdf:resource)] or                                    rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                                   rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                                   rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']                                  ) and                                  (@rdf:about or bflc:marcKey)                              ]">
                    <xslt:variable name="relURI">
                      <xslt:choose>
                        <xslt:when test="contains(@rdf:about,'id.') and not(contains(@rdf:about, 'REPLACE'))">
                          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelResourcePreNS">
                      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pRelUri" select="$relURI" />
                        <xsl:with-param name="pContext" select="." />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
                    <xslt:choose>
                      <xslt:when test="$vRelResource/marc:record/marc:datafield[@tag='111']">
                        <xsl:for-each select="$vRelResource/marc:record/marc:datafield[@tag='111']/marc:subfield[contains('acdefghklnpqst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="                 *[                 (                 contains('Hub,Work,ConferenceName,Meeting', local-name()) or                 rdf:type[contains('ConferenceName', @rdf:resource)] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']                  )                 ] |                 */madsrdf:componentList/*[                 position()=1 and                  (                 contains('Hub,Work,ConferenceName,Meeting', local-name()) or                 rdf:type[contains('ConferenceName', @rdf:resource)] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']                 ) and                  not(bflc:marcKey) and                  (                 not(@rdf:about) or                 contains(@rdf:about, 'REPLACE') or                  contains(@rdf:about, 'example')                 )                 ]">
                    <xslt:choose>
                      <xslt:when test="bf:title">
                        <xslt:variable name="v611-a">
                          <xslt:choose>
                            <xslt:when test="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="bf:contribution/*/bf:agent/*/rdfs:label">
                              <xslt:for-each select="bf:contribution/*/bf:agent/*/rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v611-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v611-a" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v611-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList">
                              <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v611-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v611-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="q">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="t">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $t.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:originDate">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="f">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $f.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="l">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $l.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicKey">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="r">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $r.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v611-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v611-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v611-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v611-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v611-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v611-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v611-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v611-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v611-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v611-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 611 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v611-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v611-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v611-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v611-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v611-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='Hub' or local-name()='Work' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or                       local-name(madsrdf:componentList/*[1])='Hub' or                       local-name(madsrdf:componentList/*[1])='Work' or                       madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub' or                       madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">630</xslt:attribute>
                  <xslt:for-each select="*/madsrdf:componentList/*[                 position()=1 and                  (                 contains('Hub,Work', local-name()) or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work']                 ) and                  (@rdf:about or bflc:marcKey)                  ]">
                    <xslt:variable name="relURI">
                      <xslt:choose>
                        <xslt:when test="contains(@rdf:about,'id.') and not(contains(@rdf:about, 'REPLACE'))">
                          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelResourcePreNS">
                      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pRelUri" select="$relURI" />
                        <xsl:with-param name="pContext" select="." />
                      </xsl:call-template>
                    </xslt:variable>
                    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
                    <xslt:choose>
                      <xslt:when test="$vRelResource/marc:record/marc:datafield[@tag='130']">
                        <xslt:attribute name="ind1">
                          <xslt:variable name="vInd">
                            <xslt:for-each select="$vRelResource/marc:record/marc:datafield[@tag='130']/@ind2">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:variable>
                          <xslt:choose>
                            <xslt:when test="$vInd != ''">
                              <xslt:value-of select="$vInd" />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:text>0</xslt:text>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:attribute>
                        <xslt:attribute name="ind2">
                          <xslt:variable name="vInd">
                            <xslt:choose>
                              <xslt:when test="$vInd2Val != ''">
                                <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:when>
                            </xslt:choose>
                          </xslt:variable>
                          <xslt:choose>
                            <xslt:when test="$vInd != ''">
                              <xslt:value-of select="$vInd" />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:text>4</xslt:text>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:attribute>
                        <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="3">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $3.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xsl:for-each select="$vRelResource/marc:record/marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="                 *[                 (                 contains('Hub,Work', local-name()) or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work']                  )                 ] |                 */madsrdf:componentList/*[                 position()=1 and                  (                 contains('Hub,Work', local-name()) or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work']                 ) and                  not(bflc:marcKey) and                  (                 not(@rdf:about) or                 contains(@rdf:about, 'REPLACE') or                  contains(@rdf:about, 'example')                 )                 ]">
                    <xslt:attribute name="ind1">
                      <xslt:variable name="vInd">
                        <xslt:for-each select="bf:title/bf:Title">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:choose>
                                <xslt:when test="bflc:nonSortNum">
                                  <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                </xslt:when>
                                <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                                  <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                </xslt:when>
                              </xslt:choose>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:variable>
                      <xslt:choose>
                        <xslt:when test="$vInd != ''">
                          <xslt:value-of select="$vInd" />
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>0</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:attribute>
                    <xslt:attribute name="ind2">
                      <xslt:variable name="vInd">
                        <xslt:choose>
                          <xslt:when test="$vInd2Val != ''">
                            <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:choose>
                        <xslt:when test="$vInd != ''">
                          <xslt:value-of select="$vInd" />
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>4</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:attribute>
                    <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="3">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $3.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:variable name="v630-a">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                          <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v630-a != ''">
                      <marc:subfield code="a">
                        <xslt:value-of select="$v630-a" />
                      </marc:subfield>
                    </xslt:if>
                    <xslt:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:originDate">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="f">
                            <xslt:value-of select="." />
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $f.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                      <marc:subfield code="n">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:title/bf:Title/bf:partName">
                      <marc:subfield code="p">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:choose>
                      <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                        <marc:subfield code="o">arranged</marc:subfield>
                      </xslt:when>
                    </xslt:choose>
                    <xslt:for-each select="bf:musicKey">
                      <marc:subfield code="r">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/bflc:Relation/rdfs:label">
                      <marc:subfield code="e">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v630-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v630-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v630-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v630-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v630-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v630-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v630-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v630-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v630-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v630-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 630 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v630-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v630-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v630-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v630-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v630-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal'] or                       local-name()='Temporal' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal'] or                       local-name(madsrdf:componentList/*[1])='Temporal' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal' or                       local-name(madsrdf:componentList/*[1])='Temporal' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">648</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="*/madsrdf:componentList">
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v648-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v648-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v648-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/madsrdf:componentList/*">
                        <xslt:choose>
                          <xslt:when test="position() &gt; 1">
                            <xslt:choose>
                              <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xslt:variable name="v648-v">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v648-v != ''">
                                  <marc:subfield code="v">
                                    <xslt:value-of select="$v648-v" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xslt:variable name="v648-y">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v648-y != ''">
                                  <marc:subfield code="y">
                                    <xslt:value-of select="$v648-y" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xslt:variable name="v648-z">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v648-z != ''">
                                  <marc:subfield code="z">
                                    <xslt:value-of select="$v648-z" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:variable name="v648-x">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v648-x != ''">
                                  <marc:subfield code="x">
                                    <xslt:value-of select="$v648-x" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v648-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/rdfs:label[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 648 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v648-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v648-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:variable name="v648-0">
                        <xslt:choose>
                          <xslt:when test="$vDollar0Uri != ''">
                            <xsl:value-of select="$vDollar0Uri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v648-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$v648-0" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:variable name="v648-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v648-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v648-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='Topic' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Topic']) and             (               local-name(madsrdf:componentList/*[1])='GenreForm' or                madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm' or               madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/GenreForm'             ) and             (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">655</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="*/madsrdf:componentList">
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v655-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v655-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v655-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/madsrdf:componentList/*">
                        <xslt:choose>
                          <xslt:when test="position() &gt; 1">
                            <xslt:choose>
                              <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xslt:variable name="v655-v">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v655-v != ''">
                                  <marc:subfield code="v">
                                    <xslt:value-of select="$v655-v" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xslt:variable name="v655-y">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v655-y != ''">
                                  <marc:subfield code="y">
                                    <xslt:value-of select="$v655-y" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xslt:variable name="v655-z">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v655-z != ''">
                                  <marc:subfield code="z">
                                    <xslt:value-of select="$v655-z" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:variable name="v655-x">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v655-x != ''">
                                  <marc:subfield code="x">
                                    <xslt:value-of select="$v655-x" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v655-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/rdfs:label[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v655-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v655-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:variable name="v655-0">
                        <xslt:choose>
                          <xslt:when test="$vDollar0Uri != ''">
                            <xsl:value-of select="$vDollar0Uri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v655-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$v655-0" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:variable name="v655-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v655-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v655-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[local-name()='HierarchicalGeographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']]">
                <marc:datafield>
                  <xslt:attribute name="tag">662</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                        <xslt:variable name="v662-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v662-a" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                        <xslt:variable name="v662-b">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $b.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $b.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-b != ''">
                          <marc:subfield code="b">
                            <xslt:value-of select="$v662-b" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                        <xslt:variable name="v662-c">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $c.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $c.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-c != ''">
                          <marc:subfield code="c">
                            <xslt:value-of select="$v662-c" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                        <xslt:variable name="v662-d">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $d.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $d.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-d != ''">
                          <marc:subfield code="d">
                            <xslt:value-of select="$v662-d" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                        <xslt:variable name="v662-f">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $f.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $f.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-f != ''">
                          <marc:subfield code="f">
                            <xslt:value-of select="$v662-f" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                        <xslt:variable name="v662-g">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $g.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $g.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-g != ''">
                          <marc:subfield code="g">
                            <xslt:value-of select="$v662-g" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                      <xslt:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                        <xslt:variable name="v662-h">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $h.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 662 $h.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v662-h != ''">
                          <marc:subfield code="h">
                            <xslt:value-of select="$v662-h" />
                          </marc:subfield>
                        </xslt:if>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:role/bf:Role/rdfs:label">
                    <marc:subfield code="e">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v662-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v662-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v662-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic'] or                       local-name()='Place' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place'] or                       local-name(madsrdf:componentList/*[1])='Geographic' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic' or                       local-name(madsrdf:componentList/*[1])='Place' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xslt:attribute name="tag">651</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="*/madsrdf:componentList">
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v651-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v651-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v651-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/madsrdf:componentList/*">
                        <xslt:choose>
                          <xslt:when test="position() &gt; 1">
                            <xslt:choose>
                              <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xslt:variable name="v651-v">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v651-v != ''">
                                  <marc:subfield code="v">
                                    <xslt:value-of select="$v651-v" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xslt:variable name="v651-y">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v651-y != ''">
                                  <marc:subfield code="y">
                                    <xslt:value-of select="$v651-y" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xslt:variable name="v651-z">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v651-z != ''">
                                  <marc:subfield code="z">
                                    <xslt:value-of select="$v651-z" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:variable name="v651-x">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v651-x != ''">
                                  <marc:subfield code="x">
                                    <xslt:value-of select="$v651-x" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v651-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/rdfs:label[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 651 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v651-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v651-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="*/bflc:relationship/bflc:Relationship/bflc:relation/bflc:Relation/rdfs:label">
                    <marc:subfield code="e">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:variable name="v651-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v651-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v651-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[(local-name()='Occupation' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Occupation'] or                       local-name(madsrdf:componentList/*[1])='Occupation' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Occupation') and                       (madsrdf:componentList or madsrdf:authoritativeLabel) and                       bf:source]">
                <marc:datafield>
                  <xslt:attribute name="tag">656</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text>7</xslt:text>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="*/madsrdf:componentList">
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v656-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v656-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v656-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/madsrdf:componentList/*">
                        <xslt:choose>
                          <xslt:when test="position() &gt; 1">
                            <xslt:choose>
                              <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xslt:variable name="v656-v">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v656-v != ''">
                                  <marc:subfield code="v">
                                    <xslt:value-of select="$v656-v" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xslt:variable name="v656-y">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v656-y != ''">
                                  <marc:subfield code="y">
                                    <xslt:value-of select="$v656-y" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xslt:variable name="v656-z">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v656-z != ''">
                                  <marc:subfield code="z">
                                    <xslt:value-of select="$v656-z" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:variable name="v656-x">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v656-x != ''">
                                  <marc:subfield code="x">
                                    <xslt:value-of select="$v656-x" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v656-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/rdfs:label[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 656 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v656-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v656-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:variable name="v656-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v656-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v656-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="*[madsrdf:componentList or madsrdf:authoritativeLabel or (rdfs:label and (madsrdf:* or bf:source))]">
                <marc:datafield>
                  <xslt:attribute name="tag">650</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vInd2Val != ''">
                          <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>4</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:choose>
                    <xslt:when test="*/madsrdf:componentList[1]/*[1]/madsrdf:authoritativeLabel or */madsrdf:componentList[1]/*[1]/rdfs:label">
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v650-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v650-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v650-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/madsrdf:componentList/*">
                        <xslt:choose>
                          <xslt:when test="position() &gt; 1">
                            <xslt:choose>
                              <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xslt:variable name="v650-v">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $v.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v650-v != ''">
                                  <marc:subfield code="v">
                                    <xslt:value-of select="$v650-v" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xslt:variable name="v650-y">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $y.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v650-y != ''">
                                  <marc:subfield code="y">
                                    <xslt:value-of select="$v650-y" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xslt:variable name="v650-z">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $z.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v650-z != ''">
                                  <marc:subfield code="z">
                                    <xslt:value-of select="$v650-z" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:variable name="v650-x">
                                  <xslt:choose>
                                    <xslt:when test="madsrdf:authoritativeLabel">
                                      <xslt:for-each select="madsrdf:authoritativeLabel">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:when>
                                    <xslt:otherwise>
                                      <xslt:for-each select="rdfs:label">
                                        <xslt:choose>
                                          <xslt:when test="position() = 1">
                                            <xslt:call-template name="tChopPunct">
                                              <xslt:with-param name="pString" select="." />
                                            </xslt:call-template>
                                          </xslt:when>
                                          <xslt:otherwise>
                                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $x.</xslt:message>
                                          </xslt:otherwise>
                                        </xslt:choose>
                                      </xslt:for-each>
                                    </xslt:otherwise>
                                  </xslt:choose>
                                </xslt:variable>
                                <xslt:if test="$v650-x != ''">
                                  <marc:subfield code="x">
                                    <xslt:value-of select="$v650-x" />
                                  </marc:subfield>
                                </xslt:if>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <marc:subfield code="3">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $3.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                      <xslt:variable name="v650-a">
                        <xslt:choose>
                          <xslt:when test="*/madsrdf:authoritativeLabel">
                            <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="*/rdfs:label[1]">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 650 $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v650-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$v650-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:for-each>
                      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value" />
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:variable name="v650-2">
                    <xslt:choose>
                      <xslt:when test="$vSf2val != ''">
                        <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v650-2 != ''">
                    <marc:subfield code="2">
                      <xslt:value-of select="$v650-2" />
                    </marc:subfield>
                  </xslt:if>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <marc:datafield>
                  <xslt:attribute name="tag">653</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="*[local-name() = 'Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']]">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                        <xslt:when test="*[local-name() = 'Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization']]">
                          <xslt:text>2</xslt:text>
                        </xslt:when>
                        <xslt:when test="*[local-name() = 'Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']]">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                        <xslt:when test="*[local-name() = 'Temporal' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal']]">
                          <xslt:text>4</xslt:text>
                        </xslt:when>
                        <xslt:when test="*[local-name() = 'Place' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place']]">
                          <xslt:text>5</xslt:text>
                        </xslt:when>
                        <xslt:when test="*[local-name() = 'GenreForm' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/GenreForm']]">
                          <xslt:text>6</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text> </xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="*/rdfs:label">
                    <marc:subfield code="a">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="       bf:Work/bf:genreForm/*[bflc:marcKey or marc:record] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.worldcat.org/fast/')] |       //bf:Item/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[bflc:marcKey or marc:record]        [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="       bf:Work/bf:genreForm/*[bflc:marcKey or marc:record] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.worldcat.org/fast/')] |       //bf:Item/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[bflc:marcKey or marc:record]        [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vGenreTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="(self::bf:genreForm or ancestor::bf:genreForm) and contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>655</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='155']">
                      <xslt:text>655</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vGenreTag='655'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vGenreTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vGenreTag = '630'">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/childrensSubjects/')">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/mesh/')">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/nalt/')">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or              contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or              contains($relURI, '/fast/') or             contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>7</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
                      <xslt:text>5</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
                      <xslt:text>6</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xslt:variable name="vvGenreTag-2">
                <xslt:choose>
                  <xslt:when test="contains($relURI, '/genreForms/')">
                    <xslt:text>lcgft</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
                    <xslt:text>lcdgt</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/graphicMaterials/')">
                    <xslt:text>lctgm</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/fast/')">
                    <xslt:text>fast</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
                    <xslt:text>gnd</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvGenreTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvGenreTag-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvGenreTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvGenreTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvGenreTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
                      <xslt:variable name="vvGenreTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvGenreTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvGenreTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="       bf:Work/bf:genreForm/*[bflc:marcKey or marc:record] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.worldcat.org/fast/')] |       //bf:Item/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[bflc:marcKey or marc:record]        ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vGenreTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="(self::bf:genreForm or ancestor::bf:genreForm) and contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>655</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='155']">
                      <xslt:text>655</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vGenreTag='655'">
                  <xslt:text>a</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vGenreTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vGenreTag = '630'">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/childrensSubjects/')">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/mesh/')">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/nalt/')">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or              contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or              contains($relURI, '/fast/') or             contains($relURI, 'd-nb.info/gnd/')">
                      <xslt:text>7</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
                      <xslt:text>0</xslt:text>
                    </xslt:when>
                    <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
                      <xslt:text>5</xslt:text>
                    </xslt:when>
                    <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
                      <xslt:text>6</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
              <xslt:variable name="vvGenreTag-2">
                <xslt:choose>
                  <xslt:when test="contains($relURI, '/genreForms/')">
                    <xslt:text>lcgft</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
                    <xslt:text>lcdgt</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/graphicMaterials/')">
                    <xslt:text>lctgm</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, '/fast/')">
                    <xslt:text>fast</xslt:text>
                  </xslt:when>
                  <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
                    <xslt:text>gnd</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvGenreTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvGenreTag-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvGenreTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvGenreTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvGenreTag-0" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:choose>
                    <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
                      <xslt:variable name="vvGenreTag-0">
                        <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tPadLeft">
                            <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                            <xsl:with-param name="pPadChar" select="'0'" />
                            <xsl:with-param name="pStringLength" select="'8'" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:variable>
                      <xslt:if test="$vvGenreTag-0 != ''">
                        <marc:subfield code="0">
                          <xslt:value-of select="$vvGenreTag-0" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ] |                      //bf:Item/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ][not(*/rdfs:label/@xml:lang) or contains(translate(*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ] |                      //bf:Item/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ][not(*/rdfs:label/@xml:lang) or contains(translate(*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="vInd2Val">
              <xslt:choose>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcsh' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                  <xslt:text>0</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcshac' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                  <xslt:text>1</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='mesh' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                  <xslt:text>2</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='nal' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or             */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                  <xslt:text>3</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='cash' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                  <xslt:text>5</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='rvm' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                  <xslt:text>6</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                  <xslt:text>7</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSf2val">
              <xslt:choose>
                <xslt:when test="$vInd2Val = '7'">
                  <xslt:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xslt:variable name="vSourceUri">
                      <xslt:choose>
                        <xslt:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="bf:Source/bf:code">
                        <xsl:value-of select="bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vSourceUri != ''">
                        <xslt:choose>
                          <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                            <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                              <xsl:with-param name="pUri" select="$vSourceUri" />
                            </xsl:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="*/rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">655</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vInd2Val != ''">
                      <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="*/madsrdf:componentList">
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:variable name="v655-a">
                    <xslt:choose>
                      <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                        <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v655-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v655-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v655-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v655-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v655-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v655-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v655-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v655-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v655-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="*/madsrdf:authoritativeLabel or */rdfs:label">
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:variable name="v655-a">
                    <xslt:choose>
                      <xslt:when test="*/madsrdf:authoritativeLabel">
                        <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="*/rdfs:label[1]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v655-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:variable name="v655-2">
                <xslt:choose>
                  <xslt:when test="$vSf2val != ''">
                    <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v655-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$v655-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="*/bflc:applicableInstitution/*/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ] |                      //bf:Item/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ]">
            <xslt:variable name="vInd2Val">
              <xslt:choose>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcsh' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                  <xslt:text>0</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='lcshac' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                  <xslt:text>1</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='mesh' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                  <xslt:text>2</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='nal' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or             */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                  <xslt:text>3</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='cash' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                  <xslt:text>5</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source/bf:Source/bf:code='rvm' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                  <xslt:text>6</xslt:text>
                </xslt:when>
                <xslt:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                  <xslt:text>7</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSf2val">
              <xslt:choose>
                <xslt:when test="$vInd2Val = '7'">
                  <xslt:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xslt:variable name="vSourceUri">
                      <xslt:choose>
                        <xslt:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="bf:Source/bf:code">
                        <xsl:value-of select="bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vSourceUri != ''">
                        <xslt:choose>
                          <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                            <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                              <xsl:with-param name="pUri" select="$vSourceUri" />
                            </xsl:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="*/rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">655</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vInd2Val != ''">
                      <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>4</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="*/madsrdf:componentList">
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:variable name="v655-a">
                    <xslt:choose>
                      <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                        <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v655-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="*/madsrdf:componentList/*">
                    <xslt:choose>
                      <xslt:when test="position() &gt; 1">
                        <xslt:choose>
                          <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xslt:variable name="v655-v">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-v != ''">
                              <marc:subfield code="v">
                                <xslt:value-of select="$v655-v" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xslt:variable name="v655-y">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-y != ''">
                              <marc:subfield code="y">
                                <xslt:value-of select="$v655-y" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xslt:variable name="v655-z">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-z != ''">
                              <marc:subfield code="z">
                                <xslt:value-of select="$v655-z" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:variable name="v655-x">
                              <xslt:choose>
                                <xslt:when test="madsrdf:authoritativeLabel">
                                  <xslt:for-each select="madsrdf:authoritativeLabel">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:for-each select="rdfs:label">
                                    <xslt:choose>
                                      <xslt:when test="position() = 1">
                                        <xslt:call-template name="tChopPunct">
                                          <xslt:with-param name="pString" select="." />
                                        </xslt:call-template>
                                      </xslt:when>
                                      <xslt:otherwise>
                                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                                      </xslt:otherwise>
                                    </xslt:choose>
                                  </xslt:for-each>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:variable>
                            <xslt:if test="$v655-x != ''">
                              <marc:subfield code="x">
                                <xslt:value-of select="$v655-x" />
                              </marc:subfield>
                            </xslt:if>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="*/madsrdf:authoritativeLabel or */rdfs:label">
                  <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:variable name="v655-a">
                    <xslt:choose>
                      <xslt:when test="*/madsrdf:authoritativeLabel">
                        <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="*/rdfs:label[1]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xslt:value-of select="$v655-a" />
                    </marc:subfield>
                  </xslt:if>
                  <xslt:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:variable name="v655-2">
                <xslt:choose>
                  <xslt:when test="$vSf2val != ''">
                    <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v655-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$v655-2" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="*/bflc:applicableInstitution/*/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddedEntryNameLookupTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddedEntryNameLookupTag='700'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameLookupTag='710'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameLookupTag='711'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddedEntryNameLookupTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameLookupTag.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="             ancestor::node()/bf:role/bf:Role/rdfs:label[.!='Contributor']|             ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel[.!='Contributor']">
                <marc:subfield code="e">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="           ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] |            ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                <xslt:variable name="vRelationURI">
                  <xslt:choose>
                    <xslt:when test="contains(.,'id.loc.gov/')">
                      <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vRelationLabel">
                  <xslt:choose>
                    <xslt:when test="$vRelationURI != ''">
                      <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vRelationURI" />
                      </xsl:call-template>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vvAddedEntryNameLookupTag-e" />
                <xslt:if test="$vvAddedEntryNameLookupTag-e != ''">
                  <marc:subfield code="e">
                    <xslt:value-of select="$vvAddedEntryNameLookupTag-e" />
                  </marc:subfield>
                </xslt:if>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'rwo'))">
                  <xslt:variable name="vvAddedEntryNameLookupTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameLookupTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvAddedEntryNameLookupTag-0" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'authorities'))">
                  <xslt:variable name="vvAddedEntryNameLookupTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameLookupTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameLookupTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)]       ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddedEntryNameLookupTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddedEntryNameLookupTag='700'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameLookupTag='710'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameLookupTag='711'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddedEntryNameLookupTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameLookupTag.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="             ancestor::node()/bf:role/bf:Role/rdfs:label[.!='Contributor']|             ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel[.!='Contributor']">
                <marc:subfield code="e">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="           ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] |            ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                <xslt:variable name="vRelationURI">
                  <xslt:choose>
                    <xslt:when test="contains(.,'id.loc.gov/')">
                      <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vRelationLabel">
                  <xslt:choose>
                    <xslt:when test="$vRelationURI != ''">
                      <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vRelationURI" />
                      </xsl:call-template>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vvAddedEntryNameLookupTag-e" />
                <xslt:if test="$vvAddedEntryNameLookupTag-e != ''">
                  <marc:subfield code="e">
                    <xslt:value-of select="$vvAddedEntryNameLookupTag-e" />
                  </marc:subfield>
                </xslt:if>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'rwo'))">
                  <xslt:variable name="vvAddedEntryNameLookupTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameLookupTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvAddedEntryNameLookupTag-0" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'authorities'))">
                  <xslt:variable name="vvAddedEntryNameLookupTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameLookupTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameLookupTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'isni.org/isni/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'viaf.org/viaf/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.oclc.org/worldcat/entity/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddedEntryNameMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='700'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='711'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddedEntryNameMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ''">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:otherwise>
                      <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/rdfs:label|ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel">
                    <xslt:variable name="vvAddedEntryNameMarcKeyTag-e">
                      <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:variable>
                    <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
                      <marc:subfield code="e">
                        <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <xslt:variable name="vRelationURI">
                      <xslt:choose>
                        <xslt:when test="contains(.,'id.loc.gov/')">
                          <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelationLabel">
                      <xslt:choose>
                        <xslt:when test="$vRelationURI != ''">
                          <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:with-param name="pUri" select="$vRelationURI" />
                          </xsl:call-template>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vvAddedEntryNameMarcKeyTag-e" />
                    <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
                      <marc:subfield code="e">
                        <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'rwo')) and                      not(contains($relURI,'id.oclc.org/worldcat/entity/')) and                      not(contains($relURI,'isni.org/isni/')) and                      not(contains($relURI,'viaf.org/viaf/')) and                      not(contains($relURI,'d-nb.info/gnd/'))">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-0" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="contains($relURI,'id.oclc.org/worldcat/entity/') or                      contains($relURI,'isni.org/isni/') or                      contains($relURI,'viaf.org/viaf/') or                      contains($relURI,'d-nb.info/gnd/')">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'authorities'))">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record]       ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'isni.org/isni/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'viaf.org/viaf/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'id.oclc.org/worldcat/entity/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddedEntryNameMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='700'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddedEntryNameMarcKeyTag='711'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddedEntryNameMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ''">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:otherwise>
                      <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/rdfs:label|ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel">
                    <xslt:variable name="vvAddedEntryNameMarcKeyTag-e">
                      <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:variable>
                    <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
                      <marc:subfield code="e">
                        <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <xslt:variable name="vRelationURI">
                      <xslt:choose>
                        <xslt:when test="contains(.,'id.loc.gov/')">
                          <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vRelationLabel">
                      <xslt:choose>
                        <xslt:when test="$vRelationURI != ''">
                          <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:with-param name="pUri" select="$vRelationURI" />
                          </xsl:call-template>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:variable name="vvAddedEntryNameMarcKeyTag-e" />
                    <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
                      <marc:subfield code="e">
                        <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
                  <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'rwo')) and                      not(contains($relURI,'id.oclc.org/worldcat/entity/')) and                      not(contains($relURI,'isni.org/isni/')) and                      not(contains($relURI,'viaf.org/viaf/')) and                      not(contains($relURI,'d-nb.info/gnd/'))">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-0">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-0 != ''">
                    <marc:subfield code="0">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-0" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="contains($relURI,'id.oclc.org/worldcat/entity/') or                      contains($relURI,'isni.org/isni/') or                      contains($relURI,'viaf.org/viaf/') or                      contains($relURI,'d-nb.info/gnd/')">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
                <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'authorities'))">
                  <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:if test="$xslProcessor != 'libxslt'">
        <xslt:choose>
          <xslt:when test="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:hasPart[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasPart/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]         [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:for-each select="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:hasPart[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasPart/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]         [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
              <xslt:variable name="relURI">
                <xslt:choose>
                  <xslt:when test="contains(@rdf:resource,'id.loc.gov/resources/hubs')">
                    <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                    <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vRelResourcePreNS">
                <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pRelUri" select="$relURI" />
                  <xsl:with-param name="pContext" select="." />
                </xsl:call-template>
              </xslt:variable>
              <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
              <xslt:variable name="vAddRelationLookupTag">
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:record">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                        <xslt:text>700</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                        <xslt:text>710</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                        <xslt:text>711</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                        <xslt:text>730</xslt:text>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>758</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>758</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vValidSubfields">
                <xslt:choose>
                  <xslt:when test="$vAddRelationLookupTag='700'">
                    <xslt:text>abcdfghjklmnopqrst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='710'">
                    <xslt:text>abcdfghklmnoprst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='711'">
                    <xslt:text>acdeghklnpqst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='730'">
                    <xslt:text>adfghklmnoprst</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vXmlLang">
                <xslt:value-of select="rdfs:label/@xml:lang" />
              </xslt:variable>
              <marc:datafield>
                <xslt:attribute name="tag">
                  <xslt:value-of select="$vAddRelationLookupTag" />
                </xslt:attribute>
                <xslt:if test="$vXmlLang != ''">
                  <xslt:attribute name="xml:lang">
                    <xslt:value-of select="$vXmlLang" />
                  </xslt:attribute>
                </xslt:if>
                <xslt:attribute name="ind1">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vAddRelationLookupTag = '730'">
                        <xslt:choose>
                          <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                            <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationLookupTag.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:text>0</xslt:text>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationLookupTag.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:attribute name="ind2">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/vocabulary/relationship/part']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="ancestor::bflc:Relationship/bflc:relation//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="self::bf:hasPart or ancestor::bf:hasPart">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:for-each select="../bf:relationship/bf:Relationship[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bf:relationship/@rdf:resource |                        ../bflc:relation/bflc:Relation[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bflc:relation/@rdf:resource">
                  <xslt:variable name="vRelationURI">
                    <xslt:choose>
                      <xslt:when test="contains(.,'id.loc.gov/entities')">
                        <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:variable name="vRelationLabel">
                    <xslt:choose>
                      <xslt:when test="parent::node()/marc:record">
                        <xsl:copy-of select="parent::node()/marc:record" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vRelationURI != ''">
                        <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:with-param name="pUri" select="$vRelationURI" />
                        </xsl:call-template>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:variable name="vvAddRelationLookupTag-i">
                    <xsl:value-of select="$vRelationLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddRelationLookupTag-i != ''">
                    <marc:subfield code="i">
                      <xslt:value-of select="$vvAddRelationLookupTag-i" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:for-each>
                <xslt:for-each select="../../bf:relationship/bf:Relationship/rdfs:label|../../bf:relationship/bf:Relationship/madsrdf:authoritativeLabel |                          ../../bflc:relation/bflc:Relation/rdfs:label|../../bflc:relation/bflc:Relation/madsrdf:authoritativeLabel">
                  <marc:subfield code="i">
                    <xslt:value-of select="." />
                  </marc:subfield>
                </xslt:for-each>
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                    <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <marc:subfield>
                        <xsl:attribute name="code">
                          <xsl:value-of select="@code" />
                        </xsl:attribute>
                        <xsl:value-of select="." />
                      </marc:subfield>
                    </xsl:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:datafield[@tag = '240'] and $vAddRelationLookupTag != '730'">
                    <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <marc:subfield>
                        <xsl:choose>
                          <xsl:when test="@code = 'a'">
                            <xsl:attribute name="code">t</xsl:attribute>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:value-of select="." />
                      </marc:subfield>
                    </xsl:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="../../bf:relationship/bf:Relationship/@rdf:about or ../bf:relationship/@rdf:resource">
                    <xslt:for-each select="../../bf:relationship/bf:Relationship/@rdf:about | ../bf:relationship/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:when test="../../bflc:relation/bflc:Relation/@rdf:about or ../bflc:relation/@rdf:resource">
                    <xslt:for-each select="../../bflc:relation/bflc:Relation/@rdf:about | ../bflc:relation/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:variable name="vvAddRelationLookupTag-1">
                  <xslt:choose>
                    <xslt:when test="$relURI != ''">
                      <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:if test="$vvAddRelationLookupTag-1 != ''">
                  <marc:subfield code="1">
                    <xslt:value-of select="$vvAddRelationLookupTag-1" />
                  </marc:subfield>
                </xslt:if>
              </marc:datafield>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:hasPart[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasPart/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]         ">
              <xslt:variable name="relURI">
                <xslt:choose>
                  <xslt:when test="contains(@rdf:resource,'id.loc.gov/resources/hubs')">
                    <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                    <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vRelResourcePreNS">
                <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pRelUri" select="$relURI" />
                  <xsl:with-param name="pContext" select="." />
                </xsl:call-template>
              </xslt:variable>
              <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
              <xslt:variable name="vAddRelationLookupTag">
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:record">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                        <xslt:text>700</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                        <xslt:text>710</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                        <xslt:text>711</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                        <xslt:text>730</xslt:text>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>758</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>758</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vValidSubfields">
                <xslt:choose>
                  <xslt:when test="$vAddRelationLookupTag='700'">
                    <xslt:text>abcdfghjklmnopqrst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='710'">
                    <xslt:text>abcdfghklmnoprst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='711'">
                    <xslt:text>acdeghklnpqst</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vAddRelationLookupTag='730'">
                    <xslt:text>adfghklmnoprst</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vXmlLang">
                <xslt:value-of select="rdfs:label/@xml:lang" />
              </xslt:variable>
              <marc:datafield>
                <xslt:attribute name="tag">
                  <xslt:value-of select="$vAddRelationLookupTag" />
                </xslt:attribute>
                <xslt:if test="$vXmlLang != ''">
                  <xslt:attribute name="xml:lang">
                    <xslt:value-of select="$vXmlLang" />
                  </xslt:attribute>
                </xslt:if>
                <xslt:attribute name="ind1">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vAddRelationLookupTag = '730'">
                        <xslt:choose>
                          <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                            <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationLookupTag.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:text>0</xslt:text>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationLookupTag.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:attribute name="ind2">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/vocabulary/relationship/part']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="ancestor::bflc:Relationship/bflc:relation//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                      <xslt:when test="self::bf:hasPart or ancestor::bf:hasPart">
                        <xslt:text>2</xslt:text>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:for-each select="../bf:relationship/bf:Relationship[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bf:relationship/@rdf:resource |                        ../bflc:relation/bflc:Relation[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bflc:relation/@rdf:resource">
                  <xslt:variable name="vRelationURI">
                    <xslt:choose>
                      <xslt:when test="contains(.,'id.loc.gov/entities')">
                        <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:variable name="vRelationLabel">
                    <xslt:choose>
                      <xslt:when test="parent::node()/marc:record">
                        <xsl:copy-of select="parent::node()/marc:record" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:when test="$vRelationURI != ''">
                        <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:with-param name="pUri" select="$vRelationURI" />
                        </xsl:call-template>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:variable name="vvAddRelationLookupTag-i">
                    <xsl:value-of select="$vRelationLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvAddRelationLookupTag-i != ''">
                    <marc:subfield code="i">
                      <xslt:value-of select="$vvAddRelationLookupTag-i" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:for-each>
                <xslt:for-each select="../../bf:relationship/bf:Relationship/rdfs:label|../../bf:relationship/bf:Relationship/madsrdf:authoritativeLabel |                          ../../bflc:relation/bflc:Relation/rdfs:label|../../bflc:relation/bflc:Relation/madsrdf:authoritativeLabel">
                  <marc:subfield code="i">
                    <xslt:value-of select="." />
                  </marc:subfield>
                </xslt:for-each>
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                    <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <marc:subfield>
                        <xsl:attribute name="code">
                          <xsl:value-of select="@code" />
                        </xsl:attribute>
                        <xsl:value-of select="." />
                      </marc:subfield>
                    </xsl:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:datafield[@tag = '240'] and $vAddRelationLookupTag != '730'">
                    <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <marc:subfield>
                        <xsl:choose>
                          <xsl:when test="@code = 'a'">
                            <xsl:attribute name="code">t</xsl:attribute>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:value-of select="." />
                      </marc:subfield>
                    </xsl:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:choose>
                  <xslt:when test="../../bf:relationship/bf:Relationship/@rdf:about or ../bf:relationship/@rdf:resource">
                    <xslt:for-each select="../../bf:relationship/bf:Relationship/@rdf:about | ../bf:relationship/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:when test="../../bflc:relation/bflc:Relation/@rdf:about or ../bflc:relation/@rdf:resource">
                    <xslt:for-each select="../../bflc:relation/bflc:Relation/@rdf:about | ../bflc:relation/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
                <xslt:variable name="vvAddRelationLookupTag-1">
                  <xslt:choose>
                    <xslt:when test="$relURI != ''">
                      <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:if test="$vvAddRelationLookupTag-1 != ''">
                  <marc:subfield code="1">
                    <xslt:value-of select="$vvAddRelationLookupTag-1" />
                  </marc:subfield>
                </xslt:if>
              </marc:datafield>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:if>
      <xslt:if test="$xslProcessor = 'libxslt'">
        <xslt:choose>
          <xslt:when test="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries'))]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |                     bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries'))]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries'))]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries'))]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo[contains(@rdf:resource, 'hubs')] |                     bf:Work/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                     bf:Work/bf:hasPart[contains(@rdf:resource, 'hubs')] |                     bf:Work/bf:hasPart/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]             ">
            <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed relationship node(s)/Hub(s) <xsl:value-of select="name()" />.  Repeatable target field 7XX.</xsl:message>
          </xslt:when>
        </xslt:choose>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:hasPart/bf:*[bflc:marcKey or marc:record]             [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:hasPart/bf:*[bflc:marcKey or marc:record]             [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddRelationMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>730</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddRelationMarcKeyTag='700'">
                  <xslt:text>abcdfghjklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='710'">
                  <xslt:text>abcdfghklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='711'">
                  <xslt:text>acdeghklnpqst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='730'">
                  <xslt:text>adfghklmnoprst</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelStrs">
              <xsl:value-of select="'             http://id.loc.gov/vocabulary/relationship/subseries              http://id.loc.gov/vocabulary/relationship/series              http://id.loc.gov/vocabulary/relationship/translationof              http://id.loc.gov/vocabulary/relationship/translatedas              http://id.loc.gov/vocabulary/relationship/supplementto              http://id.loc.gov/vocabulary/relationship/supplement              http://id.loc.gov/vocabulary/relationship/partof              http://id.loc.gov/vocabulary/relationship/part              http://id.loc.gov/vocabulary/relationship/otheredition              http://id.loc.gov/vocabulary/relationship/otherphysicalformat              http://id.loc.gov/vocabulary/relationship/issuedwith              http://id.loc.gov/vocabulary/relationship/continuedinpart              http://id.loc.gov/vocabulary/relationship/continuationof              http://id.loc.gov/vocabulary/relationship/continues              http://id.loc.gov/vocabulary/relationship/precededby              http://id.loc.gov/vocabulary/relationship/mergerof              http://id.loc.gov/vocabulary/relationship/absorbedby              http://id.loc.gov/vocabulary/relationship/absorptionof              http://id.loc.gov/vocabulary/relationship/separatedby              http://id.loc.gov/vocabulary/relationship/continuedby              http://id.loc.gov/vocabulary/relationship/continuedinpartby              http://id.loc.gov/vocabulary/relationship/succeededby              http://id.loc.gov/vocabulary/relationship/splitinto              http://id.loc.gov/vocabulary/relationship/mergedtoform              http://id.loc.gov/vocabulary/relationship/datasource              http://id.loc.gov/vocabulary/relationship/relatedwork             '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddRelationMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vAddRelationMarcKeyTag = '730'">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                          <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>0</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/vocabulary/relationship/part']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="ancestor::bflc:Relationship/bflc:relation//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="self::bf:hasPart or ancestor::bf:hasPart">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship/bf:Relationship[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bf:relationship/@rdf:resource |                      ancestor::bflc:Relationship/bflc:relation/bflc:Relation[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bflc:relation/@rdf:resource">
                <xslt:variable name="vRelationURI">
                  <xslt:choose>
                    <xslt:when test="contains(.,'id.loc.gov/entities')">
                      <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vRelationLabel">
                  <xslt:choose>
                    <xslt:when test="parent::node()/marc:record">
                      <xsl:copy-of select="parent::node()/marc:record" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vRelationURI != ''">
                      <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vRelationURI" />
                      </xsl:call-template>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vvAddRelationMarcKeyTag-i">
                  <xsl:value-of select="$vRelationLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$vvAddRelationMarcKeyTag-i != ''">
                  <marc:subfield code="i">
                    <xslt:value-of select="$vvAddRelationMarcKeyTag-i" />
                  </marc:subfield>
                </xslt:if>
              </xslt:for-each>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bf:Relationship[rdfs:label or madsrdf:authoritativeLabel]                                   |                                   ancestor::bflc:Relationship/bflc:relation[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bflc:Relation[rdfs:label or madsrdf:authoritativeLabel]                                   ">
                <marc:subfield code="i">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[@tag = '240'] and $vAddRelationMarcKeyTag != '730'">
                  <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:choose>
                        <xsl:when test="@code = 'a'">
                          <xsl:attribute name="code">t</xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                       |                       ancestor::bflc:Relationship/bflc:relation[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                      ">
                <marc:subfield code="4">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:variable name="vvAddRelationMarcKeyTag-1">
                <xslt:choose>
                  <xslt:when test="$relURI != ''">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvAddRelationMarcKeyTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvAddRelationMarcKeyTag-1" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:hasPart/bf:*[bflc:marcKey or marc:record]             ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vAddRelationMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>700</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>710</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>711</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>730</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vAddRelationMarcKeyTag='700'">
                  <xslt:text>abcdfghjklmnopqrst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='710'">
                  <xslt:text>abcdfghklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='711'">
                  <xslt:text>acdeghklnpqst</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddRelationMarcKeyTag='730'">
                  <xslt:text>adfghklmnoprst</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelStrs">
              <xsl:value-of select="'             http://id.loc.gov/vocabulary/relationship/subseries              http://id.loc.gov/vocabulary/relationship/series              http://id.loc.gov/vocabulary/relationship/translationof              http://id.loc.gov/vocabulary/relationship/translatedas              http://id.loc.gov/vocabulary/relationship/supplementto              http://id.loc.gov/vocabulary/relationship/supplement              http://id.loc.gov/vocabulary/relationship/partof              http://id.loc.gov/vocabulary/relationship/part              http://id.loc.gov/vocabulary/relationship/otheredition              http://id.loc.gov/vocabulary/relationship/otherphysicalformat              http://id.loc.gov/vocabulary/relationship/issuedwith              http://id.loc.gov/vocabulary/relationship/continuedinpart              http://id.loc.gov/vocabulary/relationship/continuationof              http://id.loc.gov/vocabulary/relationship/continues              http://id.loc.gov/vocabulary/relationship/precededby              http://id.loc.gov/vocabulary/relationship/mergerof              http://id.loc.gov/vocabulary/relationship/absorbedby              http://id.loc.gov/vocabulary/relationship/absorptionof              http://id.loc.gov/vocabulary/relationship/separatedby              http://id.loc.gov/vocabulary/relationship/continuedby              http://id.loc.gov/vocabulary/relationship/continuedinpartby              http://id.loc.gov/vocabulary/relationship/succeededby              http://id.loc.gov/vocabulary/relationship/splitinto              http://id.loc.gov/vocabulary/relationship/mergedtoform              http://id.loc.gov/vocabulary/relationship/datasource              http://id.loc.gov/vocabulary/relationship/relatedwork             '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddRelationMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vAddRelationMarcKeyTag = '730'">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                          <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>0</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/vocabulary/relationship/part']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="ancestor::bflc:Relationship/bflc:relation//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                    <xslt:when test="self::bf:hasPart or ancestor::bf:hasPart">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship/bf:Relationship[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bf:relationship/@rdf:resource |                      ancestor::bflc:Relationship/bflc:relation/bflc:Relation[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bflc:relation/@rdf:resource">
                <xslt:variable name="vRelationURI">
                  <xslt:choose>
                    <xslt:when test="contains(.,'id.loc.gov/entities')">
                      <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vRelationLabel">
                  <xslt:choose>
                    <xslt:when test="parent::node()/marc:record">
                      <xsl:copy-of select="parent::node()/marc:record" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vRelationURI != ''">
                      <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vRelationURI" />
                      </xsl:call-template>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:variable name="vvAddRelationMarcKeyTag-i">
                  <xsl:value-of select="$vRelationLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$vvAddRelationMarcKeyTag-i != ''">
                  <marc:subfield code="i">
                    <xslt:value-of select="$vvAddRelationMarcKeyTag-i" />
                  </marc:subfield>
                </xslt:if>
              </xslt:for-each>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bf:Relationship[rdfs:label or madsrdf:authoritativeLabel]                                   |                                   ancestor::bflc:Relationship/bflc:relation[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bflc:Relation[rdfs:label or madsrdf:authoritativeLabel]                                   ">
                <marc:subfield code="i">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
                  <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[@tag = '240'] and $vAddRelationMarcKeyTag != '730'">
                  <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:choose>
                        <xsl:when test="@code = 'a'">
                          <xsl:attribute name="code">t</xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="ancestor::bf:Relation/bf:relationship[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                       |                       ancestor::bflc:Relationship/bflc:relation[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                      ">
                <marc:subfield code="4">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:variable name="vvAddRelationMarcKeyTag-1">
                <xslt:choose>
                  <xslt:when test="$relURI != ''">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvAddRelationMarcKeyTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvAddRelationMarcKeyTag-1" />
                </marc:subfield>
              </xslt:if>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="vNameAuthPreNS">
              <xslt:choose>
                <xslt:when test="bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="." />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
            <xslt:variable name="vAddEntryTag">
              <xslt:choose>
                <xslt:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
                  <xslt:text>720</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
                  <xslt:text>700</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xslt:text>710</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xslt:text>711</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>720</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuthTag">
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='710'">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vAuthSubfields">
              <xslt:choose>
                <xslt:when test="$vNameAuthTag='100'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vNameAuthTag='110'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vNameAuthTag='111'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vWorkUri">
              <xsl:value-of select="../../../../@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:variable name="vTitleResourcePreNS">
              <xslt:choose>
                <xslt:when test="../../../../bf:title/bf:Title/bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="../../../../bf:title/bf:Title" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:variable name="vTitleTag">
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='710'">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleSubfields">
              <xslt:choose>
                <xslt:when test="$vTitleTag='100'">
                  <xslt:text>fhklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vTitleTag='110'">
                  <xslt:text>fhklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vTitleTag='111'">
                  <xslt:text>fhklnpst</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddEntryTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='700'">
                      <xslt:choose>
                        <xslt:when test="contains(local-name(),'Family')">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>1</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='710'">
                      <xslt:choose>
                        <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='720'">
                      <xslt:choose>
                        <xslt:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text> </xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>2</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="ancestor::bf:hasPart">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='720'">
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <marc:subfield code="e">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="i">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="." />
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="vvAddEntryTag-a">
                        <xslt:choose>
                          <xslt:when test="madsrdf:elementList">
                            <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:when test="madsrdf:authoritativeLabel">
                            <xslt:for-each select="madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvAddEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$vvAddEntryTag-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='710'">
                          <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='711'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $q.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='711'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vAddEntryTag='711'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and                                          not(contains(.,'REPLACE')) and                                          not(contains(., 'id.oclc.org/worldcat/entity/')) and                                         not(contains(., 'isni.org/isni/')) and                                         (contains(., 'viaf.org/') and contains(., '#'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[                             contains(., 'id.oclc.org/worldcat/entity/') or                              contains(., 'isni.org/isni/') or                             (contains(., 'viaf.org/') and not(contains(., '#')))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]">
                      <xsl:for-each select="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]/marc:subfield[contains($vTitleSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="ancestor::bf:Hub">
                        <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="t">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $t.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:legalDate">
                          <marc:subfield code="d">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:originDate">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="f">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $f.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                          <marc:subfield code="m">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                          <marc:subfield code="n">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                          <marc:subfield code="p">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:musicKey">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="r">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $r.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:version">
                          <marc:subfield code="s">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="ancestor::bf:Hub">
                    <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="x">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $x.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xslt:variable name="vvAddEntryTag-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvAddEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$vvAddEntryTag-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="../../bflc:applicableInstitution/*/bf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="5">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $5.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*">
            <xslt:variable name="vNameAuthPreNS">
              <xslt:choose>
                <xslt:when test="bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="." />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
            <xslt:variable name="vAddEntryTag">
              <xslt:choose>
                <xslt:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
                  <xslt:text>720</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
                  <xslt:text>700</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xslt:text>710</xslt:text>
                </xslt:when>
                <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xslt:text>711</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>720</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vNameAuthTag">
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='710'">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vAuthSubfields">
              <xslt:choose>
                <xslt:when test="$vNameAuthTag='100'">
                  <xslt:text>abcdgjq</xslt:text>
                </xslt:when>
                <xslt:when test="$vNameAuthTag='110'">
                  <xslt:text>abcdgn</xslt:text>
                </xslt:when>
                <xslt:when test="$vNameAuthTag='111'">
                  <xslt:text>acdegnq</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vWorkUri">
              <xsl:value-of select="../../../../@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:variable name="vTitleResourcePreNS">
              <xslt:choose>
                <xslt:when test="../../../../bf:title/bf:Title/bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="../../../../bf:title/bf:Title" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:variable name="vTitleTag">
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='710'">
                  <xslt:text>110</xslt:text>
                </xslt:when>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:text>111</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>100</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleSubfields">
              <xslt:choose>
                <xslt:when test="$vTitleTag='100'">
                  <xslt:text>fhklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vTitleTag='110'">
                  <xslt:text>fhklmnoprst</xslt:text>
                </xslt:when>
                <xslt:when test="$vTitleTag='111'">
                  <xslt:text>fhklnpst</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vAddEntryTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='700'">
                      <xslt:choose>
                        <xslt:when test="contains(local-name(),'Family')">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>1</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='710'">
                      <xslt:choose>
                        <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:when test="$vAddEntryTag='720'">
                      <xslt:choose>
                        <xslt:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text> </xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>2</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="ancestor::bf:hasPart">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='720'">
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <marc:subfield code="e">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield code="i">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="." />
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:variable name="vvAddEntryTag-a">
                        <xslt:choose>
                          <xslt:when test="madsrdf:elementList">
                            <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:when test="madsrdf:authoritativeLabel">
                            <xslt:for-each select="madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvAddEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xslt:value-of select="$vvAddEntryTag-a" />
                        </marc:subfield>
                      </xslt:if>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='710'">
                          <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='711'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='700'">
                          <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </marc:subfield>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $q.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                      <xslt:choose>
                        <xslt:when test="$vAddEntryTag='711'">
                          <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </marc:subfield>
                          </xslt:for-each>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:choose>
                    <xslt:when test="$vAddEntryTag='711'">
                      <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xslt:choose>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </marc:subfield>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xslt:choose>
                        <xslt:when test="madsrdf:code">
                          <xslt:for-each select="madsrdf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="bf:code">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and                                          not(contains(.,'REPLACE')) and                                          not(contains(., 'id.oclc.org/worldcat/entity/')) and                                         not(contains(., 'isni.org/isni/')) and                                         (contains(., 'viaf.org/') and contains(., '#'))]">
                    <marc:subfield code="0">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[                             contains(., 'id.oclc.org/worldcat/entity/') or                              contains(., 'isni.org/isni/') or                             (contains(., 'viaf.org/') and not(contains(., '#')))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]">
                      <xsl:for-each select="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]/marc:subfield[contains($vTitleSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code" />
                          </xsl:attribute>
                          <xsl:value-of select="." />
                        </marc:subfield>
                      </xsl:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="ancestor::bf:Hub">
                        <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="t">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $t.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:legalDate">
                          <marc:subfield code="d">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:originDate">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="f">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $f.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                          <marc:subfield code="m">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                          <marc:subfield code="n">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                          <marc:subfield code="p">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="bf:musicKey">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="r">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $r.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="bf:version">
                          <marc:subfield code="s">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                  <xslt:for-each select="ancestor::bf:Hub">
                    <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <marc:subfield code="x">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $x.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                    <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xslt:variable name="vvAddEntryTag-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$vvAddEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$vvAddEntryTag-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="../../bflc:applicableInstitution/*/bf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="5">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $5.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="vTitleResourcePreNS">
              <xslt:choose>
                <xslt:when test="bf:title/bf:Title/bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="bf:title/bf:Title" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">730</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum">
                      <xsl:value-of select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
                      <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="local-name(parent::*)='hasPart'">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xsl:variable name="vNodeUri" select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield code="i">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="." />
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xslt:choose>
                <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
                  <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
              <xslt:for-each select="bf:source/bf:Source/bf:code">
                <marc:subfield code="2">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value" />
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)]">
            <xslt:variable name="vTitleResourcePreNS">
              <xslt:choose>
                <xslt:when test="bf:title/bf:Title/bflc:marcKey">
                  <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="@rdf:about" />
                    <xsl:with-param name="pContext" select="bf:title/bf:Title" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">730</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum">
                      <xsl:value-of select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                    <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
                      <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="local-name(parent::*)='hasPart'">
                      <xslt:text>2</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="3">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $3.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xsl:variable name="vNodeUri" select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield code="i">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="." />
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xslt:choose>
                <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
                  <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <marc:subfield>
                      <xsl:attribute name="code">
                        <xsl:value-of select="@code" />
                      </xsl:attribute>
                      <xsl:value-of select="." />
                    </marc:subfield>
                  </xsl:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
              <xslt:for-each select="bf:source/bf:Source/bf:code">
                <marc:subfield code="2">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value" />
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $5.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:apply-templates select="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:relatedTo/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:hasPart/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']" mode="generate-740">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:choose>
        <xslt:when test="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic'][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic'][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">752</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="madsrdf:componentList/*">
                <xslt:choose>
                  <xslt:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                    <xslt:variable name="v752-a">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-a != ''">
                      <marc:subfield code="a">
                        <xslt:value-of select="$v752-a" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                    <xslt:variable name="v752-b">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-b != ''">
                      <marc:subfield code="b">
                        <xslt:value-of select="$v752-b" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                    <xslt:variable name="v752-c">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-c != ''">
                      <marc:subfield code="c">
                        <xslt:value-of select="$v752-c" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                    <xslt:variable name="v752-d">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-d != ''">
                      <marc:subfield code="d">
                        <xslt:value-of select="$v752-d" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                    <xslt:variable name="v752-f">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-f != ''">
                      <marc:subfield code="f">
                        <xslt:value-of select="$v752-f" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                    <xslt:variable name="v752-g">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-g != ''">
                      <marc:subfield code="g">
                        <xslt:value-of select="$v752-g" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                    <xslt:variable name="v752-h">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-h != ''">
                      <marc:subfield code="h">
                        <xslt:value-of select="$v752-h" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value" />
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
                <marc:subfield code="4">
                  <xslt:choose>
                    <xslt:when test="madsrdf:code">
                      <xslt:for-each select="madsrdf:code">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="bf:code">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
                <marc:subfield code="4">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $2.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']">
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">752</xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:text> </xslt:text>
              </xslt:attribute>
              <xslt:for-each select="madsrdf:componentList/*">
                <xslt:choose>
                  <xslt:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                    <xslt:variable name="v752-a">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-a != ''">
                      <marc:subfield code="a">
                        <xslt:value-of select="$v752-a" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                    <xslt:variable name="v752-b">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-b != ''">
                      <marc:subfield code="b">
                        <xslt:value-of select="$v752-b" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                    <xslt:variable name="v752-c">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-c != ''">
                      <marc:subfield code="c">
                        <xslt:value-of select="$v752-c" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                    <xslt:variable name="v752-d">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-d != ''">
                      <marc:subfield code="d">
                        <xslt:value-of select="$v752-d" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                    <xslt:variable name="v752-f">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-f != ''">
                      <marc:subfield code="f">
                        <xslt:value-of select="$v752-f" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                    <xslt:variable name="v752-g">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-g != ''">
                      <marc:subfield code="g">
                        <xslt:value-of select="$v752-g" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                    <xslt:variable name="v752-h">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v752-h != ''">
                      <marc:subfield code="h">
                        <xslt:value-of select="$v752-h" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value" />
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
                <marc:subfield code="4">
                  <xslt:choose>
                    <xslt:when test="madsrdf:code">
                      <xslt:for-each select="madsrdf:code">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="bf:code">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
                <marc:subfield code="4">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $2.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:apply-templates select="bf:Instance/bf:systemRequirement/*[       local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel' or       local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage' or       local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem']" mode="generate-753">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="       bf:Work/bf:relation/bf:Relation[bf:relationship/@rdf:resource and bf:associatedResource/@rdf:resource] |       bf:Work/bf:relation/bf:Relation[bf:relationship/bf:Relationship/rdfs:label and bf:associatedResource/@rdf:resource] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/@rdf:resource and bf:relatedTo/@rdf:resource] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/rdfs:label and bf:relatedTo/@rdf:resource]" mode="generate-758">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="       bf:Work/@rdf:about |       bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')][1]/@rdf:about" mode="generate-758">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'subseries') or contains(bf:Relationship/@rdf:about, 'subseries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'series') or contains(bf:Relationship/@rdf:about, 'series')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translationof') or contains(bf:Relationship/@rdf:about, 'translationof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translatedas') or contains(bf:Relationship/@rdf:about, 'translatedas')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplementto') or contains(bf:Relationship/@rdf:about, 'supplementto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'partof') or contains(bf:Relationship/@rdf:about, 'partof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, '/part') or contains(bf:Relationship/@rdf:about, '/part')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otheredition') or contains(bf:Relationship/@rdf:about, 'otheredition')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherphysicalformat') or contains(bf:Relationship/@rdf:about, 'otherphysicalformat')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'issuedwith') or contains(bf:Relationship/@rdf:about, 'issuedwith')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedinpart') or contains(bf:Relationship/@rdf:about, 'continuedinpart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuationof') or contains(bf:Relationship/@rdf:about, 'continuationof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'precededby') or contains(bf:Relationship/@rdf:about, 'precededby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergerof') or contains(bf:Relationship/@rdf:about, 'mergerof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbedby') or contains(bf:Relationship/@rdf:about, 'absorbedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorptionof') or contains(bf:Relationship/@rdf:about, 'absorptionof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'separatedby') or contains(bf:Relationship/@rdf:about, 'separatedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedby') or contains(bf:Relationship/@rdf:about, 'continuedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedinpartby') or contains(bf:Relationship/@rdf:about, 'continuedinpartby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'succeededby') or contains(bf:Relationship/@rdf:about, 'succeededby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'splitinto') or contains(bf:Relationship/@rdf:about, 'splitinto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergedtoform') or contains(bf:Relationship/@rdf:about, 'mergedtoform')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'datasource') or contains(bf:Relationship/@rdf:about, 'datasource')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'relatedwork') or contains(bf:Relationship/@rdf:about, 'relatedwork')]]/bf:associatedResource/bf:*[bf:hasInstance] |              bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSubseries') or contains(bf:Relationship/@rdf:about, 'hasSubseries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translationOf') or contains(bf:Relationship/@rdf:about, 'translationOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translation') or contains(bf:Relationship/@rdf:about, 'translation')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplementTo') or contains(bf:Relationship/@rdf:about, 'supplementTo')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'partOf') or contains(bf:Relationship/@rdf:about, 'partOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasPart') or contains(bf:Relationship/@rdf:about, 'hasPart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherEdition') or contains(bf:Relationship/@rdf:about, 'otherEdition')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherPhysicalFormat') or contains(bf:Relationship/@rdf:about, 'otherPhysicalFormat')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'issuedWith') or contains(bf:Relationship/@rdf:about, 'issuedWith')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuesInPart') or contains(bf:Relationship/@rdf:about, 'continuesInPart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'precededBy') or contains(bf:Relationship/@rdf:about, 'precededBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergerOf') or contains(bf:Relationship/@rdf:about, 'mergerOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbedBy') or contains(bf:Relationship/@rdf:about, 'absorbedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbed') or contains(bf:Relationship/@rdf:about, 'absorbed')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'separatedBy') or contains(bf:Relationship/@rdf:about, 'separatedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedBy') or contains(bf:Relationship/@rdf:about, 'continuedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedInPartBy') or contains(bf:Relationship/@rdf:about, 'continuedInPartBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'succeededBy') or contains(bf:Relationship/@rdf:about, 'succeededBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'splitInto') or contains(bf:Relationship/@rdf:about, 'splitInto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergedToForm') or contains(bf:Relationship/@rdf:about, 'mergedToForm')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'dataSource') or contains(bf:Relationship/@rdf:about, 'dataSource')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'relatedTo') or contains(bf:Relationship/@rdf:about, 'relatedTo')]]/bf:associatedResource/bf:*[bf:hasInstance]       " mode="generate-vLinkTagFromWork2">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:hasSeries/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasSubseries/bf:Work[bf:hasInstance] |                     bf:Work/bf:translationOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:translation/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplement/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplementTo/bf:Work[bf:hasInstance] |                     bf:Work/bf:partOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherEdition/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherPhysicalFormat/bf:Work[bf:hasInstance] |                     bf:Work/bf:issuedWith/bf:Work[bf:hasInstance] |                     bf:Work/bf:continues/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuesInPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:precededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergerOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbed/bf:Work[bf:hasInstance] |                     bf:Work/bf:separatedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedInPartBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:succeededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:splitInto/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergedToForm/bf:Work[bf:hasInstance] |                     bf:Work/bf:dataSource/bf:Work[bf:hasInstance] |                     bf:Work/bf:relatedTo/bf:Work[bf:hasInstance]" mode="generate-vLinkTagFromWork">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:if test="$xslProcessor != 'libxslt'">
        <xslt:choose>
          <xslt:when test="         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |          bf:Work/bf:hasSeries[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasSeries/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:for-each select="         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |          bf:Work/bf:hasSeries[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasSeries/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
              <xslt:variable name="relURI">
                <xslt:choose>
                  <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
                    <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                    <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vRelResourcePreNS">
                <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pRelUri" select="$relURI" />
                  <xsl:with-param name="pContext" select="." />
                </xsl:call-template>
              </xslt:variable>
              <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
              <xslt:variable name="vSeriesLookupTag">
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:record">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                        <xslt:text>800</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                        <xslt:text>810</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                        <xslt:text>811</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                        <xslt:text>830</xslt:text>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vValidSubfields">
                <xslt:choose>
                  <xslt:when test="$vSeriesLookupTag='800'">
                    <xslt:text>abcdgjq</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='810'">
                    <xslt:text>abcdgn</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='811'">
                    <xslt:text>acdegnq</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='830'">
                    <xslt:text>adfghklmnoprst</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vXmlLang">
                <xslt:value-of select="rdfs:label/@xml:lang" />
              </xslt:variable>
              <marc:datafield>
                <xslt:attribute name="tag">
                  <xslt:value-of select="$vSeriesLookupTag" />
                </xslt:attribute>
                <xslt:if test="$vXmlLang != ''">
                  <xslt:attribute name="xml:lang">
                    <xslt:value-of select="$vXmlLang" />
                  </xslt:attribute>
                </xslt:if>
                <xslt:attribute name="ind1">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vSeriesLookupTag != '830'">
                        <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:attribute name="ind2">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vSeriesLookupTag = '830'">
                        <xslt:choose>
                          <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                            <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:text>0</xslt:text>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <marc:subfield>
                    <xsl:attribute name="code">
                      <xsl:value-of select="@code" />
                    </xsl:attribute>
                    <xsl:value-of select="." />
                  </marc:subfield>
                </xsl:for-each>
                <xslt:for-each select="../bf:seriesEnumeration">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="v">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag $v.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="x">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag $x.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                  <marc:subfield code="w">
                    <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="$relURI">
                  <marc:subfield code="1">
                    <xslt:value-of select="." />
                  </marc:subfield>
                </xslt:for-each>
              </marc:datafield>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |          bf:Work/bf:hasSeries[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasSeries/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |                bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]       ">
              <xslt:variable name="relURI">
                <xslt:choose>
                  <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
                    <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                    <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vRelResourcePreNS">
                <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pRelUri" select="$relURI" />
                  <xsl:with-param name="pContext" select="." />
                </xsl:call-template>
              </xslt:variable>
              <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
              <xslt:variable name="vSeriesLookupTag">
                <xslt:choose>
                  <xslt:when test="$vRelResource//marc:record">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                        <xslt:text>800</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                        <xslt:text>810</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                        <xslt:text>811</xslt:text>
                      </xslt:when>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                        <xslt:text>830</xslt:text>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vValidSubfields">
                <xslt:choose>
                  <xslt:when test="$vSeriesLookupTag='800'">
                    <xslt:text>abcdgjq</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='810'">
                    <xslt:text>abcdgn</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='811'">
                    <xslt:text>acdegnq</xslt:text>
                  </xslt:when>
                  <xslt:when test="$vSeriesLookupTag='830'">
                    <xslt:text>adfghklmnoprst</xslt:text>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vXmlLang">
                <xslt:value-of select="rdfs:label/@xml:lang" />
              </xslt:variable>
              <marc:datafield>
                <xslt:attribute name="tag">
                  <xslt:value-of select="$vSeriesLookupTag" />
                </xslt:attribute>
                <xslt:if test="$vXmlLang != ''">
                  <xslt:attribute name="xml:lang">
                    <xslt:value-of select="$vXmlLang" />
                  </xslt:attribute>
                </xslt:if>
                <xslt:attribute name="ind1">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vSeriesLookupTag != '830'">
                        <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:value-of select="." />
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xslt:attribute name="ind2">
                  <xslt:variable name="vInd">
                    <xslt:choose>
                      <xslt:when test="$vSeriesLookupTag = '830'">
                        <xslt:choose>
                          <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                            <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:text>0</xslt:text>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:when>
                    </xslt:choose>
                  </xslt:variable>
                  <xslt:choose>
                    <xslt:when test="$vInd != ''">
                      <xslt:value-of select="$vInd" />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text> </xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:attribute>
                <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <marc:subfield>
                    <xsl:attribute name="code">
                      <xsl:value-of select="@code" />
                    </xsl:attribute>
                    <xsl:value-of select="." />
                  </marc:subfield>
                </xsl:for-each>
                <xslt:for-each select="../bf:seriesEnumeration">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="v">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag $v.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="x">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesLookupTag $x.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                  <marc:subfield code="w">
                    <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="$relURI">
                  <marc:subfield code="1">
                    <xslt:value-of select="." />
                  </marc:subfield>
                </xslt:for-each>
              </marc:datafield>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:if>
      <xslt:if test="$xslProcessor = 'libxslt'">
        <xslt:choose>
          <xslt:when test="         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bf:hasSeries[contains(@rdf:resource, 'hubs')] |         bf:Work/bf:hasSeries/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo[contains(@rdf:resource, 'hubs')] |         bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[contains(@rdf:about, 'hubs') and not(bflc:marcKey)]         ">
            <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed relationship node(s)/Hub(s) <xsl:value-of select="name()" />.  Repeatable target field 8XX.</xsl:message>
          </xslt:when>
        </xslt:choose>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bflc:marcKey] |       bf:Work/bf:hasSeries/bf:*[bflc:marcKey] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bflc:marcKey]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xslt:for-each select="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bflc:marcKey] |       bf:Work/bf:hasSeries/bf:*[bflc:marcKey] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bflc:marcKey]       [not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vSeriesMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>800</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>810</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>811</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>830</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vSeriesMarcKeyTag='800'">
                  <xslt:text>abcdfghjklmnopqrstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='810'">
                  <xslt:text>abcdfghklmnoprstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='811'">
                  <xslt:text>acdefghklnpqstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='830'">
                  <xslt:text>adfghklmnoprstv</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vSeriesMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSeriesMarcKeyTag != '830'">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSeriesMarcKeyTag = '830'">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                          <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>0</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="." />
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xslt:for-each select="../../bf:seriesEnumeration">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="v">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $v.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="x">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $x.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                <marc:subfield code="w">
                  <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvSeriesMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSeriesMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSeriesMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bflc:marcKey] |       bf:Work/bf:hasSeries/bf:*[bflc:marcKey] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bflc:marcKey]       ">
            <xslt:variable name="relURI">
              <xslt:choose>
                <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                  <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelResourcePreNS">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pRelUri" select="$relURI" />
                <xsl:with-param name="pContext" select="." />
              </xsl:call-template>
            </xslt:variable>
            <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
            <xslt:variable name="vSeriesMarcKeyTag">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:record">
                  <xslt:choose>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                      <xslt:text>800</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                      <xslt:text>810</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                      <xslt:text>811</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
                      <xslt:text>830</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vValidSubfields">
              <xslt:choose>
                <xslt:when test="$vSeriesMarcKeyTag='800'">
                  <xslt:text>abcdfghjklmnopqrstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='810'">
                  <xslt:text>abcdfghklmnoprstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='811'">
                  <xslt:text>acdefghklnpqstv</xslt:text>
                </xslt:when>
                <xslt:when test="$vSeriesMarcKeyTag='830'">
                  <xslt:text>adfghklmnoprstv</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vXmlLang">
              <xslt:value-of select="rdfs:label/@xml:lang" />
            </xslt:variable>
            <marc:datafield>
              <xslt:attribute name="tag">
                <xslt:value-of select="$vSeriesMarcKeyTag" />
              </xslt:attribute>
              <xslt:if test="$vXmlLang != ''">
                <xslt:attribute name="xml:lang">
                  <xslt:value-of select="$vXmlLang" />
                </xslt:attribute>
              </xslt:if>
              <xslt:attribute name="ind1">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSeriesMarcKeyTag != '830'">
                      <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:value-of select="." />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xslt:attribute name="ind2">
                <xslt:variable name="vInd">
                  <xslt:choose>
                    <xslt:when test="$vSeriesMarcKeyTag = '830'">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                          <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:value-of select="." />
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>0</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                  </xslt:choose>
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="$vInd != ''">
                    <xslt:value-of select="$vInd" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text> </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:attribute>
              <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="." />
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xslt:for-each select="../../bf:seriesEnumeration">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="v">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $v.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="x">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $x.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                <marc:subfield code="w">
                  <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="$relURI != ''">
                  <xslt:variable name="vvSeriesMarcKeyTag-1">
                    <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:variable>
                  <xslt:if test="$vvSeriesMarcKeyTag-1 != ''">
                    <marc:subfield code="1">
                      <xslt:value-of select="$vvSeriesMarcKeyTag-1" />
                    </marc:subfield>
                  </xslt:if>
                </xslt:when>
              </xslt:choose>
            </marc:datafield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="     bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey) and bf:title and not(contains(bf:status/@rdf:resource, 'mstatus/t')) and not(contains(bf:status/bf:Status/@rdf:about, '/mstatus/t'))] |     //bf:Item/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey) and bf:title and not(contains(bf:status/@rdf:resource, 'mstatus/t')) and not(contains(bf:status/bf:Status/@rdf:about, '/mstatus/t'))] |     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey) and bf:title and not(contains(bf:status/@rdf:resource, 'mstatus/t')) and not(contains(bf:status/bf:Status/@rdf:about, '/mstatus/t'))] |     //bf:Item/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey) and bf:title and not(contains(bf:status/@rdf:resource, 'mstatus/t')) and not(contains(bf:status/bf:Status/@rdf:about, '/mstatus/t'))]">
        <xslt:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pXmlLang" select="rdfs:label/@xml:lang" />
          </xsl:call-template>
        </xslt:variable>
        <xslt:variable name="vContribSourceUri">
          <xslt:choose>
            <xslt:when test="bf:contribution/*/bf:agent/*/bf:source/@rdf:resource">
              <xsl:value-of select="bf:contribution/*/bf:agent/*/bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="bf:contribution/*/bf:agent/*/bf:source/bf:Source/@rdf:about">
              <xsl:value-of select="bf:contribution/*/bf:agent/*/bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vNameAuth">
          <xslt:choose>
            <xslt:when test="bf:contribution/*/bf:agent/*">
              <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="bf:contribution/*/bf:agent/*/@rdf:about" />
              </xsl:call-template>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="agentRelURI">
          <xslt:choose>
            <xslt:when test="not(contains(../bf:contribution/bf:*/bf:agent/@rdf:resource,'REPLACE'))">
              <xsl:value-of select="../bf:contribution/bf:*/bf:agent/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="not(contains(../bf:contribution/bf:*/bf:agent/*/@rdf:about,'REPLACE'))">
              <xsl:value-of select="not(contains(../bf:contribution/bf:*/bf:agent/*/@rdf:about,'REPLACE'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vRelResourcePreNS">
          <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pRelUri" select="$agentRelURI" />
            <xsl:with-param name="pContext" select="../bf:contribution/bf:*/bf:agent/*[1]" />
          </xsl:call-template>
        </xslt:variable>
        <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
        <xslt:choose>
          <xslt:when test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
            <xslt:choose>
              <xslt:when test="bf:contribution/*/bf:agent/*[                       local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']                       ]">
                <marc:datafield>
                  <xslt:attribute name="tag">810</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                          <xsl:value-of select="$vRelResource//marc:datafield[@tag='110']/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]">
                          <xslt:text>1</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>2</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:contribution/*/bf:agent/*">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
                        <xsl:for-each select="$vRelResource//marc:datafield[@tag='110']/marc:subfield[contains('abcdgn',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v810-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList">
                              <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v810-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v810-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="b">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xslt:choose>
                          <xslt:when test="madsrdf:authoritativeLabel">
                            <xslt:for-each select="madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $e.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $e.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xslt:choose>
                          <xslt:when test="madsrdf:code">
                            <xslt:for-each select="madsrdf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="bf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="1">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="t">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $t.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicKey">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="r">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $r.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:seriesEnumeration">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="v">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $v.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 810 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xslt:variable name="v810-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vContribSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vContribSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v810-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$v810-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="bf:contribution/*/bf:agent/*[                       local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']                       ]">
                <marc:datafield>
                  <xslt:attribute name="tag">811</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                          <xsl:value-of select="$vRelResource//marc:datafield[@tag='111']/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>2</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:contribution/*/bf:agent/*">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
                        <xsl:for-each select="$vRelResource//marc:datafield[@tag='111']/marc:subfield[contains('acdegnq',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v811-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList">
                              <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v811-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v811-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="q">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="j">
                        <xslt:choose>
                          <xslt:when test="madsrdf:authoritativeLabel">
                            <xslt:for-each select="madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $j.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $j.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xslt:choose>
                          <xslt:when test="madsrdf:code">
                            <xslt:for-each select="madsrdf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="bf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="1">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="t">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $t.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicKey">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="r">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $r.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:seriesEnumeration">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="v">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $v.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 811 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xslt:variable name="v811-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vContribSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vContribSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v811-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$v811-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:when test="bf:contribution/*/bf:agent/*">
                <marc:datafield>
                  <xslt:attribute name="tag">800</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                          <xsl:value-of select="$vRelResource//marc:datafield[@tag='100']/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:when test="bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']]">
                          <xslt:text>3</xslt:text>
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>1</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:contribution/*/bf:agent/*">
                    <xslt:choose>
                      <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
                        <xsl:for-each select="$vRelResource//marc:datafield[@tag='100']/marc:subfield[contains('abcdgjq',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code" />
                            </xsl:attribute>
                            <xsl:value-of select="." />
                          </marc:subfield>
                        </xsl:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:variable name="v800-a">
                          <xslt:choose>
                            <xslt:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                              <xslt:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:when test="madsrdf:authoritativeLabel">
                              <xslt:for-each select="madsrdf:authoritativeLabel">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:for-each select="rdfs:label">
                                <xslt:choose>
                                  <xslt:when test="position() = 1">
                                    <xslt:call-template name="tChopPunct">
                                      <xslt:with-param name="pString" select="." />
                                    </xslt:call-template>
                                  </xslt:when>
                                  <xslt:otherwise>
                                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $a.</xslt:message>
                                  </xslt:otherwise>
                                </xslt:choose>
                              </xslt:for-each>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:variable>
                        <xslt:if test="$v800-a != ''">
                          <marc:subfield code="a">
                            <xslt:value-of select="$v800-a" />
                          </marc:subfield>
                        </xslt:if>
                        <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </marc:subfield>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="d">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $d.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                        <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <marc:subfield code="q">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </marc:subfield>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $q.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                    <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xslt:choose>
                          <xslt:when test="madsrdf:authoritativeLabel">
                            <xslt:for-each select="madsrdf:authoritativeLabel">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $e.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="rdfs:label">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:call-template name="tChopPunct">
                                    <xslt:with-param name="pString" select="." />
                                  </xslt:call-template>
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $e.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xslt:choose>
                          <xslt:when test="madsrdf:code">
                            <xslt:for-each select="madsrdf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:for-each select="bf:code">
                              <xslt:choose>
                                <xslt:when test="position() = 1">
                                  <xslt:value-of select="." />
                                </xslt:when>
                                <xslt:otherwise>
                                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $4.</xslt:message>
                                </xslt:otherwise>
                              </xslt:choose>
                            </xslt:for-each>
                          </xslt:otherwise>
                        </xslt:choose>
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="1">
                        <xslt:value-of select="." />
                      </marc:subfield>
                    </xslt:for-each>
                    <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xslt:for-each>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="t">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $t.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicKey">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="r">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $r.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:seriesEnumeration">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="v">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $v.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 800 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xslt:variable name="v800-2">
                        <xslt:choose>
                          <xslt:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:when test="$vContribSourceUri != ''">
                            <xslt:choose>
                              <xslt:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri" />
                                </xsl:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xsl:value-of select="$vContribSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:when>
                          <xslt:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:variable>
                      <xslt:if test="$v800-2 != ''">
                        <marc:subfield code="2">
                          <xslt:value-of select="$v800-2" />
                        </marc:subfield>
                      </xslt:if>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:when>
              <xslt:otherwise>
                <marc:datafield>
                  <xslt:attribute name="tag">830</xslt:attribute>
                  <xslt:attribute name="ind1">
                    <xslt:text> </xslt:text>
                  </xslt:attribute>
                  <xslt:attribute name="ind2">
                    <xslt:variable name="vInd">
                      <xslt:choose>
                        <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:choose>
                      <xslt:when test="$vInd != ''">
                        <xslt:value-of select="$vInd" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:text>0</xslt:text>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:attribute>
                  <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="3">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 830 $3.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="a">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 830 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="1">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:originDate">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="f">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 830 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:choose>
                    <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xslt:when>
                  </xslt:choose>
                  <xslt:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="x">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 830 $x.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="../../bf:seriesEnumeration">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="v">
                          <xslt:value-of select="." />
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 830 $v.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                  <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                  <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:for-each>
                </marc:datafield>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:apply-templates select="bf:Instance[                       (bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/c' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/c') and                        bf:electronicLocator                       ]" mode="generate-856">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:tableOfContents/bf:TableOfContents[not(rdfs:label) and rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     //bf:Item/bf:electronicLocator/*[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']]" mode="generate-856">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <xslt:apply-templates select="bf:Work/bf:tableOfContents[@rdf:resource] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[bf:electronicLocator/@rdf:resource] |                     //bf:Item/bf:electronicLocator[@rdf:resource]" mode="generate-856">
        <xslt:with-param name="vRecordId" select="$vRecordId" />
        <xslt:with-param name="vAdminMetadata" select="$vAdminMetadata" />
      </xslt:apply-templates>
      <marc:datafield>
        <xslt:attribute name="tag">884</xslt:attribute>
        <xslt:attribute name="ind1">
          <xslt:text> </xslt:text>
        </xslt:attribute>
        <xslt:attribute name="ind2">
          <xslt:text> </xslt:text>
        </xslt:attribute>
        <xslt:variable name="v884-a">
          <xsl:value-of select="$vCurrentVersion" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" /> (<xsl:value-of select="$xslProcessor" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />)</xslt:variable>
        <xslt:if test="$v884-a != ''">
          <marc:subfield code="a">
            <xslt:value-of select="$v884-a" />
          </marc:subfield>
        </xslt:if>
        <xslt:choose>
          <xslt:when test="$pGenerationDatestamp">
            <xslt:variable name="v884-g">
              <xsl:value-of select="$pGenerationDatestamp" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$v884-g != ''">
              <marc:subfield code="g">
                <xslt:value-of select="$v884-g" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
        </xslt:choose>
        <xslt:choose>
          <xslt:when test="$pSourceRecordId">
            <xslt:variable name="v884-k">
              <xsl:value-of select="$pSourceRecordId" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$v884-k != ''">
              <marc:subfield code="k">
                <xslt:value-of select="$v884-k" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
        </xslt:choose>
        <xslt:choose>
          <xslt:when test="$pConversionAgency">
            <xslt:variable name="v884-q">
              <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$v884-q != ''">
              <marc:subfield code="q">
                <xslt:value-of select="$v884-q" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
        </xslt:choose>
        <xslt:choose>
          <xslt:when test="$pGenerationUri">
            <xslt:variable name="v884-u">
              <xsl:value-of select="concat($pGenerationUri, '/releases/tag/', substring-after($vCurrentVersion, 'DLC bibframe2marc '))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$v884-u != ''">
              <marc:subfield code="u">
                <xslt:value-of select="$v884-u" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
        </xslt:choose>
      </marc:datafield>
    </marc:record>
  </xslt:template>
  <xslt:template match="/rdf:RDF/bf:Instance" mode="generate-007">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:controlfield>
      <xslt:attribute name="xml:space">preserve</xslt:attribute>
      <xslt:attribute name="tag">007</xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026058' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026058' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026061' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026061' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026387' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026387' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026113' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026113' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026530' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026530' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026295' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026295' or           bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026045' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026045'">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026058' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026058'">
                <xslt:text>ad </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026061' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026061'">
                <xslt:text>ag </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026387' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026387'">
                <xslt:text>aj </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026113' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026113'">
                <xslt:text>ak </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245'">
                <xslt:text>aq </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026530' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026530'">
                <xslt:text>ar </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026295' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026295'">
                <xslt:text>as </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026045' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026045'">
                <xslt:text>ay </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>a| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>|||||</xslt:text>
        </xslt:when>
        <xslt:when test="(bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n') and           (bf:carrier/@rdf:resource='http://id.loc.gov/vocabulary/carriers/nr' or bf:carrier/*/@rdf:about='http://id.loc.gov/vocabulary/carriers/nr') and            (           (bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026300' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026300') or            (bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026117' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026117')           )">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026117' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026117'">
                <xslt:text>da |||</xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>d| |||</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="(bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g') and                     (                       (                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/gc'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/gd'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/gf'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/mo'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/gs'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/gt']                       )                     or                       (                         ../*[local-name()='StillImage'] or ../bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage'                       )                      )">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gc']">
                <xslt:text>gc </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gd']">
                <xslt:text>gd </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gf']">
                <xslt:text>gf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mo' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mo']">
                <xslt:text>go </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gs' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gs']">
                <xslt:text>gs </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gt' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gt']">
                <xslt:text>gt </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>g| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>||||||</xslt:text>
        </xslt:when>
        <xslt:when test="bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/h' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/h'">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ha' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ha']">
                <xslt:text>ha </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hb' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hb']">
                <xslt:text>hb </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hc']">
                <xslt:text>hc </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hd']">
                <xslt:text>hd </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/he']">
                <xslt:text>he </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hf']">
                <xslt:text>hf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hg']">
                <xslt:text>hg </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hh' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hh']">
                <xslt:text>hh </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hj' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hj']">
                <xslt:text>hj </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>h| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>||||||||||</xslt:text>
        </xslt:when>
        <xslt:when test="(bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n') and                     (                       (                         bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027227'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027231'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027246'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/vocabulary/graphicMaterials/tgm007730'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2019026026'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/vocabulary/graphicMaterials/tgm007718'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027251'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027255'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2014026152'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/vocabulary/graphicMaterials/tgm009250'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2016026011'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2014026151'] or                          bf:genreForm//@rdf:*[.='http://id.loc.gov/authorities/genreForms/gf2017027249']                       )                     or                       (                         ../*[local-name()='StillImage'] or ../bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage'                       )                     )">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027227' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027227'">
                <xslt:text>kc </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027231' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027231'">
                <xslt:text>kd </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027246' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027246'">
                <xslt:text>ke </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm007730' or bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm007730'">
                <xslt:text>kf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2019026026' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2019026026'">
                <xslt:text>kg </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm007718' or bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm007718'">
                <xslt:text>kh </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027251' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027251'">
                <xslt:text>ki </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027255' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027255'">
                <xslt:text>kj </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026152' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026152'">
                <xslt:text>kk </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm009250' or bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm009250'">
                <xslt:text>kl </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026011' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026011'">
                <xslt:text>kn </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026151' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026151'">
                <xslt:text>kp </xslt:text>
              </xslt:when>
              <xslt:when test="bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027249' or bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027249'">
                <xslt:text>kv </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>k| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>|||</xslt:text>
        </xslt:when>
        <xslt:when test="(bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g') and                     (                       (                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/mc'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/mf'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/mr'] or                         bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/mz']                       )                     or                       (                         ../*[local-name()='MovingImage'] or ../bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage'                       )                      )">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mc']">
                <xslt:text>mc </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mf']">
                <xslt:text>mf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mr']">
                <xslt:text>mr </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mz']">
                <xslt:text>mz </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>m| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>||||||||||||||||||||</xslt:text>
        </xslt:when>
        <xslt:when test="bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/s' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/s'">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sd']">
                <xslt:text>sd </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/se' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/se']">
                <xslt:text>se </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sg' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sg']">
                <xslt:text>sg </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/si' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/si']">
                <xslt:text>si </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sq' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sq']">
                <xslt:text>sq </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr']">
                <xslt:text>sr </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ss' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ss']">
                <xslt:text>ss </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/st' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/st']">
                <xslt:text>st </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sw' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sw']">
                <xslt:text>sw </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>s| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>|||||||||||</xslt:text>
        </xslt:when>
        <xslt:when test="bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/v' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/v'">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vc']">
                <xslt:text>vc </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vd']">
                <xslt:text>vd </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vf']">
                <xslt:text>vf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vr']">
                <xslt:text>vr </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>v| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>||||||</xslt:text>
        </xslt:when>
        <xslt:when test="(not(bf:media/@rdf:resource) and not(bf:media/*/@rdf:about)) or            (bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n')           ">
          <xslt:text>t|</xslt:text>
        </xslt:when>
        <xslt:when test="bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/c' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/c'">
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ca' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ca']">
                <xslt:text>ca </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cb' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cb']">
                <xslt:text>cb </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cd']">
                <xslt:text>co </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ce' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ce']">
                <xslt:text>cj </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cf']">
                <xslt:text>cf </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ch' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ch']">
                <xslt:text>ch </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ck' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ck']">
                <xslt:text>ck </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr']">
                <xslt:text>cr </xslt:text>
              </xslt:when>
              <xslt:when test="bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz']">
                <xslt:text>cz </xslt:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>c| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>|||||||||||</xslt:text>
        </xslt:when>
      </xslt:choose>
    </marc:controlfield>
  </xslt:template>
  <xslt:template match="/rdf:RDF" mode="generate-008">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v008Format">
      <xslt:choose>
        <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography']">
          <xslt:text>MP</xslt:text>
        </xslt:when>
        <xslt:when test="bf:Instance/bf:issuance/bf:Issuance[@rdf:about='http://id.loc.gov/vocabulary/issuance/serl'] or                       bf:Instance/bf:issuance[@rdf:resource='http://id.loc.gov/vocabulary/issuance/serl'] or                       bf:Instance/bf:issuance/bf:Issuance[@rdf:about='http://id.loc.gov/vocabulary/issuance/intg'] or                       bf:Instance/bf:issuance[@rdf:resource='http://id.loc.gov/vocabulary/issuance/intg']">
          <xslt:text>CR</xslt:text>
        </xslt:when>
        <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Audio'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic']">
          <xslt:text>MU</xslt:text>
        </xslt:when>
        <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Object']">
          <xslt:text>VM</xslt:text>
        </xslt:when>
        <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MixedMaterial']">
          <xslt:text>MX</xslt:text>
        </xslt:when>
        <xslt:when test="bf:Instance/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Electronic']">
          <xslt:text>CF</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>BK</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vMUSupplContent">
      <xsl:variable name="vMUSupplRaw" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:for-each select="bf:Work/bf:supplementaryContent">
          <xsl:choose>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">a</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">b</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/thematicindex' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/thematicindex'">c</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/libretto' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/libretto'">d</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/creatorbio' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/creatorbio'">e</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/performerhistory' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/performerhistory'">f</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/techinstruments' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/techinstruments'">g</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/techmusic' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/techmusic'">h</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/historicalinfo' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/historicalinfo'">i</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/ethnologicinfo' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/ethnologicinfo'">k</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/instructmaterial' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/instructmaterial'">r</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/music' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/music'">s</xsl:when>
          </xsl:choose>
        </xsl:for-each>
      </xsl:variable>
      <xsl:variable name="vMUSupplPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:call-template name="tPadRight">
          <xsl:with-param name="pInput" select="$vMUSupplRaw" />
          <xsl:with-param name="pStringLength">6</xsl:with-param>
        </xsl:call-template>
      </xsl:variable>
      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:when test="string-length($vMUSupplPadded) &gt; 6">
          <xsl:value-of select="substring($vMUSupplPadded,1,6)" />
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vMUSupplPadded" />
        </xsl:otherwise>
      </xsl:choose>
    </xslt:variable>
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:controlfield>
          <xslt:attribute name="xml:space">preserve</xslt:attribute>
          <xslt:attribute name="tag">008</xslt:attribute>
          <xslt:variable name="vPosition-1">
            <xslt:choose>
              <xslt:when test="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]">
                <xslt:for-each select="$vAdminMetadata[bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/n']]/bf:date">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:choose>
                        <xslt:when test="@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://id.loc.gov/datatypes/edtf'">
                          <xsl:value-of select="translate(substring(.,3,8),'-','')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:otherwise>
                          <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:creationDate. Invalid datatype.</xsl:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 008.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="$vAdminMetadata/bf:creationDate">
                <xslt:for-each select="$vAdminMetadata/bf:creationDate">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:choose>
                        <xslt:when test="@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://id.loc.gov/datatypes/edtf'">
                          <xsl:value-of select="translate(substring(.,3,8),'-','')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                        <xslt:otherwise>
                          <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:creationDate. Invalid datatype.</xsl:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 008.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="$pGenerationDatestamp != ''">
                <xsl:value-of select="translate(substring($pGenerationDatestamp,3,8),'-','')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-1 != ''">
              <xslt:value-of select="$vPosition-1" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>700101</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-2">
            <xslt:choose>
              <xslt:when test="                   (                     bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Distribution']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf' and                     bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                   ) or (                     bf:Instance/bf:provisionActivity/bf:Distribution/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf' and                     bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                                   )                 ">
                <xsl:variable name="date1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Distribution/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:Distribution/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Distribution']/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="date2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:Production/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="translate(concat('p', $date1, $date2), 'X', 'u')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="               bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                or                bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               ">
                <xsl:variable name="vPAprenodeset" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:Production[bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production' and bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vPA" select="exsl:node-set($vPAprenodeset)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="date1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:value-of select="$vPA/bf:*/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$vPA/bf:*/bf:note/bf:Note/rdfs:label = 'inclusive collection dates'">
                    <xsl:value-of select="translate(concat('i', translate($date1, '/', '')), 'X', 'u')" />
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:note/bf:Note/rdfs:label = 'bulk collection dates'">
                    <xsl:value-of select="translate(concat('k', translate($date1, '/', '')), 'X', 'u')" />
                  </xsl:when>
                </xsl:choose>
              </xslt:when>
              <xslt:when test="               bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Publication']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               or               bf:Instance/bf:provisionActivity/bf:Publication/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               ">
                <xsl:variable name="vPAprenodeset" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Publication/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:Publication[bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Publication' and bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vPA" select="exsl:node-set($vPAprenodeset)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="theDate" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:value-of select="$vPA/bf:*/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']" />
                </xsl:variable>
                <xsl:variable name="date1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="string-length($theDate)=4">
                      <xsl:value-of select="substring($theDate, 1, 4)" />
                    </xsl:when>
                    <xsl:when test="contains($theDate ,'/')">
                      <xsl:value-of select="substring-before($theDate, '/')" />
                    </xsl:when>
                    <xsl:when test="contains($theDate ,'-')">
                      <xsl:value-of select="substring-before($theDate, '-')" />
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cDateExists" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:copyrightDate[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']">1</xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="date2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$cDateExists = 1">
                      <xsl:value-of select="translate(bf:Instance/bf:copyrightDate[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'], '©', '')" />
                    </xsl:when>
                    <xsl:when test="contains($theDate, '/..')">9999</xsl:when>
                    <xsl:when test="contains($theDate, '/')">
                      <xsl:value-of select="substring-after($theDate,'/')" />
                    </xsl:when>
                    <xsl:when test="contains($theDate, '-')">
                      <xsl:value-of select="substring-after($theDate,'-')" />
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="string-length($date1) = 4 and $cDateExists = 1">
                    <xsl:value-of select="translate(concat('t', $date1, $date2), 'X', 'u')" />
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current' and                     string-length($date1) = 4 and string-length($date2) = 4">
                    <xsl:value-of select="translate(concat('c', $date1, $date2), 'X', 'u')" />
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/ceased' and                                   string-length($date1) = 4 and string-length($date2) = 4">
                    <xsl:value-of select="translate(concat('d', $date1, $date2), 'X', 'u')" />
                  </xsl:when>
                  <!-- <bf:date rdf:datatype="http://id.loc.gov/datatypes/edtf">1940~/1997~</bf:date> -->
                  <xsl:when test="string-length($date1)=5 and string-length($date2)=5 and                      (contains($date1, '~') or contains($date1, '?') or contains($date1, '%')) and                     (contains($date2, '~') or contains($date2, '?') or contains($date2, '%'))">
                    <xsl:value-of select="translate(concat('q', substring($date1, 1, 4), substring($date2, 1, 4)), 'X', 'u')" />
                  </xsl:when>
                  <!-- <bf:date rdf:datatype="http://id.loc.gov/datatypes/edtf">1940~/1997</bf:date> -->
                  <xsl:when test="string-length($date1)=5 and string-length($date2)=4 and                      (contains($date1, '~') or contains($date1, '?') or contains($date1, '%'))">
                    <xsl:value-of select="translate(concat('q', substring($date1, 1, 4), $date2), 'X', 'u')" />
                  </xsl:when>
                  <!-- <bf:date rdf:datatype="http://id.loc.gov/datatypes/edtf">1940/1997~</bf:date> -->
                  <xsl:when test="string-length($date1)=4 and string-length($date2)=5 and                      (contains($date2, '~') or contains($date2, '?') or contains($date2, '%'))">
                    <xsl:value-of select="translate(concat('q', $date1, substring($date2, 1, 4)), 'X', 'u')" />
                  </xsl:when>
                  <xsl:when test="string-length($date1)=4 and string-length($date2)=4">
                    <xsl:value-of select="translate(concat('m', $date1, $date2), 'X', 'u')" />
                  </xsl:when>
                  <xsl:when test="$date2 != ''">
                    <xsl:choose>
                      <xsl:when test="contains($date2, '-')">
                        <xsl:value-of select="translate(concat('e', $date1, translate($date2, '-', '')), 'X', 'u')" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="translate(concat('e', $date1, $date2, '  '), 'X', 'u')" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="string-length($date1) = 4">
                    <xsl:value-of select="translate(concat('s', $date1, '    '), 'X', 'u')" />
                  </xsl:when>
                </xsl:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-2 != ''">
              <xslt:value-of select="$vPosition-2" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>|||||||||</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-3">
            <xslt:for-each select="bf:Instance/bf:provisionActivity/bf:*/bf:place/@rdf:resource|                          bf:Instance/bf:provisionActivity/bf:*/bf:place/bf:*/@rdf:about">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:choose>
                    <xslt:when test="starts-with(.,'http://id.loc.gov/vocabulary/countries/')">
                      <xsl:variable name="vCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/countries/')" />
                      </xsl:variable>
                      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="string-length($vCode)=3">
                          <xsl:value-of select="$vCode" />
                        </xsl:when>
                        <xsl:when test="string-length($vCode)=2">
                          <xsl:value-of select="concat($vCode,' ')" />
                        </xsl:when>
                      </xsl:choose>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 008.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-3 != ''">
              <xslt:value-of select="$vPosition-3" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>xx </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-4">
            <xslt:choose>
              <xslt:when test="$v008Format='BK'">
                <xsl:variable name="vIllus" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:for-each select="*/bf:illustrativeContent">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/ill' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/ill' or                                       */*[local-name()='code']='ill'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/map' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/map' or                                       */*[local-name()='code']='map'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/por' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/por' or                                       */*[local-name()='code']='por'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/chr' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/chr' or                                       */*[local-name()='code']='chr'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pln' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pln' or                                       */*[local-name()='code']='pln'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/plt' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/plt' or                                       */*[local-name()='code']='plt'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/mus' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/mus' or                                       */*[local-name()='code']='mus'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/fac' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/fac' or                                       */*[local-name()='code']='fac'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/coa' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/coa' or                                       */*[local-name()='code']='coa'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/gnt' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/gnt' or                                       */*[local-name()='code']='gnt'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/for' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/for' or                                       */*[local-name()='code']='for'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/sam' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/sam' or                                       */*[local-name()='code']='sam'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pho' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pho' or                                       */*[local-name()='code']='pho'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pht' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pht' or                                       */*[local-name()='code']='pht'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/ilm' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/ilm' or                                       */*[local-name()='code']='ilm'">p</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vIllusPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vIllus" />
                    <!-- useful for testing. -->
                    <!-- <xsl:with-param name="pPadChar" select="'f'"/> -->
                    <xsl:with-param name="pStringLength">4</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="string-length($vIllusPadded) &gt; 4">
                    <xsl:value-of select="substring($vIllusPadded,1,4)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vIllusPadded" />
                  </xsl:otherwise>
                </xsl:choose>
              </xslt:when>
              <xslt:when test="$v008Format='CR'">
                <xsl:variable name="vFrequency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ann' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ann' or */*[local-name()='code']='ann']">a</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bmn' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bmn' or */*[local-name()='code']='bmn']">b</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/swk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/swk' or */*[local-name()='code']='swk']">c</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/dyl' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/dyl' or */*[local-name()='code']='dyl']">d</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bwk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bwk' or */*[local-name()='code']='bwk']">e</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/san' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/san' or */*[local-name()='code']='san']">f</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bin' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bin' or */*[local-name()='code']='bin']">g</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ten' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ten' or */*[local-name()='code']='ten']">h</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ttw' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ttw' or */*[local-name()='code']='ttw']">i</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ttm' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ttm' or */*[local-name()='code']='ttm']">j</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/con' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/con' or */*[local-name()='code']='con']">k</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/mon' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/mon' or */*[local-name()='code']='mon']">m</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/qrt' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/qrt' or */*[local-name()='code']='qrt']">q</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/smn' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/smn' or */*[local-name()='code']='smn']">s</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/tty' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/tty' or */*[local-name()='code']='tty']">t</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/unk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/unk' or */*[local-name()='code']='unk']">u</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/wkl' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/wkl' or */*[local-name()='code']='wkl']">w</xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="' '" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$vFrequency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="vRegularity" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$vFrequency != ' '">
                      <xsl:choose>
                        <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/irr' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/irr' or */*/*[local-name()='code']='irr']">n</xsl:when>
                        <xsl:otherwise>r</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:choose>
                        <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/irr' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/irr' or */*/*[local-name()='code']='irr']">x</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vCRType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/database' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/database' or */*/rdfs:label='database']">d</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/mag' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/mag' or */*/rdfs:label='mag']">g</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/blog' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/blog' or */*/rdfs:label='blog']">h</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/journal' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/journal' or */*/rdfs:label='journal']">j</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/looseleaf' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/looseleaf' or */*/rdfs:label='looseleaf']">l</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/monoseries' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/monoseries' or */*/rdfs:label='monoseries']">m</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/newspaper' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/newspaper' or */*/rdfs:label='newspaper']">n</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/periodical' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/periodical' or */*/rdfs:label='periodical']">p</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/repo' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/repo' or */*/rdfs:label='repo']">r</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/newsletter' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/newsletter' or */*/rdfs:label='newsletter']">s</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/directory' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/directory' or */*/rdfs:label='directory']">t</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/web' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/web' or */*/rdfs:label='web']">w</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$vRegularity" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:value-of select="$vCRType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$v008Format='MP'">
                <xsl:variable name="vRelief" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:for-each select="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:relief|bf:Work/bf:cartographicAttributes/bf:Cartographic/bflc:relief">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/cont' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/cont'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/shad' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/shad'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/grad' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/grad'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/hach' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/hach'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/bath' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/bath'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/form' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/form'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/spot' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/spot'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/pict' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/pict'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/land' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/land'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/isol' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/isol'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/rock' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/rock'">m</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vReliefPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vRelief" />
                    <xsl:with-param name="pStringLength">4</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="string-length($vReliefPadded) &gt; 4">
                    <xsl:value-of select="substring($vReliefPadded,1,4)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vReliefPadded" />
                  </xsl:otherwise>
                </xsl:choose>
              </xslt:when>
              <xslt:when test="$v008Format='MU'">
                <xsl:variable name="vCompForm" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026635' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026635']">an</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026648' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026648']">bd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026664' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026664']">bg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026665' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026665']">bl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026650' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026650']">bt</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026701' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026701']">ca</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026707' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026707']">cb</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026724' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026724']">cg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026713' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026713']">ch</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026712' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026712']">cl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026687' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026687']">cn</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026725' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026725']">co</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027007' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027007']">cp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026695' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026695']">cr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026624' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026624']">cs</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026688' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026688']">ct</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026739' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026739']">cy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026012' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026012']">cz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026753' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026753']">df</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027116' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027116']">dv</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026818' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026818']">fg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026806' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026806']">fl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026809' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026809']">fm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026018' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026018']">ft</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026839' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026839']">gm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026872' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026872']">hy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026879' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026879']">jz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027050' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027050']">mc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026915' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026915']">md</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026940' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026940']">mi</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026949' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026949']">mo</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026950' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026950']">mp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026922' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026922']">mr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026926' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026926']">ms</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026928' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026928']">mz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026144' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026144']">nc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026976' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026976']">op</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026980' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026980']">ov</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027017' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027017']">pg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026861' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026861']">pm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027005' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027005']">po</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027009' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027009']">pp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027013' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027013']">pr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026989' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026989']">ps</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026984' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026984']">pt</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026994' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026994']">pv</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027054' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027054']">rc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027057' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027057']">rd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027034' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027034']">rg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026128' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026128']">ri</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027051' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027051']">rp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027048' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027048']">rq</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027111' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027111']">sd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027103' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027103']">sg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027099' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027099']">sn</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027120' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027120']">sp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027115' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027115']">st</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027116' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027116']">su</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027121' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027121']">sy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027140' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027140']">tc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026059' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026059']">tl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026025' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026025']">vi</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027156' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027156']">vr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027167' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027167']">wz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026059' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026059']">za</xsl:when>
                    <xsl:otherwise>||</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vMusicForm" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/score' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/score']">a</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/studyscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/studyscore']">b</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/pianoscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/pianoscore']">c</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/pianopart' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/pianopart']">e</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/chscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/chscore']">h</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/conscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/conscore']">i</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/perfconpt' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/perfconpt']">j</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/vocalscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/vocalscore']">k</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="concat($vCompForm,$vMusicForm,'|')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$v008Format='VM'">
                <xslt:choose>
                  <xslt:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage']">
                    <xsl:variable name="vDuration" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
                          <xsl:value-of select="substring-before(substring-after(bf:Work/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration'],'PT'),'M')" />
                        </xsl:when>
                        <xsl:when test="bf:Work/bf:duration[(. = number(.))]">
                          <xsl:value-of select="bf:Work/bf:duration[(. = number(.))]" />
                        </xsl:when>
                        <xsl:when test="bf:Work/bf:duration[contains(.,'999')]">000</xsl:when>
                        <xsl:otherwise>|||</xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="vDurationPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:call-template name="tPadLeft">
                        <xsl:with-param name="pInput" select="$vDuration" />
                        <xsl:with-param name="pStringLength">3</xsl:with-param>
                        <xsl:with-param name="pPadChar">0</xsl:with-param>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:variable name="vDurationFinal" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:choose>
                        <xsl:when test="$vDurationPadded &gt; 999">000</xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$vDurationPadded" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:value-of select="concat($vDurationFinal,' ')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>nnn </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-4 != ''">
              <xslt:value-of select="$vPosition-4" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>    </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-5">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='CF' or                         $v008Format='MU' or                         $v008Format='CR' or                         $v008Format='VM' or                         $v008Format='MX'">
                <!--<xsl:variable name="v008-22">-->
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$v008Format='MX'">
                    <xsl:value-of select="' '" />
                  </xsl:when>
                  <xsl:when test="$v008Format='CR'">
                    <xsl:value-of select="' '" />
                  </xsl:when>
                  <!--<xsl:choose>
                        <xsl:when test="bf:Instance/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig']">
                          <xsl:for-each select="bf:Instance/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig']">
                            <xsl:if test="position()=1">
                              <xsl:choose>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microfilm'">a</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microfiche'">b</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microopaque'">c</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='large print'">d</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='newspaper format'">e</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='braille'">f</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='online'">o</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='direct electronic'">q</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='electronic'">s</xsl:when>
                                <xsl:otherwise><xsl:value-of select="'|'"/></xsl:otherwise>
                              </xsl:choose>
                            </xsl:if>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="' '"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    -->
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pre' or                                     */@rdf:about='http://id.loc.gov/vocabulary/maudience/pre'                                     or */*[local-name='code']='pre']">a</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pri' or                                     */@rdf:about='http://id.loc.gov/vocabulary/maudience/pri'                                     or */*[local-name='code']='pri']">b</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pad'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/pad'                                     or */*[local-name='code']='pad']">c</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/ado'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/ado'                                     or */*[local-name='code']='ado']">d</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/adu'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/adu'                                     or */*[local-name='code']='adu']">e</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/spe'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/spe'                                     or */*[local-name='code']='spe']">f</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/gen'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/gen'                                     or */*[local-name='code']='gen']">g</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/juv'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/juv'                                     or */*[local-name='code']='juv']">j</xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="' '" />
                  </xsl:otherwise>
                </xsl:choose>
                <!--</xsl:variable>-->
                <!--<xsl:variable name="v008-23">-->
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$v008Format='VM'">
                    <xsl:value-of select="' '" />
                  </xsl:when>
                  <xsl:when test="$v008Format='CF'">
                    <xsl:choose>
                      <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr' or */*[local-name()='code']='cr']">o</xsl:when>
                      <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or */*[local-name()='code']='cz']">q</xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="' '" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:fontSize[@rdf:resource='http://id.loc.gov/vocabulary/mfont/lp'] or                                     bf:Instance/bf:fontSize/*[@rdf:about='http://id.loc.gov/vocabulary/mfont/lp'] or                                     bf:Instance/bf:fontSize/*[contains(rdfs:label,'large print')]">d</xsl:when>
                  <xsl:when test="bf:Instance/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mtactile/brail'] or                                     bf:Instance/bf:notation/*[@rdf:about='http://id.loc.gov/vocabulary/mtactile/brail'] or                                     bf:Instance/bf:notation/*[contains(rdfs:label,'braille')]">f</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hd'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='hd'">a</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/he'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='he'">b</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hg'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='hg'">c</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/cr'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='cr'">o</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or                                                              */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or                                                              */*[local-name()='code']='cz']">s</xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="' '" />
                  </xsl:otherwise>
                </xsl:choose>
                <!--</xsl:variable>-->
                <!--<xsl:value-of select="concat($v008-22,$v008-23)"/>-->
              </xslt:when>
              <xslt:when test="$v008Format='MP'">
                <xslt:choose>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/aa' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/aa' or */*[local-name()='code']='aa']">
                    <xslt:text>aa</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ab' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ab' or */*[local-name()='code']='ab']">
                    <xslt:text>ab</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ac' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ac' or */*[local-name()='code']='ac']">
                    <xslt:text>ac</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ad' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ad' or */*[local-name()='code']='ad']">
                    <xslt:text>ad</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ae' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ae' or */*[local-name()='code']='ae']">
                    <xslt:text>ae</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/af' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/af' or */*[local-name()='code']='af']">
                    <xslt:text>af</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ag' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ag' or */*[local-name()='code']='ag']">
                    <xslt:text>ag</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/am' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/am' or */*[local-name()='code']='am']">
                    <xslt:text>am</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/an' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/an' or */*[local-name()='code']='an']">
                    <xslt:text>an</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ap' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ap' or */*[local-name()='code']='ap']">
                    <xslt:text>ap</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/au' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/au' or */*[local-name()='code']='au']">
                    <xslt:text>au</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/az' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/az' or */*[local-name()='code']='az']">
                    <xslt:text>az</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ba' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ba' or */*[local-name()='code']='ba']">
                    <xslt:text>ba</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bb' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bb' or */*[local-name()='code']='bb']">
                    <xslt:text>bb</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bc' or */*[local-name()='code']='bc']">
                    <xslt:text>bc</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bd' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bd' or */*[local-name()='code']='bd']">
                    <xslt:text>bd</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bf' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bf' or */*[local-name()='code']='bf']">
                    <xslt:text>bf</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bg' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bg' or */*[local-name()='code']='bg']">
                    <xslt:text>bg</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bh' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bh' or */*[local-name()='code']='bh']">
                    <xslt:text>bh</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bi' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bi' or */*[local-name()='code']='bi']">
                    <xslt:text>bi</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bj' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bj' or */*[local-name()='code']='bj']">
                    <xslt:text>bj</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bk' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bk' or */*[local-name()='code']='bk']">
                    <xslt:text>bk</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bl' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bl' or */*[local-name()='code']='bl']">
                    <xslt:text>bl</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bo' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bo' or */*[local-name()='code']='bo']">
                    <xslt:text>bo</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/br' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/br' or */*[local-name()='code']='br']">
                    <xslt:text>br</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bs' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bs' or */*[local-name()='code']='bs']">
                    <xslt:text>bs</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bu' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bu' or */*[local-name()='code']='bu']">
                    <xslt:text>bu</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bz' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bz' or */*[local-name()='code']='bz']">
                    <xslt:text>bz</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ca' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ca' or */*[local-name()='code']='ca']">
                    <xslt:text>ca</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cb' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cb' or */*[local-name()='code']='cb']">
                    <xslt:text>cb</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cc' or */*[local-name()='code']='cc']">
                    <xslt:text>cc</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ce' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ce' or */*[local-name()='code']='ce']">
                    <xslt:text>ce</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cp' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cp' or */*[local-name()='code']='cp']">
                    <xslt:text>cp</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cu' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cu' or */*[local-name()='code']='cu']">
                    <xslt:text>cu</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cz' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cz' or */*[local-name()='code']='cz']">
                    <xslt:text>cz</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/da' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/da' or */*[local-name()='code']='da']">
                    <xslt:text>da</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/db' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/db' or */*[local-name()='code']='db']">
                    <xslt:text>db</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dc' or */*[local-name()='code']='dc']">
                    <xslt:text>dc</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dd' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dd' or */*[local-name()='code']='dd']">
                    <xslt:text>dd</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/de' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/de' or */*[local-name()='code']='de']">
                    <xslt:text>de</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/df' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/df' or */*[local-name()='code']='df']">
                    <xslt:text>df</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dg' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dg' or */*[local-name()='code']='dg']">
                    <xslt:text>dg</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dh' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dh' or */*[local-name()='code']='dh']">
                    <xslt:text>dh</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dl' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dl' or */*[local-name()='code']='dl']">
                    <xslt:text>dl</xslt:text>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>  </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-5 != ''">
              <xslt:value-of select="$vPosition-5" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>  </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-6">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='CR'">
                <xsl:variable name="vNoC" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <!--<xsl:for-each select="bf:Work/bf:genreForm|bf:Work/bf:supplementaryContent">-->
                  <xsl:for-each select="bf:Work/bf:supplementaryContent">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/film' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/film'">q</xsl:when>
                      <!--
                        kefo note - match specs for 24-27 for now - 19 Aug 2022 - and so comment out
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026048' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026048'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026057' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026057'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026086' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026086'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026092' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026092'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026109' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026109'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026351' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026351'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026112' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026112'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026438' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026438'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026351' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026351'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026039' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026039'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/film' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/film'">q</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026087' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026087'">r</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026181' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026181'">s</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2015026093' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2015026093'">t</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026208' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026208'">y</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026707' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026707'">z</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026055' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026055'">5</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026266' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026266'">6</xsl:when>
                      -->
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vNoCLength" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">4</xsl:when>
                    <xsl:when test="$v008Format='CR'">3</xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vNoCPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vNoC" />
                    <!-- useful for testing. -->
                    <!-- <xsl:with-param name="pPadChar" select="'x'"/> -->
                    <xsl:with-param name="pStringLength">
                      <xsl:value-of select="$vNoCLength" />
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:variable name="vNoCFinal" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="string-length($vNoCPadded) &gt; $vNoCLength">
                      <xsl:value-of select="substring($vNoCPadded,1,$vNoCLength)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vNoCPadded" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$v008Format='BK'">
                    <xsl:value-of select="$vNoCFinal" />
                  </xsl:when>
                  <xsl:when test="$v008Format='CR'">
                    <xsl:value-of select="concat(' ',$vNoCFinal)" />
                  </xsl:when>
                </xsl:choose>
              </xslt:when>
              <xslt:when test="$v008Format='CF'">
                <xslt:choose>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/num' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/num' or */*[local-name()='code']='num']">
                    <xslt:text>  a </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/com' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/com' or */*[local-name()='code']='com']">
                    <xslt:text>  b </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/rep' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/rep' or */*[local-name()='code']='rep']">
                    <xslt:text>  c </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/doc' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/doc' or */*[local-name()='code']='doc']">
                    <xslt:text>  d </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/bda' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/bda' or */*[local-name()='code']='bda']">
                    <xslt:text>  e </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fon' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fon' or */*[local-name()='code']='fon']">
                    <xslt:text>  f </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/gam' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/gam' or */*[local-name()='code']='gam']">
                    <xslt:text>  g </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/sou' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/sou' or */*[local-name()='code']='sou']">
                    <xslt:text>  h </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/inm' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/inm' or */*[local-name()='code']='inm']">
                    <xslt:text>  i </xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/ons' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/ons' or */*[local-name()='code']='ons']">
                    <xslt:text>  j </xslt:text>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>  | </xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:when test="$v008Format='MP'">
                <xslt:text> |  </xslt:text>
              </xslt:when>
              <xslt:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,1,4)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-6 != ''">
              <xslt:value-of select="$vPosition-6" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>    </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-7">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='CF' or                         $v008Format='MP' or                         $v008Format='CR' or                         $v008Format='VM'">
                <xslt:for-each select="bf:Work/bflc:governmentPubType">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:choose>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/a' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/a' or                               */*[local-name()='code']='a'">
                          <xslt:text>a</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/c' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/c' or                               */*[local-name()='code']='c'">
                          <xslt:text>c</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/f' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/f' or                               */*[local-name()='code']='f'">
                          <xslt:text>f</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/i' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/i' or                               */*[local-name()='code']='i'">
                          <xslt:text>i</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/l' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/l' or                               */*[local-name()='code']='l'">
                          <xslt:text>l</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/m' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/m' or                               */*[local-name()='code']='m'">
                          <xslt:text>m</xslt:text>
                        </xslt:when>
                        <xslt:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/s' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/s' or                               */*[local-name()='code']='s'">
                          <xslt:text>s</xslt:text>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:text>o</xslt:text>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 008.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,5,1)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-7 != ''">
              <xslt:value-of select="$vPosition-7" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text> </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-8">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='CR'">
                <xslt:choose>
                  <xslt:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026068' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026068']">
                    <xslt:text>1</xslt:text>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:text>0</xslt:text>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:when test="$v008Format='MP' or $v008Format='VM'">
                <xslt:choose>
                  <xslt:when test="bf:Instance/bf:fontSize[@rdf:resource='http://id.loc.gov/vocabulary/mfont/lp'] or                             bf:Instance/bf:fontSize/*[@rdf:about='http://id.loc.gov/vocabulary/mfont/lp'] or                             bf:Instance/bf:fontSize/*[contains(rdfs:label,'large print')]">
                    <xslt:text>d</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mtactile/brail'] or                             bf:Instance/bf:notation/*[@rdf:about='http://id.loc.gov/vocabulary/mtactile/brail'] or                             bf:Instance/bf:notation/*[contains(rdfs:label,'braille')]">
                    <xslt:text>f</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hd'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='hd'">
                    <xslt:text>a</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/he'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='he'">
                    <xslt:text>b</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hg'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='hg'">
                    <xslt:text>c</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/cr'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='cr'">
                    <xslt:text>o</xslt:text>
                  </xslt:when>
                  <xslt:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or                                                      */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or                                                      */*[local-name()='code']='cz']">
                    <xslt:text>s</xslt:text>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,6,1)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-8 != ''">
              <xslt:value-of select="$vPosition-8" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text> </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-9">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='MP'">
                <xsl:variable name="v008-30" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026082' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026082']">1</xsl:when>
                        <xsl:otherwise>0</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='MP'">
                      <xsl:value-of select="' '" />
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-30" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="v008-31" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:supplementaryContent/*[contains(rdfs:label,'index')]">1</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-31" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$v008Format='MU'">
                <xsl:variable name="vLitText" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:for-each select="bf:Work/bf:genreForm">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026068' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026068'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026297' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026297'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026094' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026094'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026113' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026113'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/his' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/his'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026114' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026114'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/lan' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/lan'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026110' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026110'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026363' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026363'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026344' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026344'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026481' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026481'">p</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/reh' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/reh'">r</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026594' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026594'">s</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026115' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026115'">t</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vLitTextPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vLitText" />
                    <xsl:with-param name="pStringLength">2</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="string-length($vLitTextPadded) &gt; 2">
                    <xsl:value-of select="substring($vLitTextPadded,1,2)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vLitTextPadded" />
                  </xsl:otherwise>
                </xsl:choose>
              </xslt:when>
              <xslt:when test="$v008Format='CR' or $v008Format='VM'">
                <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-9 != ''">
              <xslt:value-of select="$vPosition-9" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>||</xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text> </xslt:text>
          <xslt:variable name="vPosition-11">
            <xslt:choose>
              <xslt:when test="$v008Format='BK' or                         $v008Format='CR' or                         $v008Format='VM'">
                <xsl:variable name="v008-33" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339']">1</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026297' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026297']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026094' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026094']">e</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2015026020' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2015026020']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026110' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026110']">h</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026141' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026141']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026542' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026542']">j</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339']">m</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026481' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026481']">p</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026363' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026363']">s</xsl:when>
                        <xsl:otherwise>0</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='CR'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/a' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/a' or */*[local-name()='code']='a']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/b' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/b' or */*[local-name()='code']='b']">b</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/c' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/c' or */*[local-name()='code']='c']">c</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/d' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/d' or */*[local-name()='code']='d']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/e' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/e' or */*[local-name()='code']='e']">e</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/f' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/f' or */*[local-name()='code']='f']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/g' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/g' or */*[local-name()='code']='g']">g</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/h' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/h' or */*[local-name()='code']='h']">h</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/i' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/i' or */*[local-name()='code']='i']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/j' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/j' or */*[local-name()='code']='j']">j</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/k' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/k' or */*[local-name()='code']='k']">k</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/l' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/l' or */*[local-name()='code']='l']">l</xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="' '" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='VM'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027218' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027218']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/kit' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/kit']">b</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/art' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/art']">c</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/dio' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/dio']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fls' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fls']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026158' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026158']">g</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027251' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027251']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/gra' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/gra']">k</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/ted' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/ted']">l</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026406' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026406']">m</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/cha' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/cha']">n</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fla' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fla']">o</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/mic' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/mic']">p</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245']">q</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/rea' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/rea']">r</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/sli' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/sli']">s</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/tra' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/tra']">t</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026723' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026723']">v</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/toy' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/toy']">w</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-33" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                <xsl:variable name="v008-34" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049']">d</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='CR'">
                      <xsl:for-each select="$vAdminMetadata/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/metaentry']">
                        <xsl:if test="position()=1">
                          <xsl:choose>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'successive')">0</xsl:when>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'latest')">1</xsl:when>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'integrated')">2</xsl:when>
                            <xsl:otherwise>|</xsl:otherwise>
                          </xsl:choose>
                        </xsl:if>
                      </xsl:for-each>
                      <xsl:if test="not($vAdminMetadata/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/metaentry'])">|</xsl:if>
                    </xsl:when>
                    <xsl:when test="$v008Format='VM'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/anim' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/anim']">a</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/animlive' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/animlive']">c</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/live' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/live']">l</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/other' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/other']">z</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-34" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$v008Format='MP'">
                <xsl:variable name="vSpecFormat" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:for-each select="bf:Work/bf:genreForm">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026385' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026385'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026151' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026151'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026055' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026055'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026158' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026158'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026728' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026728'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027252' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027252'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026373' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026373'">o</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vSpecFormatPadded" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vSpecFormat" />
                    <xsl:with-param name="pStringLength">2</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="string-length($vSpecFormatPadded) &gt; 2">
                    <xsl:value-of select="substring($vSpecFormatPadded,1,2)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vSpecFormatPadded" />
                  </xsl:otherwise>
                </xsl:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-11 != ''">
              <xslt:value-of select="$vPosition-11" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>| </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:variable name="vPosition-12">
            <xslt:for-each select="bf:Work/bf:language[@rdf:resource]|bf:Work/bf:language[*/@rdf:about]|bf:Work/bf:language[*/*[local-name()='code']]">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:choose>
                    <xslt:when test="*/*[local-name()='code']">
                      <xslt:choose>
                        <xslt:when test="string-length(*/*[local-name()='code']) = 3">
                          <xsl:value-of select="*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                        </xslt:when>
                      </xslt:choose>
                    </xslt:when>
                    <xslt:when test="*[starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')] or starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                      <xsl:variable name="vCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:choose>
                          <xsl:when test="*[starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')]">
                            <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/languages/')" />
                          </xsl:when>
                          <xsl:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                            <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')" />
                          </xsl:when>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="string-length($vCode)=3" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:value-of select="$vCode" />
                      </xsl:if>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 008.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vPosition-12 != ''">
              <xslt:value-of select="$vPosition-12" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:text>   </xslt:text>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:text>  </xslt:text>
        </marc:controlfield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (008).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[         (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and         not(           bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv'         )]" mode="generate-010">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vLccnValue" select="rdf:value" />
    <xslt:variable name="vLccn">
      <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:when test="string-length($vLccnValue) = 10">
          <xsl:call-template name="tPadLeft">
            <xsl:with-param name="pInput" select="$vLccnValue" />
            <!-- useful for testing. -->
            <xsl:with-param name="pPadChar" select="' '" />
            <xsl:with-param name="pStringLength">12</xsl:with-param>
          </xsl:call-template>
        </xsl:when>
        <xsl:when test="string-length($vLccnValue) &lt; 10">
          <xsl:variable name="vLccnPart1">
            <xsl:call-template name="tPadLeft">
              <xsl:with-param name="pInput" select="$vLccnValue" />
              <!-- useful for testing. -->
              <xsl:with-param name="pPadChar" select="' '" />
              <xsl:with-param name="pStringLength">11</xsl:with-param>
            </xsl:call-template>
          </xsl:variable>
          <xsl:value-of select="concat($vLccnPart1, ' ')" />
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vLccnValue" />
        </xsl:otherwise>
      </xsl:choose>
    </xslt:variable>
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:datafield>
          <xslt:attribute name="tag">010</xslt:attribute>
          <xslt:attribute name="xml:space">preserve</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:variable name="v010-a">
            <xsl:value-of select="$vLccn" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v010-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v010-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:for-each select="ancestor::bf:Instance/bf:identifiedBy/*[             (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and             (               bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or               bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or               bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv'             )]/rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (010).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='Nbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Nbn']]" mode="generate-015">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">015</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="bf:source/bf:Source/*[local-name()='code']">
          <xslt:variable name="v015-2">
            <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v015-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v015-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="$vSourceUri != ''">
          <xslt:variable name="v015-2">
            <xslt:choose>
              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="$vSourceUri" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v015-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v015-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/bf:Local[bf:source/bf:Source]|bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source//@rdf:*[.='http://id.loc.gov/authorities/names/no2004037399']]" mode="generate-016">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vLAC">
      <xslt:choose>
        <xslt:when test="$vSourceUri='http://id.loc.gov/authorities/names/no2004037399' or                       bf:source/bf:Source/rdfs:label='OONL' or                       bf:source/bf:Source/rdfs:label='Library and Archives Canada'">
          <xslt:text>true</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">016</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vLAC!='true'">
              <xslt:text>7</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 016 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="not($vLAC='true')">
          <xslt:choose>
            <xslt:when test="bf:source/bf:Source/*[local-name()='code']">
              <xslt:variable name="v016-2">
                <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v016-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$v016-2" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
            <xslt:when test="$vSourceUri != ''">
              <xslt:variable name="v016-2">
                <xslt:choose>
                  <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vSourceUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v016-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$v016-2" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='CopyrightNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CopyrightNumber']]" mode="generate-017">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">017</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 017 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 017 $d.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="i">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 017 $i.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[(local-name()='Isbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']) and rdf:value/text()]" mode="generate-020">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">020</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 020 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:acquisitionTerms">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="c">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 020 $c.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()]" mode="generate-022">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">022</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='canceled'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="bf:status/bf:Status/rdfs:label[text()='incorrect'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="y">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 022 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner/bf:Agent/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 022 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()]" mode="generate-023">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">023</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or           bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or           bf:status/bf:Status/rdfs:label[text()='canceled'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="bf:status/bf:Status/rdfs:label[text()='incorrect'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="y">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 023 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner/bf:Agent/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 023 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']] |       bf:Instance/bf:identifiedBy/*[local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']] |       bf:Instance/bf:identifiedBy/*[local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']] |       bf:Work/bf:identifiedBy/*[local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr'] or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Eidr']] |       bf:Instance/bf:identifiedBy/*[local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']] |       bf:Instance/bf:identifiedBy/*[local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']] |       bf:Instance/bf:identifiedBy/*[local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']] |       bf:Instance/bf:identifiedBy/bf:Identifier[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo')]" mode="generate-024">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">024</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='Identifier' and not(rdf:type) and not(rdfs:label) and not (bf:source)">
              <xslt:text>8</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>7</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 024 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:acquisitionTerms">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="c">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 024 $c.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:variable name="v024-2">
        <xslt:choose>
          <xslt:when test="local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']">
            <xslt:text>ansi</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']">
            <xslt:text>doi</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr'] or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Eidr']">
            <xslt:text>eidr</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']">
            <xslt:text>hdl</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']">
            <xslt:text>gtin-14</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']">
            <xslt:text>isan</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']">
            <xslt:text>isni</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']">
            <xslt:text>iso</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']">
            <xslt:text>istc</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']">
            <xslt:text>iswc</xslt:text>
          </xslt:when>
          <xslt:when test="local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']">
            <xslt:text>urn</xslt:text>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 024 $2.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v024-2 != ''">
        <marc:subfield code="2">
          <xslt:value-of select="$v024-2" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']] |                     //bf:Item/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']]" mode="generate-025">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">025</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdf:value">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]|                     //bf:Item/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]" mode="generate-026">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">026</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="e">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 026 $e.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="bf:source/bf:Source/*[local-name()='code']">
          <xslt:variable name="v026-2">
            <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v026-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v026-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="$vSourceUri != ''">
          <xslt:variable name="v026-2">
            <xslt:choose>
              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="$vSourceUri" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v026-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v026-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='Strn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn']]" mode="generate-027">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">027</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 027 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[(local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='PublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']) and rdf:value/text()]" mode="generate-028">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">028</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='MusicPublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublisherNumber']">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']">
              <xslt:text>6</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>5</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text>2</xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 028 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 028 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='Coden' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden']]" mode="generate-030">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">030</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 030 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='PostalRegistration' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PostalRegistration']]" mode="generate-032">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">032</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 032 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 032 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:capture/bf:Capture[bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf'] or bf:place/@rdf:resource]" mode="generate-033">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">033</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="count(bf:date)=1">
              <xslt:choose>
                <xslt:when test="contains(bf:date,'/')">
                  <xslt:text>2</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>0</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
            <xslt:when test="count(bf:date) &gt; 1">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:note/bf:Note[rdfs:label='capture']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="bf:note/bf:Note[rdfs:label='broadcast']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="bf:note/bf:Note[rdfs:label='finding']">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 033 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="count(bf:date)=1">
          <xslt:choose>
            <xslt:when test="bf:date/@rdf:datatype='http://id.loc.gov/datatypes/edtf'">
              <xslt:choose>
                <xslt:when test="contains(bf:date,'/')">
                  <xsl:variable name="vDate1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:variable name="vEDTFDate1">
                      <xsl:call-template name="EDTF-Date1">
                        <xsl:with-param name="pEDTFDate" select="bf:date" />
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="$vEDTFDate1" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:variable name="vDate2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:variable name="vEDTFDate2">
                      <xsl:call-template name="EDTF-Date2">
                        <xsl:with-param name="pEDTFDate" select="bf:date" />
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="$vEDTFDate2" />
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="a">
                    <xsl:value-of select="$vDate1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </marc:subfield>
                  <marc:subfield code="a">
                    <xsl:value-of select="$vDate2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </marc:subfield>
                </xslt:when>
                <xslt:otherwise>
                  <xsl:variable name="v033Date" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="bf:date" />
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="a">
                    <xsl:value-of select="$v033Date" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </marc:subfield>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
            <xslt:otherwise>
              <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:date node, value <xsl:value-of select="bf:date" />. Unknown data type (must be EDTF)</xsl:message>
              <marc:subfield code="a">--------</marc:subfield>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:date">
            <xslt:choose>
              <xslt:when test="@rdf:datatype='http://id.loc.gov/datatypes/edtf'">
                <xslt:choose>
                  <xslt:when test="contains(.,'/')">
                    <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:date node, value <xsl:value-of select="." />. Range of EDTF dates detected where only single value allowed.</xsl:message>
                    <marc:subfield code="a">--------</marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:variable name="v033Date" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:call-template name="EDTF-to-033">
                        <xsl:with-param name="pEDTFDate" select="." />
                      </xsl:call-template>
                    </xsl:variable>
                    <marc:subfield code="a">
                      <xsl:value-of select="$v033Date" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </marc:subfield>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:otherwise>
                <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed bf:date node, value <xsl:value-of select="." />. Unknown data type (must be EDTF)</xsl:message>
                <marc:subfield code="a">--------</marc:subfield>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:place">
        <xslt:variable name="vPlaceUri" select="@rdf:resource|bf:Place/@rdf:about" />
        <xslt:choose>
          <xslt:when test="starts-with($vPlaceUri,'http://id.loc.gov/authorities/classification/G')">
            <xsl:variable name="vPlaceCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="$vPlaceUri" />
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:when test="contains($vPlaceCode,'.')">
                <marc:subfield code="b">
                  <xsl:value-of select="substring-before($vPlaceCode,'.')" />
                </marc:subfield>
                <marc:subfield code="c">
                  <xsl:value-of select="substring-after($vPlaceCode,'.')" />
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <marc:subfield code="b">
                  <xsl:value-of select="$vPlaceCode" />
                </marc:subfield>
              </xsl:otherwise>
            </xsl:choose>
          </xslt:when>
          <xslt:otherwise>
            <xsl:if test="bf:Place/rdf:value or bf:Place/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <marc:subfield code="p">
                <xsl:choose>
                  <xsl:when test="bf:Place/rdf:value">
                    <xsl:value-of select="bf:Place/rdf:value" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:Place/rdfs:label" />
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:if>
            <xslt:choose>
              <xslt:when test="bf:Place/bf:source/bf:Source/*[local-name()='code']">
                <xslt:variable name="v033-2">
                  <xsl:value-of select="bf:Place/bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:variable>
                <xslt:if test="$v033-2 != ''">
                  <marc:subfield code="2">
                    <xslt:value-of select="$v033-2" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
              <xslt:when test="$vSourceUri != ''">
                <xslt:variable name="v033-2">
                  <xslt:choose>
                    <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                      <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:with-param name="pUri" select="$vSourceUri" />
                      </xsl:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:variable>
                <xslt:if test="$v033-2 != ''">
                  <marc:subfield code="2">
                    <xslt:value-of select="$v033-2" />
                  </marc:subfield>
                </xslt:if>
              </xslt:when>
            </xslt:choose>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:scale/bf:Scale[starts-with(rdfs:label,'linear') or starts-with(rdfs:label,'angular')]" mode="generate-034">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">034</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v034-a">
        <xslt:choose>
          <xslt:when test="starts-with(rdfs:label,'linear')">
            <xslt:text>a</xslt:text>
          </xslt:when>
          <xslt:when test="starts-with(rdfs:label,'angular')">
            <xslt:text>b</xslt:text>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v034-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v034-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="rdfs:label='linear horizontal'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="rdfs:label='linear vertical'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="c">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[(local-name()='Local' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']) and bf:assigner]" mode="generate-035">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vAssignerUri">
      <xslt:choose>
        <xslt:when test="bf:assigner/@rdf:resource">
          <xsl:value-of select="bf:assigner/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:assigner/*/@rdf:about">
          <xsl:value-of select="bf:assigner/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vAssignerCode">
      <xslt:choose>
        <xslt:when test="bf:assigner/*/*[local-name()='code']">
          <xsl:value-of select="bf:assigner/*/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="$vAssignerUri != ''">
          <xslt:choose>
            <xslt:when test="contains($vAssignerUri,'id.loc.gov')">
              <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="$vAssignerUri" />
              </xsl:call-template>
            </xslt:when>
            <xslt:when test="contains($vAssignerUri,'ld.zdb-services.de')">
              <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="$vAssignerUri" />
              </xsl:call-template>
            </xslt:when>
            <xslt:otherwise>
              <xsl:value-of select="$vAssignerUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vAssignerString">
      <xslt:choose>
        <xslt:when test="$vAssignerCode != ''">
          <xsl:value-of select="concat('(',$vAssignerCode,')')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">035</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or                     bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:variable name="v035-z">
            <xsl:value-of select="concat($vAssignerString,rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v035-z != ''">
            <marc:subfield code="z">
              <xslt:value-of select="$v035-z" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:otherwise>
          <xslt:variable name="v035-a">
            <xsl:value-of select="concat($vAssignerString,rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v035-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v035-a" />
            </marc:subfield>
          </xslt:if>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[(local-name()='OclcNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/OclcNumber']) and rdf:value]" mode="generate-035">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">035</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1]='http://id.loc.gov/vocabulary/mstatus/cancinv' or           bf:status/bf:Status/rdfs:label[text()='canceled or invalid'] or           bf:status/bf:Status/rdfs:label[text()='invalid'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xslt:variable name="v035-z">
            <xsl:value-of select="concat('(OCoLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v035-z != ''">
            <marc:subfield code="z">
              <xslt:value-of select="$v035-z" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:otherwise>
          <xslt:variable name="v035-a">
            <xsl:value-of select="concat('(OCoLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v035-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v035-a" />
            </marc:subfield>
          </xslt:if>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='StudyNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]" mode="generate-036">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:datafield>
          <xslt:attribute name="tag">036</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 036 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:assigner/bf:Agent/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="b">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 036 $b.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (036).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:acquisitionSource/bf:AcquisitionSource |                     //bf:Item/bf:acquisitionSource/bf:AcquisitionSource" mode="generate-037">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">037</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:note/bf:Note/rdfs:label[text()='intervening source']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="bf:note/bf:Note/rdfs:label[text()='current source']">
              <xslt:text>3</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 037 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='StockNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 037 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:variable name="v037-b">
        <xslt:choose>
          <xslt:when test="rdfs:label">
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 037 $b.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bf:source/bf:Source/rdfs:label">
            <xslt:for-each select="bf:source/bf:Source/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 037 $b.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v037-b != ''">
        <marc:subfield code="b">
          <xslt:value-of select="$v037-b" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:acquisitionTerms">
        <marc:subfield code="c">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label[text() != 'intervening source' and text() != 'current source']">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:geographicCoverage[                       contains(@rdf:resource,'id.loc.gov/vocabulary/geographicAreas') or                       contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/vocabulary/geographicAreas') or                       bf:GeographicCoverage/rdf:value or                        bf:GeographicCoverage/madsrdf:code  or                        madsrdf:Geographic/madsrdf:code]" mode="generate-043">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vUri">
      <xslt:choose>
        <xslt:when test="@rdf:resource">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="*/@rdf:about">
          <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">043</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="*/madsrdf:code">
          <xslt:for-each select="*/madsrdf:code">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="*/@rdf:about">
              <xslt:variable name="v043-0">
                <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v043-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$v043-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="starts-with($vUri,'http://id.loc.gov/vocabulary/geographicAreas/')">
          <xslt:variable name="v043-a">
            <xsl:call-template name="tPadRight" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:with-param name="pInput" select="substring-after($vUri,'http://id.loc.gov/vocabulary/geographicAreas/')" />
              <xsl:with-param name="pPadChar" select="'-'" />
              <xsl:with-param name="pStringLength" select="7" />
            </xsl:call-template>
          </xslt:variable>
          <xslt:if test="$v043-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v043-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:variable name="v043-0">
            <xsl:value-of select="$vUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v043-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$v043-0" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="bf:GeographicCoverage/bf:source/bf:Source/bf:code='ISO 3166'">
          <xslt:for-each select="bf:GeographicCoverage/rdf:value">
            <marc:subfield code="c">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="$vUri != ''">
              <xslt:variable name="v043-0">
                <xsl:value-of select="$vUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v043-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$v043-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:GeographicCoverage/rdf:value">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="$vUri != ''">
              <xslt:variable name="v043-0">
                <xsl:value-of select="$vUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$v043-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$v043-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
          <xslt:for-each select="bf:GeographicCoverage/bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:originDate[@rdf:datatype='http://id.loc.gov/datatypes/edtf']" mode="generate-046">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v046DateTime1">
      <xsl:call-template name="EDTF-Date1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pEDTFDate" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="v046DateTime2">
      <xsl:call-template name="EDTF-Date2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pEDTFDate" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="v046Date1">
      <xsl:call-template name="EDTF-DatePart" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pEDTFDate" select="$v046DateTime1" />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="v046Time1">
      <xsl:call-template name="EDTF-TimePart" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pEDTFDate" select="$v046DateTime1" />
      </xsl:call-template>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">046</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v046-k">
        <xsl:value-of select="concat(translate($v046Date1,'-',''),translate($v046Time1,':',''))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </xslt:variable>
      <xslt:if test="$v046-k != ''">
        <marc:subfield code="k">
          <xslt:value-of select="$v046-k" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="$v046DateTime2">
          <xslt:variable name="v046-l">
            <xsl:variable name="v046Date2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:call-template name="EDTF-DatePart">
                <xsl:with-param name="pEDTFDate" select="$v046DateTime2" />
              </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="v046Time2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:call-template name="EDTF-TimePart">
                <xsl:with-param name="pEDTFDate" select="$v046DateTime2" />
              </xsl:call-template>
            </xsl:variable>
            <xsl:value-of select="concat(translate($v046Date2,'-',''),translate($v046Time2,':',''))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v046-l != ''">
            <marc:subfield code="l">
              <xslt:value-of select="$v046-l" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-050">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">050</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/uba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/uba']             ">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="             bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/nuba'] or              bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/nuba']             ">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="//bf:Item/bf:heldBy/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or *[local-name()='label']='United States, Library of Congress' or *[local-name()='code']='DLC'] or                       //bf:Item/bf:heldBy/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc'">
              <xslt:text>0</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/*[local-name()='code']='DLC'">
              <xslt:text>0</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 050 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifier/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="//bf:Item/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-051">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">051</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 051 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 051 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/authorities/classification/G') or                contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/authorities/classification/G')]" mode="generate-052">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vUri">
      <xslt:choose>
        <xslt:when test="@rdf:resource">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="*/@rdf:about">
          <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="v052Code">
      <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pUri" select="$vUri" />
      </xsl:call-template>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">052</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v052-a">
        <xslt:choose>
          <xslt:when test="contains($v052Code,'.')">
            <xsl:value-of select="substring-after(substring-before($v052Code,'.'),'G')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:when>
          <xslt:otherwise>
            <xsl:value-of select="substring-after($v052Code,'G')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v052-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v052-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="contains($v052Code,'.')">
          <xslt:variable name="v052-b">
            <xsl:value-of select="substring-after($v052Code,'.')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v052-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v052-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/*[(local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */@rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada']]" mode="generate-055">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">055</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/authorities/names/no2004037399'] or                bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/uba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/uba']             )             ">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/authorities/names/no2004037399'] or                bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/nuba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/nuba']             )             ">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="             bf:assigner/*[@rdf:about='http://id.loc.gov/authorities/names/no2004037399'] or              bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399']             ">
              <xslt:text>0</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 055 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 055 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about[not(contains(.,'example.org'))]">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/*[local-name()='ClassificationNlm' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationNlm']" mode="generate-060">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">060</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dnlm'] or                bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnlm']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/uba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/uba']             )             ">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dnlm'] or                bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnlm']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/nuba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/nuba']             )             ">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnlm' or */@rdf:about='http://id.loc.gov/vocabulary/organizations/dnlm']">
              <xslt:text>0</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 060 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about[not(contains(.,'example.org'))]">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="//@xml:lang[generate-id() = generate-id(key('langs',.)[1])]" mode="generate-066">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v880Script">
      <xslt:variable name="vlang">
        <xslt:value-of select="translate(substring-after(.,'-'),$upper,$lower)" />
      </xslt:variable>
      <xslt:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">066</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v066-c">
        <xsl:value-of select="$v880Script" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </xslt:variable>
      <xslt:if test="$v066-c != ''">
        <marc:subfield code="c">
          <xslt:value-of select="$v066-c" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/bf:ClassificationNal|bf:Work/bf:classification/bf:Classification[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or                     bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal']" mode="generate-070">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">070</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal'] or                bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/uba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/uba']             )             ">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="             (               bf:assigner/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal'] or                bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal']             ) and (               bf:status/bf:Status[@rdf:about='http://id.loc.gov/vocabulary/mstatus/nuba'] or                bf:status[@rdf:resource='http://id.loc.gov/vocabulary/mstatus/nuba']             )             ">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 070 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:subject/bf:Topic[*[local-name()='code']]" mode="generate-072">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">072</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/agricola' or                       */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/agricola' or                       */*[local-name()='code'] = 'agricola']">
              <xslt:text>0</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>7</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="*[local-name()='code']">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:choose>
                <xslt:when test="contains(.,' ')">
                  <xsl:value-of select="substring-before(.,' ')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:otherwise>
                  <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 072 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="contains(*[local-name()='code'][1],' ')">
          <xsl:call-template name="tToken2Subfields" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pString" select="substring-after(*[local-name()='code'][1],' ')" />
            <xsl:with-param name="pSubfieldCode" select="'x'" />
            <xsl:with-param name="pSeparator" select="' '" />
          </xsl:call-template>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="bf:source[not(@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/agricola' or                        bf:Source/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/agricola' or                        bf:Source/*[local-name()='code'] = 'agricola')]">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:choose>
                <xslt:when test="contains(@rdf:resource,'bisacsh') or                         contains(bf:Source/@rdf:about,'bisacsh')">
                  <xslt:text>bisacsh</xslt:text>
                </xslt:when>
                <xslt:when test="bf:Source/*[local-name()='code']">
                  <xslt:for-each select="bf:Source/*[local-name()='code']">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 072 $2.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="@rdf:resource">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:Source/@rdf:about">
                  <xsl:value-of select="bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:Source/rdfs:label">
                  <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pString" select="bf:Source/rdfs:label" />
                  </xsl:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>Unable to determine source</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 072 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo']" mode="generate-074">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">074</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='canceled or invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 074 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/*[(local-name()='ClassificationDdc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationDdc') and bf:classificationPortion/text()]" mode="generate-082">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">082</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:edition = 'full'">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="bf:edition = 'abridged'">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>7</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or                       //bf:Item/bf:heldBy[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="bf:assigner">
              <xslt:text>4</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 082 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="not(bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or */@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc'])">
          <xslt:for-each select="bf:assigner/bf:Agent/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="q">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 082 $q.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="bf:source">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:choose>
                <xslt:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/classSchemes/ddc')">
                  <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/classSchemes/ddc')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="starts-with(*/@rdf:about,'http://id.loc.gov/vocabulary/classSchemes/ddc')">
                  <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/classSchemes/ddc')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="rdfs:Resource/rdfs:label">
                  <xsl:value-of select="rdfs:Resource/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:Source/rdfs:label">
                  <xsl:value-of select="bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:otherwise>
                  <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pString" select="*/*[local-name()='code']" />
                  </xsl:call-template>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 082 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/bf:Classification[not(                                                                       rdf:type or                                                                        bf:assigner//@rdf:*[contains(., 'dnal')] or                                                                        bf:source//@rdf:*[contains(., 'sudocs')] or                                                                        bf:source//@rdf:*[contains(., 'cacodoc')]                                                                 )]" mode="generate-084">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">084</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:itemPortion">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 084 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner">
        <marc:subfield code="q">
          <xslt:variable name="vUri">
            <xslt:choose>
              <xslt:when test="@rdf:resource">
                <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="*/@rdf:about">
                <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:variable name="vAssignerCode">
            <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:with-param name="pUri" select="$vUri" />
            </xsl:call-template>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vAssignerCode != ''">
              <xsl:value-of select="$vAssignerCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:otherwise>
              <xsl:value-of select="*/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="rdf:value/@rdf:resource">
              <xsl:value-of select="rdf:value/@rdf:resource" />
            </xsl:when>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 084 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="//bf:Item/bf:shelfMark/bf:ShelfMark[not(rdf:type)]" mode="generate-084">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">084</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:assigner">
        <marc:subfield code="q">
          <xslt:choose>
            <xslt:when test="@rdf:resource">
              <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="@rdf:resource" />
              </xsl:call-template>
            </xslt:when>
            <xslt:when test="*/@rdf:about">
              <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="*/@rdf:about" />
              </xsl:call-template>
            </xslt:when>
            <xslt:otherwise>
              <xsl:value-of select="*/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 084 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:classification/bf:Classification[bf:source//@rdf:*[contains(., 'sudocs') or contains(., 'cacodoc')]]" mode="generate-086">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">086</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:source/@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/sudocs' or bf:source/*/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/sudocs'">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source/@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/cacodoc' or bf:source/*/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/cacodoc'">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='invalid'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 086 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="not(bf:source[@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/sudocs' or */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/sudocs' or @rdf:resource='http://id.loc.gov/vocabulary/classSchemes/cacdoc' or */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/cacdoc'])">
          <xslt:for-each select="bf:source/bf:Source/bf:code">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="2">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 086 $2.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:identifiedBy/*[local-name()='ReportNumber' or rdf:type='http://id.loc.gov/ontologies/bibframe/ReportNumber']" mode="generate-088">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">088</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='invalid'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="z">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 088 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent[@rdf:resource]|       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/bf:* |       bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/madsrdf:*" mode="generate-vMainEntryTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="agentURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:resource,'id.loc.gov/authorities/names')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'id.loc.gov/rwo/agents')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc.gov/rwo/agents')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vNameAuthPreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$agentURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
    <xslt:variable name="vMainEntryTag">
      <xslt:choose>
        <xslt:when test="$vNameAuth//marc:record">
          <xslt:choose>
            <xslt:when test="$vNameAuth//marc:datafield[@tag='100']">
              <xslt:text>100</xslt:text>
            </xslt:when>
            <xslt:when test="$vNameAuth//marc:datafield[@tag='110']">
              <xslt:text>110</xslt:text>
            </xslt:when>
            <xslt:when test="$vNameAuth//marc:datafield[@tag='111']">
              <xslt:text>111</xslt:text>
            </xslt:when>
            <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
              <xslt:text>110</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
          <xslt:text>110</xslt:text>
        </xslt:when>
        <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
          <xslt:text>111</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>100</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vAuthSubfields">
      <xslt:choose>
        <xslt:when test="$vMainEntryTag='100'">
          <xslt:text>abcdgjq</xslt:text>
        </xslt:when>
        <xslt:when test="$vMainEntryTag='110'">
          <xslt:text>abcdgn</xslt:text>
        </xslt:when>
        <xslt:when test="$vMainEntryTag='111'">
          <xslt:text>acdegnq</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:choose>
      <xslt:when test="position() = 1">
        <xslt:variable name="vXmlLang">
          <xslt:value-of select="rdfs:label/@xml:lang" />
        </xslt:variable>
        <marc:datafield>
          <xslt:attribute name="tag">
            <xslt:value-of select="$vMainEntryTag" />
          </xslt:attribute>
          <xslt:if test="$vXmlLang != ''">
            <xslt:attribute name="xml:lang">
              <xslt:value-of select="$vXmlLang" />
            </xslt:attribute>
          </xslt:if>
          <xslt:attribute name="ind1">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
                  <xsl:value-of select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:choose>
                    <xslt:when test="contains(local-name(),'Family')">
                      <xslt:text>3</xslt:text>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:text>1</xslt:text>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='110'">
                  <xslt:choose>
                    <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                    <xslt:when test="$vNameAuth//marc:datafield[@tag='151']">
                      <xslt:text>1</xslt:text>
                    </xslt:when>
                  </xslt:choose>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>2</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:choose>
            <xslt:when test="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]">
              <xsl:for-each select="$vNameAuth//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:variable name="vvMainEntryTag-a">
                <xslt:choose>
                  <xslt:when test="$vMainEntryTag='100'">
                    <xslt:choose>
                      <xslt:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                        <xslt:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:when test="madsrdf:authoritativeLabel">
                        <xslt:for-each select="madsrdf:authoritativeLabel">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:choose>
                      <xslt:when test="madsrdf:elementList">
                        <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:when test="madsrdf:authoritativeLabel">
                        <xslt:for-each select="madsrdf:authoritativeLabel">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:for-each select="rdfs:label">
                          <xslt:choose>
                            <xslt:when test="position() = 1">
                              <xslt:call-template name="tChopPunct">
                                <xslt:with-param name="pString" select="." />
                              </xslt:call-template>
                            </xslt:when>
                            <xslt:otherwise>
                              <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $a.</xslt:message>
                            </xslt:otherwise>
                          </xslt:choose>
                        </xslt:for-each>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvMainEntryTag-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$vvMainEntryTag-a" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='110'">
                  <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="b">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='111'">
                  <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="d">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $d.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vMainEntryTag='100'">
                  <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="q">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $q.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:when test="$vMainEntryTag='111'">
                  <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="q">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:choose>
            <xslt:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
              <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                <marc:subfield code="e">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="../bf:role/@rdf:resource">
                <marc:subfield code="e">
                  <xsl:if test="contains(., 'id.loc.gov/vocabulary/relators/')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:value-of select="substring-after(., 'vocabulary/relators/')" />
                  </xsl:if>
                </marc:subfield>
              </xslt:for-each>
            </xslt:when>
          </xslt:choose>
          <xslt:choose>
            <xslt:when test="$vMainEntryTag='111'">
              <xslt:for-each select="../../bf:role/*[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
                <marc:subfield code="j">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $j.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
            </xslt:when>
          </xslt:choose>
          <xslt:for-each select="../../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]|../bf:role/*[madsrdf:code[.!='ctb'] or bf:code[.!='ctb']]">
            <marc:subfield code="4">
              <xslt:choose>
                <xslt:when test="madsrdf:code">
                  <xslt:for-each select="madsrdf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="                 ../../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../bf:role/*/@rdf:about[not(contains(., 'relators/ctb'))] |                  ../../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))] |                  ../bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
              <xslt:variable name="vvMainEntryTag-2">
                <xslt:choose>
                  <xslt:when test="bf:source/bf:Source/bf:code">
                    <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="$vSourceUri != ''">
                    <xslt:choose>
                      <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:with-param name="pUri" select="$vSourceUri" />
                        </xsl:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvMainEntryTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvMainEntryTag-2" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
          <xslt:variable name="vvMainEntryTag-0">
            <xslt:choose>
              <xslt:when test="$agentURI != '' and contains($agentURI, '/authorities/')">
                <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$agentURI != '' and contains($agentURI, 'id.loc.gov/rwo/agents/')">
                <xsl:value-of select="concat(substring-before($agentURI,'rwo/agents'), 'authorities/names/', substring-after($agentURI,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="@rdf:about[             not(contains(.,'example.org')) and              not(contains(.,'REPLACE')) and              not(contains(., '/agents/')) and             not(contains(., '/isni/')) and             not(contains(., '/gnd/'))             ]">
                <xslt:for-each select="@rdf:about[               not(contains(.,'example.org')) and                not(contains(.,'REPLACE')) and                not(contains(., '/agents/')) and               not(contains(., '/isni/')) and               not(contains(., '/gnd/'))               ]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:value-of select="." />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $0.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvMainEntryTag-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$vvMainEntryTag-0" />
            </marc:subfield>
          </xslt:if>
          <xslt:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:variable name="vvMainEntryTag-1">
            <xslt:choose>
              <xslt:when test="$agentURI != '' and (contains($agentURI, '/agents/') or contains($agentURI, '/gnd/'))">
                <xsl:value-of select="$agentURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="@rdf:about[             contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')              ]">
                <xslt:for-each select="@rdf:about[               contains(., '/agents/') or contains(., '/gnd/') or contains(., '/isni/')               ]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:value-of select="." />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vMainEntryTag $1.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvMainEntryTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvMainEntryTag-1" />
            </marc:subfield>
          </xslt:if>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (vMainEntryTag).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Work/bf:expressionOf/bf:*[(local-name() = 'Hub' or local-name() = 'Work') and                                                    bf:title and                                                    not(../../bf:contribution/bf:PrimaryContribution) and                                                    not(../../bf:contribution/bflc:PrimaryContribution) and                                                    not(../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')])                                             ]" mode="generate-130">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vTitleResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pUri" select="@rdf:about" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <xslt:variable name="vXmlLang">
          <xslt:value-of select="bf:mainTitle/@xml:lang" />
        </xslt:variable>
        <marc:datafield>
          <xslt:attribute name="tag">130</xslt:attribute>
          <xslt:if test="$vXmlLang != ''">
            <xslt:attribute name="xml:lang">
              <xslt:value-of select="$vXmlLang" />
            </xslt:attribute>
          </xslt:if>
          <xslt:choose>
            <xslt:when test="$xslProcessor='libxslt' and contains(@rdf:about, 'resources/hubs') and not(bflc:marcKey)">
              <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 130 output.</xsl:message>
            </xslt:when>
          </xslt:choose>
          <xslt:attribute name="ind1">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                  <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>0</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:choose>
            <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
              <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:variable name="v130-a">
                <xslt:choose>
                  <xslt:when test="bf:title/bf:Title/rdfs:label">
                    <xslt:for-each select="bf:title/bf:Title/rdfs:label">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                    <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$v130-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$v130-a" />
                </marc:subfield>
              </xslt:if>
              <xslt:for-each select="bf:legalDate">
                <marc:subfield code="d">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:originDate">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <marc:subfield code="f">
                      <xslt:value-of select="." />
                    </marc:subfield>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 130 $f.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
              <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                <marc:subfield code="m">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
                <marc:subfield code="n">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:title/bf:Title/bf:partName">
                <marc:subfield code="p">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:choose>
                <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                  <marc:subfield code="o">arranged</marc:subfield>
                </xslt:when>
              </xslt:choose>
              <xslt:for-each select="bf:musicKey">
                <marc:subfield code="r">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
              <xslt:for-each select="bf:version">
                <marc:subfield code="s">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
            <marc:subfield code="0">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (130).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']] |                     bf:Work/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]" mode="generate-210">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">210</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:assigner/bf:Agent/bf:code = 'issnkey'">
              <xslt:text> </xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 210 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:qualifier">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 210 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="bf:assigner/bf:Agent[not(bf:code='issnkey')]">
          <xslt:for-each select="bf:assigner/bf:Agent[not(bf:code='issnkey')]/bf:code">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:title/*[local-name() = 'KeyTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]" mode="generate-222">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">222</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bflc:nonSortNum">
              <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 222 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:qualifier">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 222 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:expressionOf[contains(@rdf:resource, 'hubs')][../bf:contribution/*[local-name()='PrimaryContribution'] or ../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]] |                     bf:Work/bf:expressionOf/bf:*[contains(@rdf:about, 'hubs') or bflc:marcKey or marc:record][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]       " mode="generate-240">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:resource,'id.loc.gov/resources/hubs')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">240</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="$xslProcessor='libxslt' and contains($relURI, 'resources/hubs') and not(bflc:marcKey)">
          <xsl:message xmlns:xsl="http://www.w3.org/1999/XSL/Transform">Record <xsl:value-of select="$vRecordId" />: Unprocessed expressionOf node/Hub.  No 240 output.</xsl:message>
        </xslt:when>
      </xslt:choose>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:datafield[@tag = '240']">
          <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="@code" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
          <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[(@code = 't' or preceding-sibling::marc:subfield[@code = 't']) and contains('dgfhklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="translate(@code, 't', 'a')" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:variable name="v240-1">
        <xslt:choose>
          <xslt:when test="$relURI != ''">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v240-1 != ''">
        <marc:subfield code="1">
          <xslt:value-of select="$v240-1" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:expressionOf/child::node()[         not(contains(@rdf:resource, 'hubs')) and not(contains(@rdf:about, 'hubs')) and          not(contains(@rdf:resource, 'REPLACE')) and not(contains(@rdf:about, 'REPLACE')) and          not(bflc:marcKey or marc:record) and          (local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]" mode="generate-240">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <xslt:variable name="vXmlLang">
          <xslt:value-of select="bf:mainTitle/@xml:lang" />
        </xslt:variable>
        <marc:datafield>
          <xslt:attribute name="tag">240</xslt:attribute>
          <xslt:if test="$vXmlLang != ''">
            <xslt:attribute name="xml:lang">
              <xslt:value-of select="$vXmlLang" />
            </xslt:attribute>
          </xslt:if>
          <xslt:attribute name="ind1">
            <xslt:text>1</xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="bf:title/bf:Title/bflc:nonSortNum">
                  <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>0</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:variable name="v240-a">
            <xslt:choose>
              <xslt:when test="bf:title/bf:Title/bf:mainTitle">
                <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v240-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v240-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:for-each select="bf:legalDate">
            <marc:subfield code="d">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:originDate">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="f">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 240 $f.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
            <marc:subfield code="m">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
            <marc:subfield code="n">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:title/bf:Title/bf:partName">
            <marc:subfield code="p">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
              <marc:subfield code="o">arranged</marc:subfield>
            </xslt:when>
          </xslt:choose>
          <xslt:for-each select="bf:musicKey">
            <marc:subfield code="r">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:version">
            <marc:subfield code="s">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (240).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:title/*[(local-name() = 'VariantTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']) and bf:variantType = 'translated']" mode="generate-242">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="langCode">
      <xslt:variable name="vxmllang">
        <xslt:value-of select="bf:mainTitle/@xml:lang" />
      </xslt:variable>
      <xslt:value-of select="exsl:node-set($languages)/*[xmllang=$vxmllang]/iso6392" />
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">242</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bflc:nonSortNum">
              <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 242 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:subtitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 242 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:partName">
        <marc:subfield code="p">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="$langCode != ''">
          <xslt:variable name="v242-y">
            <xsl:value-of select="$langCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v242-y != ''">
            <marc:subfield code="y">
              <xslt:value-of select="$v242-y" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="bf:mainTitle/@xml:lang != ''">
          <xslt:variable name="v242-y">
            <xsl:value-of select="bf:mainTitle/@xml:lang " xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v242-y != ''">
            <marc:subfield code="y">
              <xslt:value-of select="$v242-y" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ]" mode="generate-243">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <xslt:variable name="vXmlLang">
          <xslt:value-of select="bf:mainTitle/@xml:lang" />
        </xslt:variable>
        <marc:datafield>
          <xslt:attribute name="tag">243</xslt:attribute>
          <xslt:if test="$vXmlLang != ''">
            <xslt:attribute name="xml:lang">
              <xslt:value-of select="$vXmlLang" />
            </xslt:attribute>
          </xslt:if>
          <xslt:attribute name="ind1">
            <xslt:text>1</xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="bflc:nonSortNum">
                  <xsl:value-of select="bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>0</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:for-each select="bf:mainTitle">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 243 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (243).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:title/bf:Title[not(rdf:type)]|bf:Work[not(../bf:Instance/bf:title/bf:Title[not(rdf:type)])]/bf:title/bf:Title[not(rdf:type)]" mode="generate-245">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:datafield>
          <xslt:attribute name="tag">245</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">
                  <xslt:text>1</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>0</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:variable name="vInd">
              <xslt:choose>
                <xslt:when test="bflc:nonSortNum[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:value-of select="bflc:nonSortNum[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))] and                       (string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) &lt; string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]))">
                  <xsl:value-of select="string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) - string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="$vInd != ''">
                <xslt:value-of select="$vInd" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:text>0</xslt:text>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:attribute>
          <xslt:choose>
            <xslt:when test="count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
              <marc:subfield code="6">880-01</marc:subfield>
            </xslt:when>
          </xslt:choose>
          <xslt:variable name="v245-a">
            <xslt:choose>
              <xslt:when test="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xslt:for-each select="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="count(bf:mainTitle)=1 and bf:mainTitle[@xml:lang]">
                <xslt:for-each select="bf:mainTitle[@xml:lang]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="                 bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))] and                 not(                   substring(                     bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))],                      string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]),                   1) = '.'                 )               ">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">.</xsl:text>
              </xslt:when>
              <xslt:when test="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">.</xsl:text>
              </xslt:when>
              <xslt:when test="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
              <xslt:when test="count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v245-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v245-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:variable name="v245-n">
            <xslt:variable name="nExists">
              <xslt:choose>
                <xslt:when test="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="count(bf:partNumber)=1 and bf:partNumber[@xml:lang]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xslt:for-each select="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $n.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="count(bf:partNumber)=1 and bf:partNumber[@xml:lang]">
                <xslt:for-each select="bf:partNumber[@xml:lang]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $n.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="$nExists='1' and bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">,</xsl:text>
              </xslt:when>
              <xslt:when test="$nExists='1' and bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="$nExists='1' and count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="$nExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
              <xslt:when test="$nExists='1' and count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v245-n != ''">
            <marc:subfield code="n">
              <xslt:value-of select="$v245-n" />
            </marc:subfield>
          </xslt:if>
          <xslt:variable name="v245-p">
            <xslt:variable name="pExists">
              <xslt:choose>
                <xslt:when test="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="count(bf:partName)=1 and bf:partName[@xml:lang]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xslt:for-each select="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $p.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="count(bf:partName)=1 and bf:partName[@xml:lang]">
                <xslt:for-each select="bf:partName[@xml:lang]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $p.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="$pExists='1' and bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="$pExists='1' and count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> :</xsl:text>
              </xslt:when>
              <xslt:when test="$pExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
              <xslt:when test="$pExists='1' and count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v245-p != ''">
            <marc:subfield code="p">
              <xslt:value-of select="$v245-p" />
            </marc:subfield>
          </xslt:if>
          <xslt:variable name="v245-b">
            <xslt:variable name="bExists">
              <xslt:choose>
                <xslt:when test="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                  <xsl:value-of select="'1'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xslt:for-each select="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $b.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:when test="count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                <xslt:for-each select="bf:subtitle[@xml:lang]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $b.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
            </xslt:choose>
            <xslt:choose>
              <xslt:when test="$bExists='1' and ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
              <xslt:when test="$bExists='1' and count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> /</xsl:text>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v245-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v245-b" />
            </marc:subfield>
          </xslt:if>
          <xslt:variable name="v245-c">
            <xslt:choose>
              <xslt:when test="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xslt:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:value-of select="." />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $c.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:variable name="vEndsWith">
                  <xsl:call-template name="tEndsWith" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pStr" select="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" />
                    <xsl:with-param name="pEndChar" select="'.'" />
                  </xsl:call-template>
                </xslt:variable>
                <xsl:if test="$vEndsWith = '0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:text>.</xsl:text>
                </xsl:if>
              </xslt:when>
              <xslt:when test="count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xslt:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:value-of select="." />
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 245 $c.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:variable name="vEndsWith">
                  <xsl:call-template name="tEndsWith" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pStr" select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]" />
                    <xsl:with-param name="pEndChar" select="'.'" />
                  </xsl:call-template>
                </xslt:variable>
                <xsl:if test="$vEndsWith = '0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:text>.</xsl:text>
                </xsl:if>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v245-c != ''">
            <marc:subfield code="c">
              <xslt:value-of select="$v245-c" />
            </marc:subfield>
          </xslt:if>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (245).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="                       bf:*[local-name()='Instance' or local-name()='Work']/bf:title/bf:*[(                         local-name()='VariantTitle' or                         local-name()='ParallelTitle' or                         local-name()='TranscribedTitle' or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                       ) and                          not(bf:variantType = 'translated') and                         not(bf:variantType = 'former') and                         bf:mainTitle]                       |                       bf:Instance/bf:hasItem/bf:Item/bf:title/bf:*[                         bflc:applicableInstitution/*/bf:code='DLC' and                          (                         local-name()='VariantTitle' or                         local-name()='ParallelTitle' or                         local-name()='TranscribedTitle' or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                         rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                       ) and                        not(bf:variantType = 'translated') and                       not(bf:variantType = 'former') and                       bf:mainTitle]                     " mode="generate-246">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">246</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='ParallelTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'portion'">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'distinctive'">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'cover'">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'added title page'">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'caption'">
              <xslt:text>6</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'running'">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="bf:variantType = 'spine'">
              <xslt:text>8</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="i">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 246 $i.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 246 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:subtitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 246 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="f">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 246 $f.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:partName">
        <marc:subfield code="p">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="5">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 246 $5.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="//bf:title/*[(                       local-name()='VariantTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']                     ) and                     bf:variantType = 'former']" mode="generate-247">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">247</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:variable name="v247-a">
        <xslt:choose>
          <xslt:when test="bf:mainTitle">
            <xslt:for-each select="bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="rdfs:label">
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v247-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v247-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:subtitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="f">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $f.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:qualifier">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="g">
              <xsl:value-of select="concat('(',.,')')" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $g.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:partName">
        <marc:subfield code="p">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']]/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="x">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 247 $x.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:scale[not(bf:Scale)]" mode="generate-255">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">255</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:scale/bf:Scale/bf:note/bf:Note/rdfs:label" mode="generate-255">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">255</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:value-of select="." />
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:cartographicAttributes/bf:Cartographic[bf:projection or                     bf:coordinates or                     bf:ascensionAndDeclination or                     bf:equinox or                     bf:outerGRing or                     bf:exclusionGRing]" mode="generate-255">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">255</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:projection/bf:Projection/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:coordinates">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:ascensionAndDeclination">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="d">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $d.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:equinox">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="e">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $e.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:outerGRing">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="f">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $f.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:exclusionGRing">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="g">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 255 $g.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:originPlace/bf:Place" mode="generate-257">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">257</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source">
        <marc:subfield code="2">
          <xslt:variable name="vUri">
            <xslt:choose>
              <xslt:when test="@rdf:resource">
                <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="*/@rdf:about">
                <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:variable name="vSourceCode">
            <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:with-param name="pUri" select="$vUri" />
            </xsl:call-template>
          </xslt:variable>
          <xslt:choose>
            <xslt:when test="$vSourceCode != ''">
              <xsl:value-of select="$vSourceCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:otherwise>
              <xsl:value-of select="*/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bflc:projectedProvisionDate" mode="generate-263">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:datafield>
          <xslt:attribute name="tag">263</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <marc:subfield code="a">
            <xslt:value-of select="." />
          </marc:subfield>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (263).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:copyrightDate[. != '']" mode="generate-264">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="cDate">
      <xslt:choose>
        <xslt:when test="contains(., '©') or contains(., '℗')">
          <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="../bf:media//@rdf:*[.='http://id.loc.gov/vocabulary/mediaTypes/s'] and                       (                         ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/se'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/st'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sw'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sq'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sb'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sd'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sz'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/ss'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sg'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/si'] or                          ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/cr']                       )">
          <xsl:value-of select="concat('℗', text())" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:otherwise>
          <xsl:value-of select="concat('©', text())" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:choose>
      <xslt:when test="position() = 1">
        <marc:datafield>
          <xslt:attribute name="tag">264</xslt:attribute>
          <xslt:attribute name="ind1">
            <xslt:text> </xslt:text>
          </xslt:attribute>
          <xslt:attribute name="ind2">
            <xslt:text>4</xslt:text>
          </xslt:attribute>
          <xslt:variable name="v264-c">
            <xsl:value-of select="$cDate" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v264-c != ''">
            <marc:subfield code="c">
              <xslt:value-of select="$v264-c" />
            </marc:subfield>
          </xslt:if>
        </marc:datafield>
      </xslt:when>
      <xslt:otherwise>
        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target field (264).</xslt:message>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:extent/bf:Extent" mode="generate-300">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">300</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v300-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 300 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label[. != 'all']">
            <xslt:for-each select="bflc:appliesTo[1]/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 300 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v300-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v300-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="../../bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='physical details' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/physical']/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 300 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="../../bf:dimensions">
        <marc:subfield code="c">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="../../bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='accompanying material' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/accmat']/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="e">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 300 $e.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:frequency/bf:Frequency[rdfs:label or bf:date]" mode="generate-vFreqTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vFreqTag">
      <xslt:choose>
        <xslt:when test="bf:status//@rdf:*[1] = 'http://id.loc.gov/vocabulary/mstatus/former'">
          <xslt:text>321</xslt:text>
        </xslt:when>
        <xslt:when test="translate(bf:note/bf:Note/rdfs:label,$upper,$lower)='former frequency'">
          <xslt:text>321</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>310</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vFreqTag" />
      </xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vFreqTag $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vFreqTag $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vFreqTag $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance[not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance'])]/bf:issuance" mode="generate-334">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">334</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v334-a">
        <xslt:choose>
          <xslt:when test="bf:*/madsrdf:authoritativeLabel">
            <xslt:for-each select="bf:*/madsrdf:authoritativeLabel">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 334 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="bf:*/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 334 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v334-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v334-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="bf:*/*[local-name()='code']">
          <xslt:variable name="v334-b">
            <xsl:value-of select="bf:*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v334-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v334-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="@rdf:resource or bf:*/@rdf:about">
          <xslt:variable name="v334-b">
            <xslt:choose>
              <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="@rdf:resource" />
                </xsl:call-template>
              </xslt:when>
              <xslt:when test="contains(bf:*/@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="bf:*/@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="bf:*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v334-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v334-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:resource">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:*/@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:*/bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:*/bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 334 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:content/*[local-name()='Content' or                                                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Content'] or                                                  local-name()='Authority' or                                                  rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-336">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">336</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v336-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 336 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 336 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v336-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v336-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:variable name="v336-a">
        <xslt:choose>
          <xslt:when test="madsrdf:authoritativeLabel">
            <xslt:for-each select="madsrdf:authoritativeLabel">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 336 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 336 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v336-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v336-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="*[local-name()='code']">
          <xslt:variable name="v336-b">
            <xsl:value-of select="*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v336-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v336-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="@rdf:about">
          <xslt:variable name="v336-b">
            <xslt:choose>
              <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v336-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v336-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 336 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:media/*[local-name()='Media' or                                                    rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Media'] or                                                    local-name()='Authority' or                                                    rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-337">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">337</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v337-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 337 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 337 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v337-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v337-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:variable name="v337-a">
        <xslt:choose>
          <xslt:when test="madsrdf:authoritativeLabel">
            <xslt:for-each select="madsrdf:authoritativeLabel">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 337 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 337 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v337-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v337-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="*[local-name()='code']">
          <xslt:variable name="v337-b">
            <xsl:value-of select="*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v337-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v337-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="@rdf:about">
          <xslt:variable name="v337-b">
            <xslt:choose>
              <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v337-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v337-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 337 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:carrier/*[local-name()='Carrier' or                                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Carrier'] or                                                      local-name()='Authority' or                                                      rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-338">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">338</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v338-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 338 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 338 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v338-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v338-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:variable name="v338-a">
        <xslt:choose>
          <xslt:when test="madsrdf:authoritativeLabel">
            <xslt:for-each select="madsrdf:authoritativeLabel">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 338 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:for-each select="rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 338 $a.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v338-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v338-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="*[local-name()='code']">
          <xslt:variable name="v338-b">
            <xsl:value-of select="*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v338-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v338-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="@rdf:about">
          <xslt:variable name="v338-b">
            <xslt:choose>
              <xslt:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v338-b != ''">
            <marc:subfield code="b">
              <xslt:value-of select="$v338-b" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 338 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:baseMaterial/bf:BaseMaterial |                     bf:Instance/bf:appliedMaterial/bf:AppliedMaterial |                     bf:Instance/bf:productionMethod/bf:ProductionMethod |                     bf:Instance/bf:mount/bf:Mount |                     bf:Instance/bf:reductionRatio/bf:ReductionRatio |                     bf:Work/bf:colorContent/bf:ColorContent |                     bf:Instance/bf:generation/bf:Generation |                     bf:Instance/bf:layout/bf:Layout |                     bf:Instance/bf:bookFormat/bf:BookFormat |                     bf:Instance/bf:fontSize/bf:FontSize |                     bf:Instance/bf:polarity/bf:Polarity |                     bf:Instance/bf:binding/bf:Binding |                     bf:Work/bf:illustrativeContent/bf:Illustration" mode="generate-340">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">340</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v340-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 340 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 340 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v340-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v340-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="local-name()='BaseMaterial'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='AppliedMaterial'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='ProductionMethod'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Mount'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='ReductionRatio'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="q">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='ColorContent'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Generation'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="j">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Layout'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="k">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Binding'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="l">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='BookFormat'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="m">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='FontSize'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="n">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Polarity'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="o">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Illustration'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="p">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="local-name()='ReductionRatio'">
          <xslt:for-each select="rdf:value">
            <marc:subfield code="f">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 340 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:soundCharacteristic/bf:RecordingMethod |                     bf:Instance/bf:soundCharacteristic/bf:RecordingMedium |                     bf:Instance/bf:soundCharacteristic/bf:PlayingSpeed |                     bf:Instance/bf:soundCharacteristic/bf:GrooveCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:TrackConfig |                     bf:Instance/bf:soundCharacteristic/bf:TapeConfig |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackChannels |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:CaptureStorage |                     bf:Instance/bf:soundCharacteristic/bflc:CaptureStorage |                     bf:Work/bf:soundContent/bf:SoundContent" mode="generate-344">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">344</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v344-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 344 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 344 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v344-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v344-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="local-name()='RecordingMethod'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='RecordingMedium'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='PlayingSpeed'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='GrooveCharacteristic'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='TrackConfig'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='TapeConfig'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="f">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='PlaybackChannels'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='PlaybackCharacteristic'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="h">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='SoundContent'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="i">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='CaptureStorage'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="j">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 344 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:projectionCharacteristic/bf:PresentationFormat |                     bf:Instance/bf:projectionCharacteristic/bf:ProjectionSpeed" mode="generate-345">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">345</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v345-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v345-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v345-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="local-name()='PresentationFormat'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='ProjectionSpeed'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:aspectRatio/bf:AspectRatio[rdfs:label|rdf:value]" mode="generate-345">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">345</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v345-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v345-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v345-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="rdf:value">
        <marc:subfield code="c">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="d">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 345 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:videoCharacteristic/bf:VideoFormat |                     bf:Instance/bf:videoCharacteristic/bf:BroadcastStandard" mode="generate-346">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">346</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v346-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 346 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 346 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v346-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v346-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="local-name()='VideoFormat'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='BroadcastStandard'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 346 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:digitalCharacteristic/bf:FileType |                     bf:Instance/bf:digitalCharacteristic/bf:EncodingFormat |                     bf:Instance/bf:digitalCharacteristic/bf:FileSize |                     bf:Instance/bf:digitalCharacteristic/bf:Resolution |                     bf:Instance/bf:digitalCharacteristic/bf:RegionalEncoding |                     bf:Instance/bf:digitalCharacteristic/bf:EncodedBitrate" mode="generate-347">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">347</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v347-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 347 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 347 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v347-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v347-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="local-name()='FileType'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='EncodingFormat'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='FileSize'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='Resolution'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='RegionalEncoding'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='EncodedBitrate'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="f">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 347 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:musicFormat/bf:MusicFormat | bf:Work/bf:notation/bf:MusicNotation |                     bf:Instance/bf:musicFormat/bf:MusicFormat | bf:Instance/bf:notation/bf:MusicNotation" mode="generate-348">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">348</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v348-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 348 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 348 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v348-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v348-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="../bf:MusicFormat/rdfs:label">
        <marc:subfield code="a">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="../bf:MusicNotation/rdfs:label">
        <marc:subfield code="c">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 348 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:collectionArrangement/bf:CollectionArrangement" mode="generate-351">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">351</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v351-3">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="ancestor::bf:Instance[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance']/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 351 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 351 $3.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v351-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v351-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:hierarchicalLevel">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 351 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:collectionOrganization">
        <marc:subfield code="a">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:pattern">
        <marc:subfield code="b">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:digitalCharacteristic/bf:CartographicDataType |                     bf:Instance/bf:digitalCharacteristic/bf:CartographicObjectType" mode="generate-352">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">352</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="local-name()='CartographicDataType'">
          <xslt:for-each select="rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 352 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name()='CartographicObjectType'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:count">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[@rdf:about]" mode="generate-353">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">353</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:variable name="v353-b">
        <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:with-param name="pUri" select="@rdf:about" />
        </xsl:call-template>
      </xslt:variable>
      <xslt:if test="$v353-b != ''">
        <marc:subfield code="b">
          <xslt:value-of select="$v353-b" />
        </marc:subfield>
      </xslt:if>
      <xslt:variable name="v353-0">
        <xslt:choose>
          <xslt:when test="@rdf:about">
            <xslt:for-each select="@rdf:about">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:value-of select="." />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 353 $0.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v353-0 != ''">
        <marc:subfield code="0">
          <xslt:value-of select="$v353-0" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:firstIssue" mode="generate-362">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">362</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v362-a">
        <xsl:variable name="vPosition" select="position()" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        <xsl:variable name="vLastIssue" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:for-each select="../bf:lastIssue">
            <xsl:if test="position() = $vPosition">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="." />
              </xsl:call-template>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:with-param name="pString" select="concat(.,'-',$vLastIssue)" />
        </xsl:call-template>
      </xslt:variable>
      <xslt:if test="$v362-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v362-a" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:originPlace/bf:Place" mode="generate-370">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">370</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="madsrdf:authoritiveLabel">
          <xslt:variable name="v370-g">
            <xsl:value-of select="madsrdf:authoritativeLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v370-g != ''">
            <marc:subfield code="g">
              <xslt:value-of select="$v370-g" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 370 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:musicMedium/bf:MusicMedium[bflc:readMarc382]" mode="generate-382">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v382data">
      <xslt:choose>
        <xslt:when test="starts-with(bflc:readMarc382, '$')">
          <xsl:value-of select="concat('382  ', bflc:readMarc382)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:otherwise>
          <xsl:value-of select="bflc:readMarc382" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">382</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/part' or                       bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/part' or                       translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='partial'">
              <xslt:text>1</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 382 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xsl:call-template name="tReadMarc382" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pString" select="substring($v382data, 6)" />
      </xsl:call-template>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:musicKey" mode="generate-384">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">384</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bflc:creatorCharacteristic" mode="generate-386">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="*/bf:source/@rdf:resource">
          <xsl:value-of select="*/bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="*/bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bflc:CreatorCharacteristic/rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">386</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:CreatorCharacteristic/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 386 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bflc:CreatorCharacteristic/bflc:demographicGroup/bflc:DemographicGroup/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="m">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 386 $m.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bflc:CreatorCharacteristic/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="n">
              <xslt:variable name="vDGUri">
                <xslt:choose>
                  <xslt:when test="@rdf:resource">
                    <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="*/@rdf:about">
                    <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="contains($vDGUri,'id.loc.gov')">
                  <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="$vDGUri" />
                  </xsl:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 386 $n.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bflc:CreatorCharacteristic/rdfs:label">
        <marc:subfield code="a">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="*/bf:source/bf:Source/*[local-name()='code']">
          <xslt:variable name="v386-2">
            <xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v386-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v386-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="$vSourceUri != ''">
          <xslt:variable name="v386-2">
            <xslt:choose>
              <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="$vSourceUri" />
                </xsl:call-template>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v386-2 != ''">
            <marc:subfield code="2">
              <xslt:value-of select="$v386-2" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:resource|bflc:CreatorCharacteristic/@rdf:about">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:dissertation/bf:Dissertation" mode="generate-502">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">502</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 502 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:degree">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 502 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:grantingInstitution/*/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 502 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 502 $d.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/*/rdfs:label">
        <marc:subfield code="g">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*/rdf:value">
        <marc:subfield code="o">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label[. != ''] and not(@rdf:about)]  |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label[. != ''] and not(@rdf:about)]       " mode="generate-504">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">504</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 504 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:count">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 504 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:tableOfContents/bf:TableOfContents[rdfs:label]" mode="generate-505">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">505</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 505 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:credits[not(starts-with(text(),'Cast:'))]" mode="generate-508">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">508</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bflc:indexedIn/bf:Work |                     bf:Work/bf:references/bf:Work" mode="generate-510">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="bf:title/*/bf:mainTitle/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">510</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name(..)='indexedIn' and bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='coverage' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/coverage']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(..)='references' and bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='location' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/loc']">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(..)='references'">
              <xslt:text>3</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:title/*/bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 510 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='coverage' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/coverage']/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 510 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='location' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/loc']/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 510 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="x">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 510 $x.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:credits[starts-with(text(),'Cast:')]" mode="generate-511">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">511</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>1</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v511-a">
        <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:with-param name="pString" select="substring-after(.,'Cast:')" />
        </xsl:call-template>
      </xslt:variable>
      <xslt:if test="$v511-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v511-a" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:capture/bf:Capture[not(bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf']) and not(bf:place/@rdf:resource)]" mode="generate-518">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">518</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 518 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="o">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 518 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:date">
        <marc:subfield code="d">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:place/*/rdfs:label">
        <marc:subfield code="p">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:summary/bf:Summary[rdfs:label]" mode="generate-520">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">520</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 520 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 520 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:geographicCoverage/*[               not(                 bf:source/@rdf:resource='http://id.loc.gov/authorities/classification/G' or                  bf:source/bf:Source/@rdf:about='http://id.loc.gov/authorities/classification/G'               ) and not(@rdf:about) and rdfs:label]" mode="generate-522">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">522</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 522 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:preferredCitation" mode="generate-524">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">524</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:contentAccessibility/bf:ContentAccessibility/rdfs:label" mode="generate-532">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">532</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>8</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 532 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))] |                     //bf:Item/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))]" mode="generate-538">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">538</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 538 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 538 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="//bf:Item/bf:immediateAcquisition/bf:ImmediateAcquisition[rdfs:label[. != '']]" mode="generate-541">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">541</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 541 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 541 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:note/bf:Note[rdf:type/@rdf:resource = 'http://id.loc.gov/vocabulary/mnotetype/lang' and rdfs:label]" mode="generate-546">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">546</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 546 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 546 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:notation/bf:Notation" mode="generate-546">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">546</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 546 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <marc:subfield code="b">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:custodialHistory|//bf:Item/bf:custodialHistory" mode="generate-561">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">561</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
      <xslt:choose>
        <xslt:when test="local-name(parent::node()) = 'Item'">
          <xslt:variable name="v561-5">
            <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v561-5 != ''">
            <marc:subfield code="5">
              <xslt:value-of select="$v561-5" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="     //bf:Item/bf:note/*[bf:noteType='binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding'] |     bf:Instance/bf:note/*[bf:noteType='binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding'] " mode="generate-563">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">563</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 563 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="local-name(parent::node()/..) = 'Item'">
          <xslt:variable name="v563-5">
            <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v563-5 != ''">
            <marc:subfield code="5">
              <xslt:value-of select="$v563-5" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="bflc:applicableInstitution">
          <xslt:variable name="vAppOrg">
            <xslt:choose>
              <xslt:when test="bflc:applicableInstitution/@rdf:resource">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="bflc:applicableInstitution/@rdf:resource" />
                </xsl:call-template>
              </xslt:when>
              <xslt:when test="bflc:applicableInstitution/*/@rdf:about">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="bflc:applicableInstitution/*/@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:when test="bflc:applicableInstitution/*/*[local-name()='code']">
                <xsl:value-of select="bflc:applicableInstitution/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:variable name="v563-5">
            <xsl:value-of select="$vAppOrg" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v563-5 != ''">
            <marc:subfield code="5">
              <xslt:value-of select="$v563-5" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       //bf:Item/bf:note/*[bf:noteType='action' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action'] |       bf:Instance/bf:note/*[bf:noteType='action' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action'] " mode="generate-583">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">583</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 583 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:variable name="v583-a">
        <xsl:variable name="vLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
            <xsl:value-of select="concat(.,' ')" />
          </xsl:for-each>
        </xsl:variable>
        <xsl:call-template name="tChopPunct" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:with-param name="pString" select="$vLabel" />
        </xsl:call-template>
      </xslt:variable>
      <xslt:if test="$v583-a != ''">
        <marc:subfield code="a">
          <xslt:value-of select="$v583-a" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:date">
        <marc:subfield code="c">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:agent/*/rdfs:label">
        <marc:subfield code="k">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:status/*/rdfs:label">
        <marc:subfield code="l">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:electronicLocator/@rdf:resource|rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="z">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 583 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="local-name(parent::node()/..) = 'Item'">
          <xslt:variable name="v583-5">
            <xsl:value-of select="$pConversionAgency" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v583-5 != ''">
            <marc:subfield code="5">
              <xslt:value-of select="$v583-5" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="bflc:applicableInstitution">
          <xslt:variable name="vAppOrg">
            <xslt:choose>
              <xslt:when test="bflc:applicableInstitution/@rdf:resource">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="bflc:applicableInstitution/@rdf:resource" />
                </xsl:call-template>
              </xslt:when>
              <xslt:when test="bflc:applicableInstitution/*/@rdf:about">
                <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:with-param name="pUri" select="bflc:applicableInstitution/*/@rdf:about" />
                </xsl:call-template>
              </xslt:when>
              <xslt:when test="bflc:applicableInstitution/*/*[local-name()='code']">
                <xsl:value-of select="bflc:applicableInstitution/*/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:variable name="v583-5">
            <xsl:value-of select="$vAppOrg" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$v583-5 != ''">
            <marc:subfield code="5">
              <xslt:value-of select="$v583-5" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:awards" mode="generate-586">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="./@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">586</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>8</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <marc:subfield code="a">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="." />
        </xslt:call-template>
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:note/bf:Note[rdf:type/@rdf:resource = 'http://id.loc.gov/vocabulary/mnotetype/award']" mode="generate-586">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">586</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>8</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 586 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 586 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:subject/*[bflc:marcKey or marc:record] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:subject/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:subject[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:subject/*[contains(@rdf:about, 'id.worldcat.org/fast/')]       " mode="generate-vSubjectTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:resource,'id.') and contains(@rdf:resource, 'rwo/agents')">
          <xsl:value-of select="concat(substring-before(@rdf:resource,'rwo/agents'), 'authorities/names/', substring-after(@rdf:resource,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.') and contains(@rdf:about, 'rwo/agents')">
          <xsl:value-of select="concat(substring-before(@rdf:about,'rwo/agents'), 'authorities/names/', substring-after(@rdf:about,'rwo/agents/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vSubjectTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
              <xslt:text>600</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
              <xslt:text>610</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
              <xslt:text>611</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
              <xslt:text>630</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='150']">
              <xslt:text>650</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
              <xslt:text>651</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vSubjectTag='600'">
          <xslt:text>abcdfghjklmnopqrst</xslt:text>
        </xslt:when>
        <xslt:when test="$vSubjectTag='610'">
          <xslt:text>abcdfghklmnopqrst</xslt:text>
        </xslt:when>
        <xslt:when test="$vSubjectTag='611'">
          <xslt:text>acdefghklmnpqst</xslt:text>
        </xslt:when>
        <xslt:when test="$vSubjectTag='630'">
          <xslt:text>adfghklmnoprs</xslt:text>
        </xslt:when>
        <xslt:when test="$vSubjectTag='650'">
          <xslt:text>a</xslt:text>
        </xslt:when>
        <xslt:when test="$vSubjectTag='651'">
          <xslt:text>a</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vSubjectTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vSubjectTag = '630' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 != ' '">
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:when test="$vSubjectTag = '630' and ($vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = '' or $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2 = ' ')">
              <xsl:value-of select="'0'" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSubjectTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/childrensSubjects/')">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/mesh/')">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/nalt/')">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or                        contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or                        contains($relURI, '/fast/') or                       contains($relURI, 'd-nb.info/gnd/')">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or                        bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
              <xslt:text>6</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:value-of select="." />
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:value-of select="." />
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:value-of select="." />
        </marc:subfield>
      </xsl:for-each>
      <xslt:variable name="vvSubjectTag-2">
        <xslt:choose>
          <xslt:when test="contains($relURI, '/genreForms/')">
            <xslt:text>lcgft</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
            <xslt:text>lcdgt</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/graphicMaterials/')">
            <xslt:text>lctgm</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/fast/')">
            <xslt:text>fast</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
            <xslt:text>gnd</xslt:text>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$vvSubjectTag-2 != ''">
        <marc:subfield code="2">
          <xslt:value-of select="$vvSubjectTag-2" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('tvxyz',@code)])">
          <xslt:choose>
            <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
              <xslt:variable name="vvSubjectTag-1">
                <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvSubjectTag-1" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
            <xslt:when test="$relURI != '' and                          ( contains($relURI, 'd-nb.info/gnd/') or contains($relURI, 'isni.org/isni/') )">
              <xslt:variable name="vvSubjectTag-1">
                <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvSubjectTag-1" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
            <xslt:when test="$relURI != '' and                ( contains($relURI, 'http://id.worldcat.org/fast/') )">
              <xslt:variable name="vvSubjectTag-0">
                <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$vvSubjectTag-0" />
                </marc:subfield>
              </xslt:if>
              <xslt:variable name="vvSubjectTag-0">
                <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadLeft">
                    <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                    <xsl:with-param name="pPadChar" select="'0'" />
                    <xsl:with-param name="pStringLength" select="'8'" />
                  </xsl:call-template>
                </xsl:variable>
                <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$vvSubjectTag-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="($vSubjectTag = '600' or $vSubjectTag = '610' or $vSubjectTag = '611') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]) and                      $vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('t',@code)]">
          <xslt:choose>
            <xslt:when test="$relURI != '' and contains($relURI, 'resources/hubs')">
              <xslt:variable name="vvSubjectTag-1">
                <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvSubjectTag-1" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
          <xslt:variable name="vvSubjectTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvSubjectTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvSubjectTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="$vSubjectTag = '630' and contains($relURI, 'resources/hubs')">
          <xslt:variable name="vvSubjectTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvSubjectTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvSubjectTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="($vSubjectTag = '651' or $vSubjectTag = '662') and                      not($vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)])">
          <xslt:choose>
            <xslt:when test="$relURI != '' and contains($relURI, 'authorities/names')">
              <xslt:variable name="vvSubjectTag-1">
                <xsl:value-of select="concat(substring-before($relURI,'authorities/names/'), 'rwo/agents/', substring-after($relURI,'authorities/names/'))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvSubjectTag-1" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
            <xslt:when test="$relURI != ''">
              <xslt:variable name="vvSubjectTag-1">
                <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-1 != ''">
                <marc:subfield code="1">
                  <xslt:value-of select="$vvSubjectTag-1" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
        <xslt:when test="$relURI != ''">
          <xslt:variable name="vvSubjectTag-0">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvSubjectTag-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$vvSubjectTag-0" />
            </marc:subfield>
          </xslt:if>
          <xslt:choose>
            <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
              <xslt:variable name="vvSubjectTag-0">
                <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadLeft">
                    <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                    <xsl:with-param name="pPadChar" select="'0'" />
                    <xsl:with-param name="pStringLength" select="'8'" />
                  </xsl:call-template>
                </xsl:variable>
                <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvSubjectTag-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$vvSubjectTag-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:genreForm/*[bflc:marcKey or marc:record] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'd-nb.info/gnd/') and not(contains(@rdf:resource, '#'))] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'd-nb.info/gnd/') and not(contains(@rdf:about, '#'))] |       bf:Work/bf:genreForm[contains(@rdf:resource, 'id.worldcat.org/fast/')] |       bf:Work/bf:genreForm/*[contains(@rdf:about, 'id.worldcat.org/fast/')] |       //bf:Item/bf:genreForm[contains(@rdf:resource, 'id.loc.gov') and not(contains(@rdf:resource, '/vocabulary/')) and not(contains(@rdf:resource, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[contains(@rdf:about, 'id.loc.gov') and not(contains(@rdf:about, '/vocabulary/')) and not(contains(@rdf:about, 'REPLACE'))] |       //bf:Item/bf:genreForm/*[bflc:marcKey or marc:record]        " mode="generate-vGenreTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:resource,'id.loc') and not(contains(@rdf:resource, 'REPLACE'))">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc') and not(contains(@rdf:about, 'REPLACE'))">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'d-nb.info/gnd/') and not(contains(@rdf:resource, '#'))">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/') and not(contains(@rdf:about, '#'))">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:resource,'id.worldcat.org/fast/')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.worldcat.org/fast/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vGenreTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="(self::bf:genreForm or ancestor::bf:genreForm) and contains($relURI, 'd-nb.info/gnd/')">
              <xslt:text>655</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='155']">
              <xslt:text>655</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vGenreTag='655'">
          <xslt:text>a</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vGenreTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vGenreTag = '630'">
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind2">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vGenreTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="contains($relURI, '/subjects/') or contains($relURI, '/names/')">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/childrensSubjects/')">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/mesh/')">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/nalt/')">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="contains($relURI, '/names/') or contains($relURI, '/genreForms/') or              contains($relURI, '/demographicTerms/') or contains($relURI, '/graphicMaterials/') or              contains($relURI, '/fast/') or             contains($relURI, 'd-nb.info/gnd/')">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects']">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects'] or              bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects']">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal']">
              <xslt:text>3</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash']">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm']">
              <xslt:text>6</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:value-of select="." />
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains('vxyz',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:value-of select="." />
        </marc:subfield>
      </xsl:for-each>
      <xslt:variable name="vvGenreTag-2">
        <xslt:choose>
          <xslt:when test="contains($relURI, '/genreForms/')">
            <xslt:text>lcgft</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/demogrpahicTerms/')">
            <xslt:text>lcdgt</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/graphicMaterials/')">
            <xslt:text>lctgm</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, '/fast/')">
            <xslt:text>fast</xslt:text>
          </xslt:when>
          <xslt:when test="contains($relURI, 'd-nb.info/gnd/')">
            <xslt:text>gnd</xslt:text>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$vvGenreTag-2 != ''">
        <marc:subfield code="2">
          <xslt:value-of select="$vvGenreTag-2" />
        </marc:subfield>
      </xslt:if>
      <xslt:choose>
        <xslt:when test="$relURI != ''">
          <xslt:variable name="vvGenreTag-0">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvGenreTag-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$vvGenreTag-0" />
            </marc:subfield>
          </xslt:if>
          <xslt:choose>
            <xslt:when test="contains($relURI, 'id.worldcat.org/fast')">
              <xslt:variable name="vvGenreTag-0">
                <xsl:variable name="vFastID" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tPadLeft">
                    <xsl:with-param name="pInput" select="substring-after($relURI,'http://id.worldcat.org/fast/')" />
                    <xsl:with-param name="pPadChar" select="'0'" />
                    <xsl:with-param name="pStringLength" select="'8'" />
                  </xsl:call-template>
                </xsl:variable>
                <xsl:value-of select="concat('(OCoLC)fst', $vFastID)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:variable>
              <xslt:if test="$vvGenreTag-0 != ''">
                <marc:subfield code="0">
                  <xslt:value-of select="$vvGenreTag-0" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ] |                      //bf:Item/bf:genreForm[                       not(@rdf:resource) and                        (                         not(contains(bf:*/@rdf:about, '/authorities/')) and                          (*/rdfs:label or */madsrdf:authoritativeLabel)                       ) and                       not(*/marc:record) and not(*/bflc:marcKey)                     ]" mode="generate-655">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vInd2Val">
      <xslt:choose>
        <xslt:when test="*/bf:source/bf:Source/bf:code='lcsh' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
          <xslt:text>0</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/bf:code='lcshac' or             */madsrdf:isMemberOfMADSScheme[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
          <xslt:text>1</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/bf:code='mesh' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
          <xslt:text>2</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/bf:code='nal' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or             */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
          <xslt:text>3</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/bf:code='cash' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
          <xslt:text>5</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source/bf:Source/bf:code='rvm' or             */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or             */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
          <xslt:text>6</xslt:text>
        </xslt:when>
        <xslt:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
          <xslt:text>7</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vSf2val">
      <xslt:choose>
        <xslt:when test="$vInd2Val = '7'">
          <xslt:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
            <xslt:variable name="vSourceUri">
              <xslt:choose>
                <xslt:when test="@rdf:resource">
                  <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:when test="*/@rdf:about">
                  <xsl:value-of select="*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:choose>
              <xslt:when test="bf:Source/bf:code">
                <xsl:value-of select="bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$vSourceUri != ''">
                <xslt:choose>
                  <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vSourceUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
              <xslt:otherwise>
                <xsl:value-of select="bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="*/rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">655</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vInd2Val != ''">
              <xsl:value-of select="$vInd2Val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>4</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="*/madsrdf:componentList">
          <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="3">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:variable name="v655-a">
            <xslt:choose>
              <xslt:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                <xslt:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:otherwise>
                <xslt:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v655-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v655-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:for-each select="*/madsrdf:componentList/*">
            <xslt:choose>
              <xslt:when test="position() &gt; 1">
                <xslt:choose>
                  <xslt:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                    <xslt:variable name="v655-v">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $v.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v655-v != ''">
                      <marc:subfield code="v">
                        <xslt:value-of select="$v655-v" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                    <xslt:variable name="v655-y">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $y.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v655-y != ''">
                      <marc:subfield code="y">
                        <xslt:value-of select="$v655-y" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                    <xslt:variable name="v655-z">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $z.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v655-z != ''">
                      <marc:subfield code="z">
                        <xslt:value-of select="$v655-z" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:variable name="v655-x">
                      <xslt:choose>
                        <xslt:when test="madsrdf:authoritativeLabel">
                          <xslt:for-each select="madsrdf:authoritativeLabel">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:for-each select="rdfs:label">
                            <xslt:choose>
                              <xslt:when test="position() = 1">
                                <xslt:call-template name="tChopPunct">
                                  <xslt:with-param name="pString" select="." />
                                </xslt:call-template>
                              </xslt:when>
                              <xslt:otherwise>
                                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $x.</xslt:message>
                              </xslt:otherwise>
                            </xslt:choose>
                          </xslt:for-each>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:variable>
                    <xslt:if test="$v655-x != ''">
                      <marc:subfield code="x">
                        <xslt:value-of select="$v655-x" />
                      </marc:subfield>
                    </xslt:if>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="*/madsrdf:authoritativeLabel or */rdfs:label">
          <xslt:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="3">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $3.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:variable name="v655-a">
            <xslt:choose>
              <xslt:when test="*/madsrdf:authoritativeLabel">
                <xslt:for-each select="*/madsrdf:authoritativeLabel[1]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:when>
              <xslt:otherwise>
                <xslt:for-each select="*/rdfs:label[1]">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $a.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$v655-a != ''">
            <marc:subfield code="a">
              <xslt:value-of select="$v655-a" />
            </marc:subfield>
          </xslt:if>
          <xslt:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="*/bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:variable name="v655-2">
        <xslt:choose>
          <xslt:when test="$vSf2val != ''">
            <xsl:value-of select="$vSf2val" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v655-2 != ''">
        <marc:subfield code="2">
          <xslt:value-of select="$v655-2" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="*/bflc:applicableInstitution/*/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="5">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 655 $5.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent[contains(@rdf:resource, 'id.loc.gov/authorities/') or contains(@rdf:resource, 'id.loc.gov/rwo/')] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/bf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/madsrdf:*[(contains(@rdf:about, 'id.loc.gov/authorities/') or contains(@rdf:about, 'id.loc.gov/rwo/')) and not(bflc:marcKey)]       " mode="generate-vAddedEntryNameLookupTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:resource,'id.loc.gov')">
          <xsl:value-of select="@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.loc.gov')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vAddedEntryNameLookupTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
              <xslt:text>700</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
              <xslt:text>710</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
              <xslt:text>711</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
              <xslt:text>710</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vAddedEntryNameLookupTag='700'">
          <xslt:text>abcdgjq</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddedEntryNameLookupTag='710'">
          <xslt:text>abcdgn</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddedEntryNameLookupTag='711'">
          <xslt:text>acdegnq</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vAddedEntryNameLookupTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <xslt:value-of select="." />
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameLookupTag.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
          <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="@code" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="             ancestor::node()/bf:role/bf:Role/rdfs:label[.!='Contributor']|             ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel[.!='Contributor']">
        <marc:subfield code="e">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="           ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] |            ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
        <xslt:variable name="vRelationURI">
          <xslt:choose>
            <xslt:when test="contains(.,'id.loc.gov/')">
              <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vRelationLabel">
          <xslt:choose>
            <xslt:when test="$vRelationURI != ''">
              <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="$vRelationURI" />
              </xsl:call-template>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vvAddedEntryNameLookupTag-e" />
        <xslt:if test="$vvAddedEntryNameLookupTag-e != ''">
          <marc:subfield code="e">
            <xslt:value-of select="$vvAddedEntryNameLookupTag-e" />
          </marc:subfield>
        </xslt:if>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'rwo'))">
          <xslt:variable name="vvAddedEntryNameLookupTag-0">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvAddedEntryNameLookupTag-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$vvAddedEntryNameLookupTag-0" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="not(contains($relURI,'example.org')) and not(contains($relURI,'REPLACE')) and not(contains($relURI,'authorities'))">
          <xslt:variable name="vvAddedEntryNameLookupTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvAddedEntryNameLookupTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvAddedEntryNameLookupTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record] |       //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[bflc:marcKey or marc:record]       " mode="generate-vAddedEntryNameMarcKeyTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:about,'id.loc.gov')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'isni.org/isni/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'viaf.org/viaf/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'id.oclc.org/worldcat/entity/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="contains(@rdf:about,'d-nb.info/gnd/')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vAddedEntryNameMarcKeyTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
              <xslt:text>700</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
              <xslt:text>710</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
              <xslt:text>711</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='151']">
              <xslt:text>710</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vAddedEntryNameMarcKeyTag='700'">
          <xslt:text>abcdgjq</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
          <xslt:text>abcdgn</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddedEntryNameMarcKeyTag='711'">
          <xslt:text>acdegnq</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vAddedEntryNameMarcKeyTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ''">
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddedEntryNameMarcKeyTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:when test="$vAddedEntryNameMarcKeyTag='710'">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:otherwise>
              <xsl:value-of select="' '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
          <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="@code" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="ancestor::node()/bf:role/bf:Role[rdfs:label[.!='Contributor'] or madsrdf:authoritativeLabel[.!='Contributor']]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role/rdfs:label|ancestor::node()/bf:role/bf:Role/madsrdf:authoritativeLabel">
            <xslt:variable name="vvAddedEntryNameMarcKeyTag-e">
              <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
              <marc:subfield code="e">
                <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
              </marc:subfield>
            </xslt:if>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
            <xslt:variable name="vRelationURI">
              <xslt:choose>
                <xslt:when test="contains(.,'id.loc.gov/')">
                  <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vRelationLabel">
              <xslt:choose>
                <xslt:when test="$vRelationURI != ''">
                  <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:with-param name="pUri" select="$vRelationURI" />
                  </xsl:call-template>
                </xslt:when>
              </xslt:choose>
            </xslt:variable>
            <xslt:variable name="vvAddedEntryNameMarcKeyTag-e" />
            <xslt:if test="$vvAddedEntryNameMarcKeyTag-e != ''">
              <marc:subfield code="e">
                <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-e" />
              </marc:subfield>
            </xslt:if>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="ancestor::node()/bf:role/bf:Role/@rdf:about[not(contains(., 'relators/ctb'))] or ancestor::node()/bf:role/@rdf:resource[not(contains(., 'relators/ctb'))]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role/@rdf:about | ancestor::node()/bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="ancestor::node()/bf:role/bf:Role[bf:code[.!='ctb'] or madsrdf:code[.!='ctb']]">
          <xslt:for-each select="ancestor::node()/bf:role/bf:Role/*[local-name() = 'code']">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'rwo')) and                      not(contains($relURI,'id.oclc.org/worldcat/entity/')) and                      not(contains($relURI,'isni.org/isni/')) and                      not(contains($relURI,'viaf.org/viaf/')) and                      not(contains($relURI,'d-nb.info/gnd/'))">
          <xslt:variable name="vvAddedEntryNameMarcKeyTag-0">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvAddedEntryNameMarcKeyTag-0 != ''">
            <marc:subfield code="0">
              <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-0" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="contains($relURI,'id.oclc.org/worldcat/entity/') or                      contains($relURI,'isni.org/isni/') or                      contains($relURI,'viaf.org/viaf/') or                      contains($relURI,'d-nb.info/gnd/')">
          <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
        <xslt:when test="not(contains($relURI,'example.org')) and                      not(contains($relURI,'REPLACE')) and                      not(contains($relURI,'authorities'))">
          <xslt:variable name="vvAddedEntryNameMarcKeyTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvAddedEntryNameMarcKeyTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvAddedEntryNameMarcKeyTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:relation/bf:Relation[bf:relationship[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bf:Relationship/@rdf:about, 'hasSeries'))]]/bf:associatedResource/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[not(contains(@rdf:resource, 'hasSeries')) and not(contains(bflc:Relation/@rdf:about, 'hasSeries'))]]/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:relatedTo/bf:*[bflc:marcKey or marc:record] |                     bf:Work/bf:hasPart/bf:*[bflc:marcKey or marc:record]             " mode="generate-vAddRelationMarcKeyTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:about,'id.loc.gov/resources/hubs')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vAddRelationMarcKeyTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
              <xslt:text>700</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
              <xslt:text>710</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
              <xslt:text>711</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
              <xslt:text>730</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vAddRelationMarcKeyTag='700'">
          <xslt:text>abcdfghjklmnopqrst</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddRelationMarcKeyTag='710'">
          <xslt:text>abcdfghklmnoprst</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddRelationMarcKeyTag='711'">
          <xslt:text>acdeghklnpqst</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddRelationMarcKeyTag='730'">
          <xslt:text>adfghklmnoprst</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelStrs">
      <xsl:value-of select="'             http://id.loc.gov/vocabulary/relationship/subseries              http://id.loc.gov/vocabulary/relationship/series              http://id.loc.gov/vocabulary/relationship/translationof              http://id.loc.gov/vocabulary/relationship/translatedas              http://id.loc.gov/vocabulary/relationship/supplementto              http://id.loc.gov/vocabulary/relationship/supplement              http://id.loc.gov/vocabulary/relationship/partof              http://id.loc.gov/vocabulary/relationship/part              http://id.loc.gov/vocabulary/relationship/otheredition              http://id.loc.gov/vocabulary/relationship/otherphysicalformat              http://id.loc.gov/vocabulary/relationship/issuedwith              http://id.loc.gov/vocabulary/relationship/continuedinpart              http://id.loc.gov/vocabulary/relationship/continuationof              http://id.loc.gov/vocabulary/relationship/continues              http://id.loc.gov/vocabulary/relationship/precededby              http://id.loc.gov/vocabulary/relationship/mergerof              http://id.loc.gov/vocabulary/relationship/absorbedby              http://id.loc.gov/vocabulary/relationship/absorptionof              http://id.loc.gov/vocabulary/relationship/separatedby              http://id.loc.gov/vocabulary/relationship/continuedby              http://id.loc.gov/vocabulary/relationship/continuedinpartby              http://id.loc.gov/vocabulary/relationship/succeededby              http://id.loc.gov/vocabulary/relationship/splitinto              http://id.loc.gov/vocabulary/relationship/mergedtoform              http://id.loc.gov/vocabulary/relationship/datasource              http://id.loc.gov/vocabulary/relationship/relatedwork             '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vAddRelationMarcKeyTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vAddRelationMarcKeyTag = '730'">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                  <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>0</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/vocabulary/relationship/part']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bflc:Relationship/bflc:relation//@rdf:*[.='http://id.loc.gov/ontologies/bibframe/hasPart']">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="self::bf:hasPart or ancestor::bf:hasPart">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship/bf:Relationship[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bf:relationship/@rdf:resource |                      ancestor::bflc:Relationship/bflc:relation/bflc:Relation[not(rdfs:label) and not(madsrdf:authoritativeLabel)]/@rdf:about | ../bflc:relation/@rdf:resource">
        <xslt:variable name="vRelationURI">
          <xslt:choose>
            <xslt:when test="contains(.,'id.loc.gov/entities')">
              <xsl:value-of select="." xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vRelationLabel">
          <xslt:choose>
            <xslt:when test="parent::node()/marc:record">
              <xsl:copy-of select="parent::node()/marc:record" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$vRelationURI != ''">
              <xsl:call-template name="tGetLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:with-param name="pUri" select="$vRelationURI" />
              </xsl:call-template>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:variable name="vvAddRelationMarcKeyTag-i">
          <xsl:value-of select="$vRelationLabel" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:variable>
        <xslt:if test="$vvAddRelationMarcKeyTag-i != ''">
          <marc:subfield code="i">
            <xslt:value-of select="$vvAddRelationMarcKeyTag-i" />
          </marc:subfield>
        </xslt:if>
      </xslt:for-each>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bf:Relationship[rdfs:label or madsrdf:authoritativeLabel]                                   |                                   ancestor::bflc:Relationship/bflc:relation[                 (                    @rdf:resource and                    not(contains($vRelStrs, @rdf:resource)) and                    not(contains(@rdf:resource, 'ontologies/bibframe'))                 ) or                 (                    bf:Relationship/@rdf:about and                    not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                   not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                 )                 ]/bflc:Relation[rdfs:label or madsrdf:authoritativeLabel]                                   ">
        <marc:subfield code="i">
          <xslt:choose>
            <xslt:when test="madsrdf:authoritativeLabel">
              <xslt:for-each select="madsrdf:authoritativeLabel">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddRelationMarcKeyTag $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
          <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="@code" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:datafield[@tag = '240'] and $vAddRelationMarcKeyTag != '730'">
          <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield[contains('adfghklmnoprs',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:choose>
                <xsl:when test="@code = 'a'">
                  <xsl:attribute name="code">t</xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                       |                       ancestor::bflc:Relationship/bflc:relation[           (            @rdf:resource and            not(contains($vRelStrs, @rdf:resource)) and            not(contains(@rdf:resource, 'ontologies/bibframe'))           ) or           (            bf:Relationship/@rdf:about and            not(contains($vRelStrs, bf:Relationship/@rdf:about)) and           not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))           )           ]//@rdf:*                      ">
        <marc:subfield code="4">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:variable name="vvAddRelationMarcKeyTag-1">
        <xslt:choose>
          <xslt:when test="$relURI != ''">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$vvAddRelationMarcKeyTag-1 != ''">
        <marc:subfield code="1">
          <xslt:value-of select="$vvAddRelationMarcKeyTag-1" />
        </marc:subfield>
      </xslt:if>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[contains(@rdf:resource, '/PrimaryContribution')])]/bf:agent/*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart/bf:*[(not(contains(@rdf:about, 'id.loc.gov')) or contains(@rdf:about, 'REPLACE')) and not(bflc:marcKey)]/bf:contribution/*/bf:agent/*" mode="generate-vAddEntryTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vNameAuthPreNS">
      <xslt:choose>
        <xslt:when test="bflc:marcKey">
          <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pUri" select="@rdf:about" />
            <xsl:with-param name="pContext" select="." />
          </xsl:call-template>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vNameAuth" select="exsl:node-set($vNameAuthPreNS)" />
    <xslt:variable name="vAddEntryTag">
      <xslt:choose>
        <xslt:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
          <xslt:text>720</xslt:text>
        </xslt:when>
        <xslt:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
          <xslt:text>700</xslt:text>
        </xslt:when>
        <xslt:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
          <xslt:text>710</xslt:text>
        </xslt:when>
        <xslt:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
          <xslt:text>711</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>720</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vNameAuthTag">
      <xslt:choose>
        <xslt:when test="$vAddEntryTag='710'">
          <xslt:text>110</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddEntryTag='711'">
          <xslt:text>111</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>100</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vAuthSubfields">
      <xslt:choose>
        <xslt:when test="$vNameAuthTag='100'">
          <xslt:text>abcdgjq</xslt:text>
        </xslt:when>
        <xslt:when test="$vNameAuthTag='110'">
          <xslt:text>abcdgn</xslt:text>
        </xslt:when>
        <xslt:when test="$vNameAuthTag='111'">
          <xslt:text>acdegnq</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vSourceUri">
      <xslt:choose>
        <xslt:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vWorkUri">
      <xsl:value-of select="../../../../@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <xslt:variable name="vTitleResourcePreNS">
      <xslt:choose>
        <xslt:when test="../../../../bf:title/bf:Title/bflc:marcKey">
          <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pUri" select="@rdf:about" />
            <xsl:with-param name="pContext" select="../../../../bf:title/bf:Title" />
          </xsl:call-template>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
    <xslt:variable name="vTitleTag">
      <xslt:choose>
        <xslt:when test="$vAddEntryTag='710'">
          <xslt:text>110</xslt:text>
        </xslt:when>
        <xslt:when test="$vAddEntryTag='711'">
          <xslt:text>111</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>100</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vTitleSubfields">
      <xslt:choose>
        <xslt:when test="$vTitleTag='100'">
          <xslt:text>fhklmnoprst</xslt:text>
        </xslt:when>
        <xslt:when test="$vTitleTag='110'">
          <xslt:text>fhklmnoprst</xslt:text>
        </xslt:when>
        <xslt:when test="$vTitleTag='111'">
          <xslt:text>fhklnpst</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vAddEntryTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
              <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="$vAddEntryTag='700'">
              <xslt:choose>
                <xslt:when test="contains(local-name(),'Family')">
                  <xslt:text>3</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>1</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
            <xslt:when test="$vAddEntryTag='710'">
              <xslt:choose>
                <xslt:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xslt:text>1</xslt:text>
                </xslt:when>
              </xslt:choose>
            </xslt:when>
            <xslt:when test="$vAddEntryTag='720'">
              <xslt:choose>
                <xslt:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                  <xslt:text>1</xslt:text>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text> </xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>2</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="ancestor::bf:hasPart">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="$vAddEntryTag='720'">
          <xslt:for-each select="rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
            <marc:subfield code="e">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
            <marc:subfield code="4">
              <xslt:choose>
                <xslt:when test="madsrdf:code">
                  <xslt:for-each select="madsrdf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="3">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $3.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield code="i">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="." />
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
          <xslt:choose>
            <xslt:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
              <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:variable name="vvAddEntryTag-a">
                <xslt:choose>
                  <xslt:when test="madsrdf:elementList">
                    <xslt:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:when test="madsrdf:authoritativeLabel">
                    <xslt:for-each select="madsrdf:authoritativeLabel">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:for-each select="rdfs:label">
                      <xslt:choose>
                        <xslt:when test="position() = 1">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </xslt:when>
                        <xslt:otherwise>
                          <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $a.</xslt:message>
                        </xslt:otherwise>
                      </xslt:choose>
                    </xslt:for-each>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvAddEntryTag-a != ''">
                <marc:subfield code="a">
                  <xslt:value-of select="$vvAddEntryTag-a" />
                </marc:subfield>
              </xslt:if>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='710'">
                  <xslt:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="b">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='700'">
                  <xslt:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='700'">
                  <xslt:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="d">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $d.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='700'">
                  <xslt:for-each select="madsrdf:fullerName/*/rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <marc:subfield code="q">
                          <xslt:call-template name="tChopPunct">
                            <xslt:with-param name="pString" select="." />
                          </xslt:call-template>
                        </marc:subfield>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $q.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
              <xslt:choose>
                <xslt:when test="$vAddEntryTag='711'">
                  <xslt:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="q">
                      <xslt:call-template name="tChopPunct">
                        <xslt:with-param name="pString" select="." />
                      </xslt:call-template>
                    </marc:subfield>
                  </xslt:for-each>
                </xslt:when>
              </xslt:choose>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:choose>
            <xslt:when test="$vAddEntryTag='711'">
              <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="j">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xslt:call-template name="tChopPunct">
                              <xslt:with-param name="pString" select="." />
                            </xslt:call-template>
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $j.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xslt:choose>
                    <xslt:when test="madsrdf:authoritativeLabel">
                      <xslt:for-each select="madsrdf:authoritativeLabel">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:for-each select="rdfs:label">
                        <xslt:choose>
                          <xslt:when test="position() = 1">
                            <xsl:value-of select="translate(., $upper, $lower)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                          </xslt:when>
                          <xslt:otherwise>
                            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $e.</xslt:message>
                          </xslt:otherwise>
                        </xslt:choose>
                      </xslt:for-each>
                    </xslt:otherwise>
                  </xslt:choose>
                </marc:subfield>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
            <marc:subfield code="4">
              <xslt:choose>
                <xslt:when test="madsrdf:code">
                  <xslt:for-each select="madsrdf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="bf:code">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $4.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and                                          not(contains(.,'REPLACE')) and                                          not(contains(., 'id.oclc.org/worldcat/entity/')) and                                         not(contains(., 'isni.org/isni/')) and                                         (contains(., 'viaf.org/') and contains(., '#'))]">
            <marc:subfield code="0">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value" />
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="@rdf:about[                             contains(., 'id.oclc.org/worldcat/entity/') or                              contains(., 'isni.org/isni/') or                             (contains(., 'viaf.org/') and not(contains(., '#')))]">
            <marc:subfield code="1">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]">
              <xsl:for-each select="exsl:node-set($vTitleResource)//marc:datafield[@tag=$vTitleTag]/marc:subfield[contains($vTitleSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code" />
                  </xsl:attribute>
                  <xsl:value-of select="." />
                </marc:subfield>
              </xsl:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="ancestor::bf:Hub">
                <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="t">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $t.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:legalDate">
                  <marc:subfield code="d">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="bf:originDate">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="f">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $f.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                  <marc:subfield code="m">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                  <marc:subfield code="n">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                  <marc:subfield code="p">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:for-each>
                <xslt:for-each select="bf:musicKey">
                  <xslt:choose>
                    <xslt:when test="position() = 1">
                      <marc:subfield code="r">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </marc:subfield>
                    </xslt:when>
                    <xslt:otherwise>
                      <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $r.</xslt:message>
                    </xslt:otherwise>
                  </xslt:choose>
                </xslt:for-each>
                <xslt:for-each select="bf:version">
                  <marc:subfield code="s">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:for-each>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
          <xslt:for-each select="ancestor::bf:Hub">
            <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <marc:subfield code="x">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </marc:subfield>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $x.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
            <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
              <marc:subfield code="0">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
            <xslt:for-each select="bf:identifiedBy/bf:Identifier">
              <marc:subfield code="0">
                <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:when test="$vIdType != ''">
                    <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="rdf:value" />
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xslt:for-each>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
              <xslt:variable name="vvAddEntryTag-2">
                <xslt:choose>
                  <xslt:when test="bf:source/bf:Source/bf:code">
                    <xsl:value-of select="bf:source/bf:Source/bf:code" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:when>
                  <xslt:when test="$vSourceUri != ''">
                    <xslt:choose>
                      <xslt:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <xsl:with-param name="pUri" select="$vSourceUri" />
                        </xsl:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xsl:value-of select="$vSourceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="bf:source/bf:Source/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:if test="$vvAddEntryTag-2 != ''">
                <marc:subfield code="2">
                  <xslt:value-of select="$vvAddEntryTag-2" />
                </marc:subfield>
              </xslt:if>
            </xslt:when>
          </xslt:choose>
          <xslt:for-each select="../../bflc:applicableInstitution/*/bf:code">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="5">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vAddEntryTag $5.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:relatedTo/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution) and not(contains(@rdf:about, 'hubs')) and not(bflc:marcKey)]" mode="generate-730">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vTitleResourcePreNS">
      <xslt:choose>
        <xslt:when test="bf:title/bf:Title/bflc:marcKey">
          <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:with-param name="pUri" select="@rdf:about" />
            <xsl:with-param name="pContext" select="bf:title/bf:Title" />
          </xsl:call-template>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vTitleResource" select="exsl:node-set($vTitleResourcePreNS)" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">730</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum">
              <xsl:value-of select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:nonSortNum" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
            <xslt:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
              <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text>0</xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name(parent::*)='hasPart'">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xsl:variable name="vNodeUri" select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield code="i">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="." />
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xslt:choose>
        <xslt:when test="$vTitleResource//marc:datafield[@tag='130']">
          <xsl:for-each select="$vTitleResource//marc:datafield[@tag='130']/marc:subfield[contains('adfghklmnoprst',@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <marc:subfield>
              <xsl:attribute name="code">
                <xsl:value-of select="@code" />
              </xsl:attribute>
              <xsl:value-of select="." />
            </marc:subfield>
          </xsl:for-each>
        </xslt:when>
        <xslt:otherwise>
          <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="a">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $a.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:legalDate">
            <marc:subfield code="d">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:originDate">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="f">
                  <xslt:value-of select="." />
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $f.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
          <xslt:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
            <marc:subfield code="m">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:title/bf:Title/bf:partNumber">
            <marc:subfield code="n">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:title/bf:Title/bf:partName">
            <marc:subfield code="p">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:choose>
            <xslt:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
              <marc:subfield code="o">arranged</marc:subfield>
            </xslt:when>
          </xslt:choose>
          <xslt:for-each select="bf:musicKey">
            <marc:subfield code="r">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:version">
            <marc:subfield code="s">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
          <xslt:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="x">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $x.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:otherwise>
      </xslt:choose>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <marc:subfield code="2">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="5">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 730 $5.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:relation/bf:Relation/bf:associatedResource/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:relatedTo/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:hasPart/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']" mode="generate-740">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">740</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name(..)='hasPart'">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 740 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:partName">
        <marc:subfield code="p">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:applicableInstitution/*/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="5">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 740 $5.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']" mode="generate-752">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">752</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="madsrdf:componentList/*">
        <xslt:choose>
          <xslt:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
            <xslt:variable name="v752-a">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $a.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-a != ''">
              <marc:subfield code="a">
                <xslt:value-of select="$v752-a" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
            <xslt:variable name="v752-b">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $b.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-b != ''">
              <marc:subfield code="b">
                <xslt:value-of select="$v752-b" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
            <xslt:variable name="v752-c">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $c.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-c != ''">
              <marc:subfield code="c">
                <xslt:value-of select="$v752-c" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
            <xslt:variable name="v752-d">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $d.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-d != ''">
              <marc:subfield code="d">
                <xslt:value-of select="$v752-d" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
            <xslt:variable name="v752-f">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $f.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-f != ''">
              <marc:subfield code="f">
                <xslt:value-of select="$v752-f" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
            <xslt:variable name="v752-g">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $g.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-g != ''">
              <marc:subfield code="g">
                <xslt:value-of select="$v752-g" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
            <xslt:variable name="v752-h">
              <xslt:choose>
                <xslt:when test="madsrdf:authoritativeLabel">
                  <xslt:for-each select="madsrdf:authoritativeLabel">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdfs:label">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:call-template name="tChopPunct">
                          <xslt:with-param name="pString" select="." />
                        </xslt:call-template>
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $h.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$v752-h != ''">
              <marc:subfield code="h">
                <xslt:value-of select="$v752-h" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
        <marc:subfield code="e">
          <xslt:choose>
            <xslt:when test="madsrdf:authoritativeLabel">
              <xslt:for-each select="madsrdf:authoritativeLabel">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $e.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
        <marc:subfield code="4">
          <xslt:choose>
            <xslt:when test="madsrdf:code">
              <xslt:for-each select="madsrdf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
        <marc:subfield code="4">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 752 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance/bf:systemRequirement/*[       local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel' or       local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage' or       local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem']" mode="generate-753">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">753</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
        <xslt:when test="local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem'">
          <xslt:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code" />
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value" />
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:source/bf:Source/bf:code">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="2">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element 753 $2.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:relation/bf:Relation[bf:relationship/@rdf:resource and bf:associatedResource/@rdf:resource] |       bf:Work/bf:relation/bf:Relation[bf:relationship/bf:Relationship/rdfs:label and bf:associatedResource/@rdf:resource] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/@rdf:resource and bf:relatedTo/@rdf:resource] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/rdfs:label and bf:relatedTo/@rdf:resource]" mode="generate-758">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">758</xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:for-each select="bf:relationship/@rdf:resource|bf:relationship/bf:Relationship/@rdf:about|bflc:relation/@rdf:resource|bflc:relation/bflc:Relation/@rdf:about">
        <marc:subfield code="4">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:relationship/bf:Relationship/rdfs:label|bflc:relation/bflc:Relation/rdfs:label">
        <marc:subfield code="i">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:associatedResource/@rdf:resource|bf:relatedTo/@rdf:resource">
        <marc:subfield code="1">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/@rdf:about |       bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')][1]/@rdf:about" mode="generate-758">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <marc:datafield>
      <xslt:attribute name="tag">758</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:text> </xslt:text>
      </xslt:attribute>
      <xslt:variable name="v758-4">
        <xslt:choose>
          <xslt:when test="ancestor::bf:Work">
            <xsl:text xmlns:xsl="http://www.w3.org/1999/XSL/Transform">http://id.loc.gov/ontologies/bibframe/instanceOf</xsl:text>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v758-4 != ''">
        <marc:subfield code="4">
          <xslt:value-of select="$v758-4" />
        </marc:subfield>
      </xslt:if>
      <marc:subfield code="1">
        <xslt:value-of select="." />
      </marc:subfield>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'subseries') or contains(bf:Relationship/@rdf:about, 'subseries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'series') or contains(bf:Relationship/@rdf:about, 'series')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translationof') or contains(bf:Relationship/@rdf:about, 'translationof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translatedas') or contains(bf:Relationship/@rdf:about, 'translatedas')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplementto') or contains(bf:Relationship/@rdf:about, 'supplementto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'partof') or contains(bf:Relationship/@rdf:about, 'partof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, '/part') or contains(bf:Relationship/@rdf:about, '/part')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otheredition') or contains(bf:Relationship/@rdf:about, 'otheredition')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherphysicalformat') or contains(bf:Relationship/@rdf:about, 'otherphysicalformat')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'issuedwith') or contains(bf:Relationship/@rdf:about, 'issuedwith')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedinpart') or contains(bf:Relationship/@rdf:about, 'continuedinpart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuationof') or contains(bf:Relationship/@rdf:about, 'continuationof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'precededby') or contains(bf:Relationship/@rdf:about, 'precededby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergerof') or contains(bf:Relationship/@rdf:about, 'mergerof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbedby') or contains(bf:Relationship/@rdf:about, 'absorbedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorptionof') or contains(bf:Relationship/@rdf:about, 'absorptionof')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'separatedby') or contains(bf:Relationship/@rdf:about, 'separatedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedby') or contains(bf:Relationship/@rdf:about, 'continuedby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedinpartby') or contains(bf:Relationship/@rdf:about, 'continuedinpartby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'succeededby') or contains(bf:Relationship/@rdf:about, 'succeededby')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'splitinto') or contains(bf:Relationship/@rdf:about, 'splitinto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergedtoform') or contains(bf:Relationship/@rdf:about, 'mergedtoform')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'datasource') or contains(bf:Relationship/@rdf:about, 'datasource')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'relatedwork') or contains(bf:Relationship/@rdf:about, 'relatedwork')]]/bf:associatedResource/bf:*[bf:hasInstance] |              bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSubseries') or contains(bf:Relationship/@rdf:about, 'hasSubseries')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translationOf') or contains(bf:Relationship/@rdf:about, 'translationOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'translation') or contains(bf:Relationship/@rdf:about, 'translation')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplementTo') or contains(bf:Relationship/@rdf:about, 'supplementTo')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'partOf') or contains(bf:Relationship/@rdf:about, 'partOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasPart') or contains(bf:Relationship/@rdf:about, 'hasPart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherEdition') or contains(bf:Relationship/@rdf:about, 'otherEdition')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'otherPhysicalFormat') or contains(bf:Relationship/@rdf:about, 'otherPhysicalFormat')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'issuedWith') or contains(bf:Relationship/@rdf:about, 'issuedWith')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuesInPart') or contains(bf:Relationship/@rdf:about, 'continuesInPart')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'precededBy') or contains(bf:Relationship/@rdf:about, 'precededBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergerOf') or contains(bf:Relationship/@rdf:about, 'mergerOf')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbedBy') or contains(bf:Relationship/@rdf:about, 'absorbedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'absorbed') or contains(bf:Relationship/@rdf:about, 'absorbed')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'separatedBy') or contains(bf:Relationship/@rdf:about, 'separatedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedBy') or contains(bf:Relationship/@rdf:about, 'continuedBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'continuedInPartBy') or contains(bf:Relationship/@rdf:about, 'continuedInPartBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'succeededBy') or contains(bf:Relationship/@rdf:about, 'succeededBy')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'splitInto') or contains(bf:Relationship/@rdf:about, 'splitInto')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'mergedToForm') or contains(bf:Relationship/@rdf:about, 'mergedToForm')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'dataSource') or contains(bf:Relationship/@rdf:about, 'dataSource')]]/bf:associatedResource/bf:*[bf:hasInstance] |       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'relatedTo') or contains(bf:Relationship/@rdf:about, 'relatedTo')]]/bf:associatedResource/bf:*[bf:hasInstance]       " mode="generate-vLinkTagFromWork2">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vLinkTagFromWork2">
      <xslt:choose>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'subseries') or contains(bf:Relationship/@rdf:about, 'subseries')]">
          <xslt:text>762</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'series') or contains(bf:Relationship/@rdf:about, 'series')]">
          <xslt:text>760</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'translationof') or contains(bf:Relationship/@rdf:about, 'translationOf')]">
          <xslt:text>765</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'translatedas') or contains(bf:Relationship/@rdf:about, 'translatedas')]">
          <xslt:text>767</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'supplementto') or contains(bf:Relationship/@rdf:about, 'supplementto')]">
          <xslt:text>772</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]">
          <xslt:text>770</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'partof') or contains(bf:Relationship/@rdf:about, 'partof')]">
          <xslt:text>773</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, '/part') or contains(bf:Relationship/@rdf:about, '/part')]">
          <xslt:text>774</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'otheredition') or contains(bf:Relationship/@rdf:about, 'otheredition')]">
          <xslt:text>775</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'otherphysicalformat') or contains(bf:Relationship/@rdf:about, 'otherphysicalformat')]">
          <xslt:text>776</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'issuedwith') or contains(bf:Relationship/@rdf:about, 'issuedwith')]">
          <xslt:text>777</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedinpart') or contains(bf:Relationship/@rdf:about, 'continuedinpart')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'precededby') or contains(bf:Relationship/@rdf:about, 'precededby')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'succeededby') or contains(bf:Relationship/@rdf:about, 'succeededby')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergerof') or contains(bf:Relationship/@rdf:about, 'mergeriof')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbedby') or contains(bf:Relationship/@rdf:about, 'absorbedby')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorptionof') or contains(bf:Relationship/@rdf:about, 'absorptionof')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'separatedfrom') or contains(bf:Relationship/@rdf:about, 'separatedfrom')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedby') or contains(bf:Relationship/@rdf:about, 'continuedby')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedinpartby') or contains(bf:Relationship/@rdf:about, 'continuedinpartby')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'splitinto') or contains(bf:Relationship/@rdf:about, 'splitinto')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergedtoform') or contains(bf:Relationship/@rdf:about, 'mergedtoform')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'datasource') or contains(bf:Relationship/@rdf:about, 'datasource')]">
          <xslt:text>786</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]">
          <xslt:text>760</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'hasSubseries') or contains(bf:Relationship/@rdf:about, 'hasSubseries')]">
          <xslt:text>762</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'translationOf') or contains(bf:Relationship/@rdf:about, 'translationOf')]">
          <xslt:text>765</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'translation') or contains(bf:Relationship/@rdf:about, 'translation')]">
          <xslt:text>767</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'supplementTo') or contains(bf:Relationship/@rdf:about, 'supplementTo')]">
          <xslt:text>772</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'supplement') or contains(bf:Relationship/@rdf:about, 'supplement')]">
          <xslt:text>770</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'partOf') or contains(bf:Relationship/@rdf:about, 'partOf')]">
          <xslt:text>773</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'hasPart') or contains(bf:Relationship/@rdf:about, 'hasPart')]">
          <xslt:text>774</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'otherEdition') or contains(bf:Relationship/@rdf:about, 'otherEdition')]">
          <xslt:text>775</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'otherPhysicalFormat') or contains(bf:Relationship/@rdf:about, 'otherPhysicalFormat')]">
          <xslt:text>776</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'issuedWith') or contains(bf:Relationship/@rdf:about, 'issuedWith')]">
          <xslt:text>777</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuesInPart') or contains(bf:Relationship/@rdf:about, 'continuesInPart')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuationof') or contains(bf:Relationship/@rdf:about, 'continuationof')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'precededBy') or contains(bf:Relationship/@rdf:about, 'precededBy')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'succeededBy') or contains(bf:Relationship/@rdf:about, 'succeededBy')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergerOf') or contains(bf:Relationship/@rdf:about, 'mergerOf')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbedBy') or contains(bf:Relationship/@rdf:about, 'absorbedBy')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbed') or contains(bf:Relationship/@rdf:about, 'absorbed')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'separatedFrom') or contains(bf:Relationship/@rdf:about, 'separatedFrom')]">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedBy') or contains(bf:Relationship/@rdf:about, 'continuedBy')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedInPartBy') or contains(bf:Relationship/@rdf:about, 'continuedInPartBy')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'splitInto') or contains(bf:Relationship/@rdf:about, 'splitInto')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergedToForm') or contains(bf:Relationship/@rdf:about, 'mergedToForm')]">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'dataSource') or contains(bf:Relationship/@rdf:about, 'dataSource')]">
          <xslt:text>786</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>787</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vLanguageUri">
      <xslt:choose>
        <xslt:when test="bf:language/@rdf:resource">
          <xsl:value-of select="bf:language/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:language/*/@rdf:about">
          <xsl:value-of select="bf:language/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vPlaceUri">
      <xslt:choose>
        <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelStrs">
      <xsl:value-of select="'         http://id.loc.gov/vocabulary/relationship/subseries          http://id.loc.gov/vocabulary/relationship/series          http://id.loc.gov/vocabulary/relationship/translationof          http://id.loc.gov/vocabulary/relationship/translatedas          http://id.loc.gov/vocabulary/relationship/supplementto          http://id.loc.gov/vocabulary/relationship/supplement          http://id.loc.gov/vocabulary/relationship/partof          http://id.loc.gov/vocabulary/relationship/part          http://id.loc.gov/vocabulary/relationship/otheredition          http://id.loc.gov/vocabulary/relationship/otherphysicalformat          http://id.loc.gov/vocabulary/relationship/issuedwith          http://id.loc.gov/vocabulary/relationship/continuedinpart          http://id.loc.gov/vocabulary/relationship/continuationof          http://id.loc.gov/vocabulary/relationship/continues          http://id.loc.gov/vocabulary/relationship/precededby          http://id.loc.gov/vocabulary/relationship/mergerof          http://id.loc.gov/vocabulary/relationship/absorbedby          http://id.loc.gov/vocabulary/relationship/absorptionof          http://id.loc.gov/vocabulary/relationship/separatedby          http://id.loc.gov/vocabulary/relationship/continuedby          http://id.loc.gov/vocabulary/relationship/continuedinpartby          http://id.loc.gov/vocabulary/relationship/succeededby          http://id.loc.gov/vocabulary/relationship/splitinto          http://id.loc.gov/vocabulary/relationship/mergedtoform          http://id.loc.gov/vocabulary/relationship/datasource          http://id.loc.gov/vocabulary/relationship/relatedwork         '" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vLinkTagFromWork2" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedinpart') or contains(bf:Relationship/@rdf:about, 'continuedinpart')]">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuationof') or contains(bf:Relationship/@rdf:about, 'continuationof')]">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'precededby') or contains(bf:Relationship/@rdf:about, 'precededby')]">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'succeededby') or contains(bf:Relationship/@rdf:about, 'succeededby')]">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergerof') or contains(bf:Relationship/@rdf:about, 'mergerof')]">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbedby') or contains(bf:Relationship/@rdf:about, 'absorbedby')]">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorptionof') or contains(bf:Relationship/@rdf:about, 'absorptionof')]">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'separatedfrom') or contains(bf:Relationship/@rdf:about, 'separatedfrom')]">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedby') or contains(bf:Relationship/@rdf:about, 'continuedby')]">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedinpartby') or contains(bf:Relationship/@rdf:about, 'continuedinpartby')]">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'splitinto') or contains(bf:Relationship/@rdf:about, 'splitinto')]">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergedtoform') or contains(bf:Relationship/@rdf:about, 'mergedtoform')]">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuesInPart') or contains(bf:Relationship/@rdf:about, 'continuesInPart')]">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continues') or contains(bf:Relationship/@rdf:about, 'continues')]">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'precededBy') or contains(bf:Relationship/@rdf:about, 'precededBy')]">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'succeededBy') or contains(bf:Relationship/@rdf:about, 'succeededBy')]">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergerOf') or contains(bf:Relationship/@rdf:about, 'mergerOf')]">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbedBy') or contains(bf:Relationship/@rdf:about, 'absorbedBy')]">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'absorbed') or contains(bf:Relationship/@rdf:about, 'absorbed')]">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'separatedFrom') or contains(bf:Relationship/@rdf:about, 'separatedFrom')]">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedBy') or contains(bf:Relationship/@rdf:about, 'continuedBy')]">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'continuedInPartBy') or contains(bf:Relationship/@rdf:about, 'continuedInPartBy')]">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'splitInto') or contains(bf:Relationship/@rdf:about, 'splitInto')]">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="ancestor::bf:Relation/bf:relationship[contains(@rdf:resource, 'mergedToForm') or contains(bf:Relationship/@rdf:about, 'mergedToForm')]">
              <xslt:text>7</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                             (                                  @rdf:resource and                                  not(contains($vRelStrs, @rdf:resource)) and                                  not(contains(@rdf:resource, 'ontologies/bibframe'))                             ) or                             (                                  bf:Relationship/@rdf:about and                                  not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                                 not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                             )                          ]/bf:Relationship[rdfs:label or madsrdf:authoritativeLabel]">
        <marc:subfield code="i">
          <xslt:choose>
            <xslt:when test="madsrdf:authoritativeLabel">
              <xslt:for-each select="madsrdf:authoritativeLabel">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                       (                          @rdf:resource and                          not(contains($vRelStrs, @rdf:resource)) and                          not(contains(@rdf:resource, 'ontologies/bibframe'))                       ) or                       (                          bf:Relationship/@rdf:about and                          not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                         not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                       )                     ]/bf:Relationship[madsrdf:code or bf:code]">
        <marc:subfield code="4">
          <xslt:choose>
            <xslt:when test="madsrdf:code">
              <xslt:for-each select="madsrdf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="ancestor::bf:Relation/bf:relationship[                     (                        @rdf:resource and                        not(contains($vRelStrs, @rdf:resource)) and                       not(contains(@rdf:resource, 'ontologies/bibframe'))                     ) or                     (                        bf:Relationship/@rdf:about and                        not(contains($vRelStrs, bf:Relationship/@rdf:about)) and                       not(contains(bf:Relationship/@rdf:about, 'ontologies/bibframe'))                     )                   ]//@rdf:*[1]">
        <marc:subfield code="4">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/*/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="bf:title/bf:Title/bf:mainTitle != bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
          <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="s">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $s.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:variable name="vvLinkTagFromWork2-t">
        <xslt:choose>
          <xslt:when test="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $t.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $t.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$vvLinkTagFromWork2-t != ''">
        <marc:subfield code="t">
          <xslt:value-of select="$vvLinkTagFromWork2-t" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:part">
        <marc:subfield code="g">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:editionStatement">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:title/bf:Title/bf:qualifier">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:publicationStatement|bf:hasInstance/bf:Instance/bflc:publicationStatement|bf:hasInstance/bf:Instance/bf:provisionActivityStatement">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $d.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="$vLanguageUri != '' or bf:language/*[local-name()='code']">
          <xslt:variable name="vvLinkTagFromWork2-e">
            <xslt:choose>
              <xslt:when test="bf:language/*[local-name()='code']">
                <xsl:value-of select="bf:language/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$vLanguageUri != ''">
                <xslt:choose>
                  <xslt:when test="contains($vLanguageUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vLanguageUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vLanguageUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvLinkTagFromWork2-e != ''">
            <marc:subfield code="e">
              <xslt:value-of select="$vvLinkTagFromWork2-e" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="$vPlaceUri != '' or bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
          <xslt:variable name="vvLinkTagFromWork2-f">
            <xslt:choose>
              <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
                <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$vPlaceUri != ''">
                <xslt:choose>
                  <xslt:when test="contains($vPlaceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vPlaceUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vPlaceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvLinkTagFromWork2-f != ''">
            <marc:subfield code="f">
              <xslt:value-of select="$vvLinkTagFromWork2-f" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:extent/bf:Extent/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="h">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $h.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:seriesStatement">
        <marc:subfield code="k">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label|bf:hasInstance/bf:Instance/bf:note/bf:Note/rdfs:label">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:title/*[local-name()='AbbreviatedTitle' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']/mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="p">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $p.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="x">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $x.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:identifiedBy/*">
        <xslt:choose>
          <xslt:when test="local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="o">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='ReportNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ReportNumber'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="r">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Strn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="u">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn'">
            <xslt:variable name="vvLinkTagFromWork2-w">
              <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$vvLinkTagFromWork2-w != ''">
              <marc:subfield code="w">
                <xslt:value-of select="$vvLinkTagFromWork2-w" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='Coden' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="y">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="z">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:variable name="vvLinkTagFromWork2-w">
              <xslt:choose>
                <xslt:when test="bf:assigner/bf:Agent/bf:code">
                  <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:assigner/bf:Agent/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork2 $w.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$vvLinkTagFromWork2-w != ''">
              <marc:subfield code="w">
                <xslt:value-of select="$vvLinkTagFromWork2-w" />
              </marc:subfield>
            </xslt:if>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:hasSeries/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasSubseries/bf:Work[bf:hasInstance] |                     bf:Work/bf:translationOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:translation/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplement/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplementTo/bf:Work[bf:hasInstance] |                     bf:Work/bf:partOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherEdition/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherPhysicalFormat/bf:Work[bf:hasInstance] |                     bf:Work/bf:issuedWith/bf:Work[bf:hasInstance] |                     bf:Work/bf:continues/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuesInPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:precededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergerOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbed/bf:Work[bf:hasInstance] |                     bf:Work/bf:separatedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedInPartBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:succeededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:splitInto/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergedToForm/bf:Work[bf:hasInstance] |                     bf:Work/bf:dataSource/bf:Work[bf:hasInstance] |                     bf:Work/bf:relatedTo/bf:Work[bf:hasInstance]" mode="generate-vLinkTagFromWork">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="vLinkTagFromWork">
      <xslt:choose>
        <xslt:when test="local-name(..)='hasSeries'">
          <xslt:text>760</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='hasSubseries'">
          <xslt:text>762</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='translationOf'">
          <xslt:text>765</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='translation'">
          <xslt:text>767</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='supplement'">
          <xslt:text>770</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='supplementTo'">
          <xslt:text>772</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='partOf'">
          <xslt:text>773</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='hasPart'">
          <xslt:text>774</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='otherEdition'">
          <xslt:text>775</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='otherPhysicalFormat'">
          <xslt:text>776</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='issuedWith'">
          <xslt:text>777</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='continues'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='continuesInPart'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='precededBy'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='mergerOf'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='absorbed'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='separatedFrom'">
          <xslt:text>780</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='continuedBy'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='continuedInPartBy'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='succeededBy'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='absorbedBy'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='splitInto'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='mergedToForm'">
          <xslt:text>785</xslt:text>
        </xslt:when>
        <xslt:when test="local-name(..)='dataSource'">
          <xslt:text>786</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:text>787</xslt:text>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vLanguageUri">
      <xslt:choose>
        <xslt:when test="bf:language/@rdf:resource">
          <xsl:value-of select="bf:language/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:language/*/@rdf:about">
          <xsl:value-of select="bf:language/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vPlaceUri">
      <xslt:choose>
        <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
        <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vLinkTagFromWork" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:text>0</xslt:text>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name(parent::*)='continues'">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='continuesInPart'">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='precededBy'">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='mergerOf'">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='absorbed'">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='separatedFrom'">
              <xslt:text>7</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='continuedBy'">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='continuedInPartBy'">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='succeededBy'">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='absorbedBy'">
              <xslt:text>4</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='splitInto'">
              <xslt:text>5</xslt:text>
            </xslt:when>
            <xslt:when test="local-name(parent::*)='mergedToForm'">
              <xslt:text>7</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="3">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $3.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]/bf:agent/*/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="a">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $a.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:editionStatement">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="b">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $b.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:title/bf:Title/bf:qualifier">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="c">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $c.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:provisionActivityStatement">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="d">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $d.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="$vLanguageUri != '' or bf:language/*[local-name()='code']">
          <xslt:variable name="vvLinkTagFromWork-e">
            <xslt:choose>
              <xslt:when test="bf:language/*[local-name()='code']">
                <xsl:value-of select="bf:language/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$vLanguageUri != ''">
                <xslt:choose>
                  <xslt:when test="contains($vLanguageUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vLanguageUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vLanguageUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvLinkTagFromWork-e != ''">
            <marc:subfield code="e">
              <xslt:value-of select="$vvLinkTagFromWork-e" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:choose>
        <xslt:when test="$vPlaceUri != '' or bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
          <xslt:variable name="vvLinkTagFromWork-f">
            <xslt:choose>
              <xslt:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
                <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
              </xslt:when>
              <xslt:when test="$vPlaceUri != ''">
                <xslt:choose>
                  <xslt:when test="contains($vPlaceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                      <xsl:with-param name="pUri" select="$vPlaceUri" />
                    </xsl:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xsl:value-of select="$vPlaceUri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:when>
            </xslt:choose>
          </xslt:variable>
          <xslt:if test="$vvLinkTagFromWork-f != ''">
            <marc:subfield code="f">
              <xslt:value-of select="$vvLinkTagFromWork-f" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
        <marc:subfield code="i">
          <xslt:choose>
            <xslt:when test="madsrdf:authoritativeLabel">
              <xslt:for-each select="madsrdf:authoritativeLabel">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="rdfs:label">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:call-template name="tChopPunct">
                      <xslt:with-param name="pString" select="." />
                    </xslt:call-template>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $i.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
        <marc:subfield code="4">
          <xslt:choose>
            <xslt:when test="madsrdf:code">
              <xslt:for-each select="madsrdf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
            <xslt:otherwise>
              <xslt:for-each select="bf:code">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $4.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
        <marc:subfield code="4">
          <xslt:value-of select="." />
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="bf:title/bf:Title/bf:mainTitle != bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
          <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
            <xslt:choose>
              <xslt:when test="position() = 1">
                <marc:subfield code="s">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </marc:subfield>
              </xslt:when>
              <xslt:otherwise>
                <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $s.</xslt:message>
              </xslt:otherwise>
            </xslt:choose>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:variable name="vvLinkTagFromWork-t">
        <xslt:choose>
          <xslt:when test="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $t.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="bf:title/bf:Title/bf:mainTitle">
            <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
              <xslt:choose>
                <xslt:when test="position() = 1">
                  <xslt:call-template name="tChopPunct">
                    <xslt:with-param name="pString" select="." />
                  </xslt:call-template>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $t.</xslt:message>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:for-each>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$vvLinkTagFromWork-t != ''">
        <marc:subfield code="t">
          <xslt:value-of select="$vvLinkTagFromWork-t" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:part">
        <marc:subfield code="g">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:extent/bf:Extent/rdfs:label">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="h">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $h.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:seriesStatement">
        <marc:subfield code="k">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label|bf:hasInstance/bf:Instance/bf:note/bf:Note/rdfs:label">
        <marc:subfield code="n">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
      <xslt:for-each select="bf:title/*[local-name()='AbbreviatedTitle' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']/mainTitle">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="p">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $p.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="x">
              <xslt:call-template name="tChopPunct">
                <xslt:with-param name="pString" select="." />
              </xslt:call-template>
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $x.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:hasInstance/bf:Instance/bf:identifiedBy/*">
        <xslt:choose>
          <xslt:when test="local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="o">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='ReportNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ReportNumber'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="r">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Strn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="u">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn'">
            <xslt:variable name="vvLinkTagFromWork-w">
              <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            </xslt:variable>
            <xslt:if test="$vvLinkTagFromWork-w != ''">
              <marc:subfield code="w">
                <xslt:value-of select="$vvLinkTagFromWork-w" />
              </marc:subfield>
            </xslt:if>
          </xslt:when>
          <xslt:when test="local-name()='Coden' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="y">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:when test="local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn'">
            <xslt:for-each select="rdf:value">
              <marc:subfield code="z">
                <xslt:value-of select="." />
              </marc:subfield>
            </xslt:for-each>
          </xslt:when>
          <xslt:otherwise>
            <xslt:variable name="vvLinkTagFromWork-w">
              <xslt:choose>
                <xslt:when test="bf:assigner/bf:Agent/bf:code">
                  <xsl:variable name="vSource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:assigner/bf:Agent/bf:code" />
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:for-each select="rdf:value">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vLinkTagFromWork $w.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:variable>
            <xslt:if test="$vvLinkTagFromWork-w != ''">
              <marc:subfield code="w">
                <xslt:value-of select="$vvLinkTagFromWork-w" />
              </marc:subfield>
            </xslt:if>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="       bf:Work/bf:relation/bf:Relation[bf:relationship[contains(@rdf:resource, 'hasSeries') or contains(bf:Relationship/@rdf:about, 'hasSeries')]]/bf:associatedResource/bf:*[bflc:marcKey] |       bf:Work/bf:hasSeries/bf:*[bflc:marcKey] |       bf:Work/bflc:relationship/bflc:Relationship[bflc:relation[contains(@rdf:resource, 'hasSeries') or contains(bflc:Relation/@rdf:about, 'hasSeries')]]/bf:relatedTo/bf:*[bflc:marcKey]       " mode="generate-vSeriesMarcKeyTag">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="relURI">
      <xslt:choose>
        <xslt:when test="contains(@rdf:about,'id.loc.gov')">
          <xsl:value-of select="@rdf:about" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vRelResourcePreNS">
      <xsl:call-template name="tGetRelResource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:with-param name="pRelUri" select="$relURI" />
        <xsl:with-param name="pContext" select="." />
      </xsl:call-template>
    </xslt:variable>
    <xslt:variable name="vRelResource" select="exsl:node-set($vRelResourcePreNS)" />
    <xslt:variable name="vSeriesMarcKeyTag">
      <xslt:choose>
        <xslt:when test="$vRelResource//marc:record">
          <xslt:choose>
            <xslt:when test="$vRelResource//marc:datafield[@tag='100']">
              <xslt:text>800</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='110']">
              <xslt:text>810</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='111']">
              <xslt:text>811</xslt:text>
            </xslt:when>
            <xslt:when test="$vRelResource//marc:datafield[@tag='130']">
              <xslt:text>830</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vValidSubfields">
      <xslt:choose>
        <xslt:when test="$vSeriesMarcKeyTag='800'">
          <xslt:text>abcdfghjklmnopqrstv</xslt:text>
        </xslt:when>
        <xslt:when test="$vSeriesMarcKeyTag='810'">
          <xslt:text>abcdfghklmnoprstv</xslt:text>
        </xslt:when>
        <xslt:when test="$vSeriesMarcKeyTag='811'">
          <xslt:text>acdefghklnpqstv</xslt:text>
        </xslt:when>
        <xslt:when test="$vSeriesMarcKeyTag='830'">
          <xslt:text>adfghklmnoprstv</xslt:text>
        </xslt:when>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vXmlLang">
      <xslt:value-of select="rdfs:label/@xml:lang" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">
        <xslt:value-of select="$vSeriesMarcKeyTag" />
      </xslt:attribute>
      <xslt:if test="$vXmlLang != ''">
        <xslt:attribute name="xml:lang">
          <xslt:value-of select="$vXmlLang" />
        </xslt:attribute>
      </xslt:if>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vSeriesMarcKeyTag != '830'">
              <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                <xslt:choose>
                  <xslt:when test="position() = 1">
                    <xslt:value-of select="." />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:for-each>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="$vSeriesMarcKeyTag = '830'">
              <xslt:choose>
                <xslt:when test="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != '' and $vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1 != ' '">
                  <xslt:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/@ind1">
                    <xslt:choose>
                      <xslt:when test="position() = 1">
                        <xslt:value-of select="." />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag.</xslt:message>
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:for-each>
                </xslt:when>
                <xslt:otherwise>
                  <xslt:text>0</xslt:text>
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[contains($vValidSubfields,@code)]" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="@code" />
          </xsl:attribute>
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="." />
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xslt:for-each select="../../bf:seriesEnumeration">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="v">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $v.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xslt:choose>
          <xslt:when test="position() = 1">
            <marc:subfield code="x">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:when>
          <xslt:otherwise>
            <xslt:message>Record <xslt:value-of select="$vRecordId" />: Unprocessed node <xslt:value-of select="name()" />. Non-repeatable target element vSeriesMarcKeyTag $x.</xslt:message>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:for-each>
      <xslt:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
        <marc:subfield code="w">
          <xsl:value-of select="concat('(DLC)',rdf:value)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
        </marc:subfield>
      </xslt:for-each>
      <xslt:choose>
        <xslt:when test="$relURI != ''">
          <xslt:variable name="vvSeriesMarcKeyTag-1">
            <xsl:value-of select="$relURI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
          </xslt:variable>
          <xslt:if test="$vvSeriesMarcKeyTag-1 != ''">
            <marc:subfield code="1">
              <xslt:value-of select="$vvSeriesMarcKeyTag-1" />
            </marc:subfield>
          </xslt:if>
        </xslt:when>
      </xslt:choose>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Instance[                       (bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/c' or bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/c') and                        bf:electronicLocator                       ]" mode="generate-856">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v856Uri">
      <xsl:value-of select="bf:electronicLocator/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">856</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="starts-with($v856Uri,'mailto')">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'ftp')">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'telnet') or starts-with($v856Uri,'ssh')">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'http')">
              <xslt:text>4</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='SupplementaryContent'">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:choose>
        <xslt:when test="not(contains(bf:title/bf:Title/bf:mainTitle, 'resource]'))">
          <xslt:for-each select="bf:title/bf:Title/bf:mainTitle">
            <marc:subfield code="3">
              <xslt:value-of select="." />
            </marc:subfield>
          </xslt:for-each>
        </xslt:when>
      </xslt:choose>
      <xslt:variable name="v856-u">
        <xsl:value-of select="$v856Uri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </xslt:variable>
      <xslt:if test="$v856-u != ''">
        <marc:subfield code="u">
          <xslt:value-of select="$v856-u" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="z">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:tableOfContents/bf:TableOfContents[not(rdfs:label) and rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     //bf:Item/bf:electronicLocator/*[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']]" mode="generate-856">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v856Uri">
      <xsl:value-of select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">856</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="starts-with($v856Uri,'mailto')">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'ftp')">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'telnet') or starts-with($v856Uri,'ssh')">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'http')">
              <xslt:text>4</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='SupplementaryContent'">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:variable name="v856-u">
        <xsl:value-of select="$v856Uri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </xslt:variable>
      <xslt:if test="$v856-u != ''">
        <marc:subfield code="u">
          <xslt:value-of select="$v856-u" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="z">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="bf:Work/bf:tableOfContents[@rdf:resource] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[bf:electronicLocator/@rdf:resource] |                     //bf:Item/bf:electronicLocator[@rdf:resource]" mode="generate-856">
    <xslt:param name="vRecordId" />
    <xslt:param name="vAdminMetadata" />
    <xslt:variable name="v856Uri">
      <xsl:value-of select="@rdf:resource|bf:electronicLocator/@rdf:resource" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
    </xslt:variable>
    <marc:datafield>
      <xslt:attribute name="tag">856</xslt:attribute>
      <xslt:attribute name="ind1">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="starts-with($v856Uri,'mailto')">
              <xslt:text>0</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'ftp')">
              <xslt:text>1</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'telnet') or starts-with($v856Uri,'ssh')">
              <xslt:text>2</xslt:text>
            </xslt:when>
            <xslt:when test="starts-with($v856Uri,'http')">
              <xslt:text>4</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:attribute name="ind2">
        <xslt:variable name="vInd">
          <xslt:choose>
            <xslt:when test="local-name()='SupplementaryContent'">
              <xslt:text>2</xslt:text>
            </xslt:when>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vInd != ''">
            <xslt:value-of select="$vInd" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:text> </xslt:text>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:attribute>
      <xslt:variable name="v856-3">
        <xslt:choose>
          <xslt:when test="local-name()='tableOfContents'">
            <xslt:text>Table of contents</xslt:text>
          </xslt:when>
        </xslt:choose>
      </xslt:variable>
      <xslt:if test="$v856-3 != ''">
        <marc:subfield code="3">
          <xslt:value-of select="$v856-3" />
        </marc:subfield>
      </xslt:if>
      <xslt:variable name="v856-u">
        <xsl:value-of select="$v856Uri" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
      </xslt:variable>
      <xslt:if test="$v856-u != ''">
        <marc:subfield code="u">
          <xslt:value-of select="$v856-u" />
        </marc:subfield>
      </xslt:if>
      <xslt:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="z">
          <xslt:call-template name="tChopPunct">
            <xslt:with-param name="pString" select="." />
          </xslt:call-template>
        </marc:subfield>
      </xslt:for-each>
    </marc:datafield>
  </xslt:template>
  <xslt:template match="text()" />
  <xslt:template name="tChopPunct">
    <xslt:param name="pString" />
    <xslt:variable name="vNormString" select="normalize-space($pString)" />
    <xslt:variable name="vPunct" select="':;,/=–—'" />
    <xslt:variable name="vEndEnclose" select="')]}&quot;'" />
    <xslt:variable name="vLength" select="string-length($vNormString)" />
    <xslt:choose>
      <xslt:when test="$vLength=0" />
      <xslt:when test="not($vNormString)" />
      <xslt:when test="substring($vNormString,1,1) = '('">
        <xslt:variable name="vCloseIndex">
          <xslt:call-template name="tLastIndex">
            <xslt:with-param name="pString" select="$vNormString" />
            <xslt:with-param name="pSearch" select="')'" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vCloseIndex &gt; 2">
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))" />
            </xslt:call-template>
          </xslt:when>
          <xslt:otherwise>
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="substring($vNormString,2)" />
            </xslt:call-template>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:when test="substring($vNormString,1,1) = '['">
        <xslt:variable name="vCloseIndex">
          <xslt:call-template name="tLastIndex">
            <xslt:with-param name="pString" select="$vNormString" />
            <xslt:with-param name="pSearch" select="']'" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vCloseIndex &gt; 2">
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))" />
            </xslt:call-template>
          </xslt:when>
          <xslt:otherwise>
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="substring($vNormString,2)" />
            </xslt:call-template>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:when test="substring($vNormString,1,1) = '{'">
        <xslt:variable name="vCloseIndex">
          <xslt:call-template name="tLastIndex">
            <xslt:with-param name="pString" select="$vNormString" />
            <xslt:with-param name="pSearch" select="'}'" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vCloseIndex &gt; 2">
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))" />
            </xslt:call-template>
          </xslt:when>
          <xslt:otherwise>
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="substring($vNormString,2)" />
            </xslt:call-template>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:when test="substring($vNormString,1,1) = '&quot;'">
        <xslt:variable name="vCloseIndex">
          <xslt:call-template name="tLastIndex">
            <xslt:with-param name="pString" select="$vNormString" />
            <xslt:with-param name="pSearch" select="'&quot;'" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vCloseIndex &gt; 2">
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))" />
            </xslt:call-template>
          </xslt:when>
          <xslt:otherwise>
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="substring($vNormString,2)" />
            </xslt:call-template>
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:when test="substring($vNormString,$vLength,1) = '.'">
        <xslt:choose>
          <xslt:when test="contains(concat($vPunct,$vEndEnclose),substring($vNormString,$vLength - 1,1))">
            <xslt:call-template name="tChopPunct">
              <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
            </xslt:call-template>
          </xslt:when>
          <xslt:otherwise>
            <xslt:value-of select="$vNormString" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:when test="contains($vPunct, substring($vNormString,$vLength,1))">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
        </xslt:call-template>
      </xslt:when>
      <xslt:when test="substring($vNormString,$vLength,1)=')' and not(contains($vNormString,'('))">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
        </xslt:call-template>
      </xslt:when>
      <xslt:when test="substring($vNormString,$vLength,1)=']' and not(contains($vNormString,'['))">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
        </xslt:call-template>
      </xslt:when>
      <xslt:when test="substring($vNormString,$vLength,1)='}' and not(contains($vNormString,'{'))">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
        </xslt:call-template>
      </xslt:when>
      <xslt:when test="substring($vNormString,$vLength,1)='&quot;' and not(contains($vNormString,'&quot;'))">
        <xslt:call-template name="tChopPunct">
          <xslt:with-param name="pString" select="substring($vNormString,1,$vLength - 1)" />
        </xslt:call-template>
      </xslt:when>
      <xslt:otherwise>
        <xslt:value-of select="$vNormString" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tLastIndex">
    <xslt:param name="pString" />
    <xslt:param name="pSearch" />
    <xslt:choose>
      <xslt:when test="$pSearch != '' and contains($pString,$pSearch)">
        <xslt:variable name="vRevSearch">
          <xslt:call-template name="tReverseString">
            <xslt:with-param name="pString" select="$pSearch" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:variable name="vRevString">
          <xslt:call-template name="tReverseString">
            <xslt:with-param name="pString" select="$pString" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:value-of select="string-length($pString) - string-length(substring-before($vRevString,$vRevSearch))" />
      </xslt:when>
      <xslt:otherwise>0</xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tReverseString">
    <xslt:param name="pString" />
    <xslt:variable name="vLength" select="string-length($pString)" />
    <xslt:choose>
      <xslt:when test="$vLength &lt; 2">
        <xslt:value-of select="$pString" />
      </xslt:when>
      <xslt:when test="$vLength = 2">
        <xslt:value-of select="concat(substring($pString,2,1),substring($pString,1,1))" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:variable name="vMid" select="floor($vLength div 2)" />
        <xslt:variable name="vHalf1">
          <xslt:call-template name="tReverseString">
            <xslt:with-param name="pString" select="substring($pString,1,$vMid)" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:variable name="vHalf2">
          <xslt:call-template name="tReverseString">
            <xslt:with-param name="pString" select="substring($pString,$vMid+1)" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:value-of select="concat($vHalf2,$vHalf1)" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tPadRight">
    <xslt:param name="pInput" />
    <xslt:param name="pPadChar" select="' '" />
    <xslt:param name="pStringLength" />
    <xslt:choose>
      <xslt:when test="string-length($pInput) &gt;= $pStringLength">
        <xslt:value-of select="$pInput" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:call-template name="tPadRight">
          <xslt:with-param name="pInput" select="concat($pInput,$pPadChar)" />
          <xslt:with-param name="pPadChar" select="$pPadChar" />
          <xslt:with-param name="pStringLength" select="$pStringLength" />
        </xslt:call-template>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tPadLeft">
    <xslt:param name="pInput" />
    <xslt:param name="pPadChar" select="' '" />
    <xslt:param name="pStringLength" select="string-length($pInput)" />
    <xslt:choose>
      <xslt:when test="string-length($pInput) &gt;= $pStringLength">
        <xslt:value-of select="$pInput" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:call-template name="tPadLeft">
          <xslt:with-param name="pInput" select="concat($pPadChar,$pInput)" />
          <xslt:with-param name="pPadChar" select="$pPadChar" />
          <xslt:with-param name="pStringLength" select="$pStringLength" />
        </xslt:call-template>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tStringJoin">
    <xslt:param name="pSeq" />
    <xslt:param name="pJoinChar" select="', '" />
    <xslt:for-each select="$pSeq">
      <xslt:value-of select="." />
      <xslt:if test="position() != last()">
        <xslt:value-of select="$pJoinChar" />
      </xslt:if>
    </xslt:for-each>
  </xslt:template>
  <xslt:template name="tEndsWith">
    <xslt:param name="pStr" />
    <xslt:param name="pEndChar" />
    <xslt:choose>
      <xslt:when test="substring($pStr, string-length($pStr)) = $pEndChar">1</xslt:when>
      <xslt:otherwise>0</xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="EDTF-Date1">
    <xslt:param name="pEDTFDate" />
    <xslt:choose>
      <xslt:when test="contains($pEDTFDate,'/')">
        <xslt:value-of select="substring-before($pEDTFDate,'/')" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:value-of select="$pEDTFDate" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="EDTF-Date2">
    <xslt:param name="pEDTFDate" />
    <xslt:value-of select="substring-after($pEDTFDate,'/')" />
  </xslt:template>
  <xslt:template name="EDTF-DatePart">
    <xslt:param name="pEDTFDate" />
    <xslt:choose>
      <xslt:when test="contains($pEDTFDate,'T')">
        <xslt:value-of select="substring-before($pEDTFDate,'T')" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:value-of select="$pEDTFDate" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="EDTF-TimePart">
    <xslt:param name="pEDTFDate" />
    <xslt:choose>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'+')">
        <xslt:value-of select="substring-before(substring-after($pEDTFDate,'T'),'+')" />
      </xslt:when>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'-')">
        <xslt:value-of select="substring-before(substring-after($pEDTFDate,'T'),'-')" />
      </xslt:when>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'Z')">
        <xslt:value-of select="substring-before(substring-after($pEDTFDate,'T'),'Z')" />
      </xslt:when>
      <xslt:otherwise>
        <xslt:value-of select="substring-after($pEDTFDate,'T')" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="EDTF-TimeDiff">
    <xslt:param name="pEDTFDate" />
    <xslt:choose>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'+')">
        <xslt:value-of select="concat('+',substring-after(substring-after($pEDTFDate,'T'),'+'))" />
      </xslt:when>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'-')">
        <xslt:value-of select="concat('-',substring-after(substring-after($pEDTFDate,'T'),'-'))" />
      </xslt:when>
      <xslt:when test="contains(substring-after($pEDTFDate,'T'),'Z')">+00:00</xslt:when>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="EDTF-to-033">
    <xslt:param name="pEDTFDate" />
    <xslt:variable name="vEDTFDate" select="translate(translate(translate($pEDTFDate,'?',''),'~',''),'%','')" />
    <xslt:variable name="vDatePart">
      <xslt:call-template name="EDTF-DatePart">
        <xslt:with-param name="pEDTFDate" select="$vEDTFDate" />
      </xslt:call-template>
    </xslt:variable>
    <xslt:variable name="vTimePart">
      <xslt:call-template name="EDTF-TimePart">
        <xslt:with-param name="pEDTFDate" select="$vEDTFDate" />
      </xslt:call-template>
    </xslt:variable>
    <xslt:variable name="vTimeDiffPart">
      <xslt:call-template name="EDTF-TimeDiff">
        <xslt:with-param name="pEDTFDate" select="$vEDTFDate" />
      </xslt:call-template>
    </xslt:variable>
    <xslt:variable name="vYear">
      <xslt:variable name="vYear033">
        <xslt:choose>
          <xslt:when test="contains($vDatePart,'-')">
            <xslt:value-of select="translate(substring-before($vDatePart,'-'),'X','-')" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:value-of select="translate($vDatePart,'X','-')" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:choose>
        <xslt:when test="starts-with($vYear033,'Y') or starts-with($vYear033,'-') or (string-length($vYear033) != 4)">
          <xslt:text>----</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:value-of select="$vYear033" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vMonth">
      <xslt:variable name="vMonth033">
        <xslt:choose>
          <xslt:when test="substring-after(substring-after($vDatePart,'-'),'-') != ''">
            <xslt:value-of select="translate(substring-before(substring-after($vDatePart,'-'),'-'),'X','-')" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:value-of select="translate(substring-after($vDatePart,'-'),'X','-')" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:choose>
        <xslt:when test="(string-length($vMonth033) != 2) or ($vMonth033 &gt; 12)">
          <xslt:text>--</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:value-of select="$vMonth033" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vDay">
      <xslt:variable name="vDay033" select="translate(substring-after(substring-after($vDatePart,'-'),'-'),'X','-')" />
      <xslt:choose>
        <xslt:when test="(string-length($vDay033) != 2) or ($vDay033 &gt; 31)">
          <xslt:text>--</xslt:text>
        </xslt:when>
        <xslt:otherwise>
          <xslt:value-of select="$vDay033" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:variable name="vTime">
      <xslt:if test="$vTimePart != ''">
        <xslt:variable name="vTime033" select="translate(translate($vTimePart,'X','-'),':','')" />
        <xslt:choose>
          <xslt:when test="string-length($vTime033) = 6">
            <xslt:value-of select="$vTime033" />
          </xslt:when>
          <xslt:otherwise>------</xslt:otherwise>
        </xslt:choose>
      </xslt:if>
    </xslt:variable>
    <xslt:variable name="vTimeDiff">
      <xslt:if test="($vTimePart != '') and ($vTimeDiffPart != '')">
        <xslt:variable name="vTimeDiff033" select="translate(translate($vTimeDiffPart,'X','-'),':','')" />
        <xslt:choose>
          <xslt:when test="string-length($vTimeDiff033) = 5">
            <xslt:value-of select="$vTimeDiff033" />
          </xslt:when>
          <xslt:when test="string-length($vTimeDiff033) = 3">
            <xslt:value-of select="concat($vTimeDiff033,'00')" />
          </xslt:when>
        </xslt:choose>
      </xslt:if>
    </xslt:variable>
    <xslt:value-of select="concat($vYear,$vMonth,$vDay,$vTime,$vTimeDiff)" />
  </xslt:template>
  <xslt:template name="tScriptCode">
    <xslt:param name="pXmlLang" />
    <xslt:if test="string-length($pXmlLang) &gt;= 4">
      <xslt:choose>
        <xslt:when test="string-length($pXmlLang)=4 and translate(substring($pXmlLang,1,1),0123456789,'') != ''">
          <xslt:value-of select="$pXmlLang" />
        </xslt:when>
        <xslt:when test="string-length(substring-before($pXmlLang,'-'))=4 and translate(substring($pXmlLang,1,1),0123456789,'') != ''">
          <xslt:value-of select="substring-before($pXmlLang,'-')" />
        </xslt:when>
        <xslt:otherwise>
          <xslt:call-template name="tScriptCode">
            <xslt:with-param name="pXmlLang" select="substring-after($pXmlLang,'-')" />
          </xslt:call-template>
        </xslt:otherwise>
      </xslt:choose>
    </xslt:if>
  </xslt:template>
  <xslt:template name="tUriCode">
    <xslt:param name="pUri" />
    <xslt:choose>
      <xslt:when test="contains($pUri,'://')">
        <xslt:if test="contains(substring-after($pUri,'://'),'/')">
          <xslt:call-template name="tUriCode">
            <xslt:with-param name="pUri" select="substring-after($pUri,'://')" />
          </xslt:call-template>
        </xslt:if>
      </xslt:when>
      <xslt:when test="contains($pUri,'/')">
        <xslt:call-template name="tUriCode">
          <xslt:with-param name="pUri" select="substring-after($pUri,'/')" />
        </xslt:call-template>
      </xslt:when>
      <xslt:otherwise>
        <xslt:choose>
          <xslt:when test="contains($pUri,'?')">
            <xslt:value-of select="substring-before($pUri,'?')" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:value-of select="$pUri" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tToken2Subfields">
    <xslt:param name="pString" />
    <xslt:param name="pSeparator" select="' '" />
    <xslt:param name="pSubfieldCode" />
    <xslt:choose>
      <xslt:when test="contains($pString,$pSeparator)">
        <marc:subfield>
          <xslt:attribute name="code">
            <xslt:value-of select="$pSubfieldCode" />
          </xslt:attribute>
          <xslt:value-of select="substring-before($pString,$pSeparator)" />
        </marc:subfield>
        <xslt:call-template name="tToken2Subfields">
          <xslt:with-param name="pString" select="substring-after($pString,$pSeparator)" />
          <xslt:with-param name="pSeparator" select="$pSeparator" />
          <xslt:with-param name="pSubfieldCode" select="$pSubfieldCode" />
        </xslt:call-template>
      </xslt:when>
      <xslt:otherwise>
        <marc:subfield>
          <xslt:attribute name="code">
            <xslt:value-of select="$pSubfieldCode" />
          </xslt:attribute>
          <xslt:value-of select="$pString" />
        </marc:subfield>
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tGetRelResource">
    <xslt:param name="pRelUri" />
    <xslt:param name="pContext" />
    <xslt:choose>
      <xslt:when test="$pContext/marc:record">
        <xslt:copy-of select="$pContext/marc:record" />
      </xslt:when>
      <xslt:when test="$pContext/bflc:marcKey">
        <marc:record>
          <marc:datafield>
            <xslt:attribute name="tag">
              <xslt:choose>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '00'">100</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '10'">110</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '11'">111</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '30'">130</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '50'">150</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '51'">151</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 2, 2) = '55'">155</xslt:when>
                <xslt:when test="substring($pContext/bflc:marcKey, 1, 3) = '440'">130</xslt:when>
                <xslt:otherwise>
                  <xslt:value-of select="substring($pContext/bflc:marcKey, 1, 3)" />
                </xslt:otherwise>
              </xslt:choose>
            </xslt:attribute>
            <xslt:attribute name="ind1">
              <xslt:choose>
                <xslt:when test="substring($pContext/bflc:marcKey, 1, 3) = 630 or substring($pContext/bflc:marcKey, 1, 3) = 730">
                  <xslt:value-of select="substring($pContext/bflc:marcKey, 5, 1)" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:value-of select="substring($pContext/bflc:marcKey, 4, 1)" />
                </xslt:otherwise>
              </xslt:choose>
            </xslt:attribute>
            <xslt:attribute name="ind2">
              <xslt:choose>
                <xslt:when test="substring($pContext/bflc:marcKey, 1, 3) = 630 or substring($pContext/bflc:marcKey, 1, 3) = 730">
                  <xslt:value-of select="substring($pContext/bflc:marcKey, 4, 1)" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:value-of select="substring($pContext/bflc:marcKey, 5, 1)" />
                </xslt:otherwise>
              </xslt:choose>
            </xslt:attribute>
            <xslt:call-template name="tParseMarcKey">
              <xslt:with-param name="pString" select="substring($pContext/bflc:marcKey, 6)" />
            </xslt:call-template>
          </marc:datafield>
        </marc:record>
      </xslt:when>
      <xslt:otherwise>
        <xslt:variable name="vRelResourcePreNS">
          <xslt:call-template name="tGetMARCAuth">
            <xslt:with-param name="pUri" select="$pRelUri" />
          </xslt:call-template>
        </xslt:variable>
        <xslt:copy-of select="$vRelResourcePreNS" />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tGetMARCAuth">
    <xslt:param name="pUri" />
    <xslt:param name="pForceSRULookup" select="false()" />
    <xslt:variable name="vUrl">
      <xslt:choose>
        <xslt:when test="(                                contains($pUri,'id.loc.gov/authorities/') or                                contains($pUri,'id.loc.gov/rwo/agents') or                                contains($pUri,'id.loc.gov/resources/hubs') or                                contains($pUri,'id.worldcat.org/fast/') or                                contains($pUri,'d-nb.info/gnd/')                             )                             and not('.marcxml.xml' = substring($pUri, string-length($pUri) - 11))">
          <xslt:choose>
            <xslt:when test="($xslProcessor='libxslt' or $pSRULookup='true' or $pForceSRULookup=true())">
              <xslt:variable name="vUriLccn">
                <xslt:call-template name="tUriCode">
                  <xslt:with-param name="pUri" select="$pUri" />
                </xslt:call-template>
              </xslt:variable>
              <xslt:variable name="vLccnSearch">
                <xslt:variable name="vLccnNum">
                  <xslt:value-of select="translate($vUriLccn,translate($vUriLccn,'0123456789',''),'')" />
                </xslt:variable>
                <xslt:variable name="vPrefix">
                  <xslt:value-of select="translate(substring($vUriLccn,1,3),'0123456789 ','')" />
                </xslt:variable>
                <xslt:choose>
                  <xslt:when test="string-length($vLccnNum)=10">
                    <xslt:choose>
                      <xslt:when test="string-length($vPrefix) &lt; 2">
                        <xslt:value-of select="concat($vPrefix,'%20',$vLccnNum)" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:value-of select="$vUriLccn" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:choose>
                      <xslt:when test="string-length($vPrefix) &lt; 3">
                        <xslt:value-of select="concat($vPrefix,'%20',$vLccnNum)" />
                      </xslt:when>
                      <xslt:otherwise>
                        <xslt:value-of select="$vUriLccn" />
                      </xslt:otherwise>
                    </xslt:choose>
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:choose>
                <xslt:when test="contains($pUri,'names') or contains($pUri,'agents')">
                  <xslt:value-of select="concat('http://lx2.loc.gov:210/NAF?query=bath.lccn%3d',$vLccnSearch,'&amp;recordSchema=marcxml&amp;maximumRecords=1')" />
                </xslt:when>
                <xslt:when test="contains($pUri,'ubjects') or contains($pUri,'genreForm')">
                  <xslt:value-of select="concat('http://lx2.loc.gov:210/SAF?query=bath.lccn%3d',$vLccnSearch,'&amp;recordSchema=marcxml&amp;maximumRecords=1')" />
                </xslt:when>
                <xslt:otherwise>
                  <xslt:message>Desire to look up <xslt:value-of select="$pUri" /> but using xsltproc. No lookup occurred.</xslt:message>
                  <xslt:value-of select="$pUri" />
                </xslt:otherwise>
              </xslt:choose>
            </xslt:when>
            <xslt:when test="contains($pUri, 'id.worldcat.org/fast/')">
              <xslt:variable name="vPath">
                <xslt:value-of select="substring-after($pUri,'://id.worldcat.org')" />
              </xslt:variable>
              <xslt:value-of select="concat('https://id.worldcat.org',$vPath,'.mrc.xml')" />
            </xslt:when>
            <xslt:when test="contains($pUri, 'd-nb.info/gnd/')">
              <xslt:variable name="vPath">
                <xslt:value-of select="substring-after($pUri,'://d-nb.info')" />
              </xslt:variable>
              <xslt:value-of select="concat('https://d-nb.info',$vPath,'/about/marcxml')" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:variable name="vLookupURI">
                <xslt:choose>
                  <xslt:when test="contains($pUri, 'id.loc.gov/rwo/agents')">
                    <xslt:value-of select="concat(substring-before($pUri,'rwo/agents'), 'authorities/names/', substring-after($pUri,'rwo/agents/'))" />
                  </xslt:when>
                  <xslt:otherwise>
                    <xslt:value-of select="$pUri" />
                  </xslt:otherwise>
                </xslt:choose>
              </xslt:variable>
              <xslt:variable name="vPath">
                <xslt:value-of select="substring-after($vLookupURI,'://id.loc.gov')" />
              </xslt:variable>
              <xslt:value-of select="concat('https://id.loc.gov',$vPath,'.marcxml.xml')" />
            </xslt:otherwise>
          </xslt:choose>
        </xslt:when>
        <xslt:otherwise>
          <xslt:value-of select="$pUri" />
        </xslt:otherwise>
      </xslt:choose>
    </xslt:variable>
    <xslt:choose>
      <xslt:when test="$vUrl != '' and not($xslProcessor='libxslt' and contains($vUrl, 'resources/hubs'))">
        <xslt:variable name="vDoc">
          <xslt:choose>
            <xslt:when test="function-available('xdmp:document-get')">
              <xslt:copy-of select="xdmp:document-get($vUrl)" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:copy-of select="document($vUrl)" />
            </xslt:otherwise>
          </xslt:choose>
        </xslt:variable>
        <xslt:choose>
          <xslt:when test="$vDoc">
            <xslt:copy-of select="$vDoc" />
          </xslt:when>
          <xslt:otherwise>
            <marc:collection />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:when>
      <xslt:otherwise>
        <marc:collection />
      </xslt:otherwise>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tGetLabel">
    <xslt:param name="pUri" />
    <xslt:if test="$xslProcessor != 'libxslt'">
      <xslt:variable name="vUrl">
        <xslt:choose>
          <xslt:when test="(                contains($pUri,'id.loc.gov/entities/') or                contains($pUri,'id.loc.gov/vocabulary/')               )               and not('.madsrdf_raw.rdf' = substring($pUri, string-length($pUri) - 16))">
            <xslt:variable name="vPath">
              <xslt:value-of select="substring-after($pUri,'://id.loc.gov')" />
            </xslt:variable>
            <xslt:value-of select="concat('https://id.loc.gov',$vPath,'.madsrdf_raw.rdf')" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:value-of select="$pUri" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:variable name="vDoc">
        <xslt:choose>
          <xslt:when test="function-available('xdmp:document-get')">
            <xslt:copy-of select="xdmp:document-get($vUrl)" />
          </xslt:when>
          <xslt:otherwise>
            <xslt:copy-of select="document($vUrl)" />
          </xslt:otherwise>
        </xslt:choose>
      </xslt:variable>
      <xslt:choose>
        <xslt:when test="$vDoc">
          <xslt:value-of select="$vDoc/rdf:RDF/madsrdf:*/madsrdf:authoritativeLabel[1]" />
        </xslt:when>
      </xslt:choose>
    </xslt:if>
  </xslt:template>
  <xslt:template name="tParseMarcKey">
    <xslt:param name="pString" />
    <xslt:param name="pSeparator" select="'$'" />
    <xslt:choose>
      <xslt:when test="starts-with($pString,$pSeparator)">
        <marc:subfield>
          <xslt:attribute name="code">
            <xslt:value-of select="substring(substring-after($pString,$pSeparator),1,1)" />
          </xslt:attribute>
          <xslt:choose>
            <xslt:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
              <xslt:value-of select="substring-before(substring(substring-after($pString,$pSeparator),2),$pSeparator)" />
            </xslt:when>
            <xslt:otherwise>
              <xslt:value-of select="substring(substring-after($pString,$pSeparator),2)" />
            </xslt:otherwise>
          </xslt:choose>
        </marc:subfield>
        <xslt:choose>
          <xslt:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
            <xslt:call-template name="tParseMarcKey">
              <xslt:with-param name="pString" select="concat($pSeparator,substring-after(substring-after($pString,$pSeparator),$pSeparator))" />
              <xslt:with-param name="pSeparator" select="$pSeparator" />
            </xslt:call-template>
          </xslt:when>
        </xslt:choose>
      </xslt:when>
    </xslt:choose>
  </xslt:template>
  <xslt:template name="tReadMarc382">
    <xslt:param name="pString" />
    <xslt:param name="pSeparator" select="'$'" />
    <xslt:choose>
      <xslt:when test="starts-with($pString,$pSeparator)">
        <xslt:if test="substring(substring-after($pString,$pSeparator),1,1) != '3'">
          <marc:subfield>
            <xslt:attribute name="code">
              <xslt:value-of select="substring(substring-after($pString,$pSeparator),1,1)" />
            </xslt:attribute>
            <xslt:choose>
              <xslt:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
                <xslt:value-of select="substring-before(substring(substring-after($pString,$pSeparator),2),$pSeparator)" />
              </xslt:when>
              <xslt:otherwise>
                <xslt:value-of select="substring(substring-after($pString,$pSeparator),2)" />
              </xslt:otherwise>
            </xslt:choose>
          </marc:subfield>
        </xslt:if>
        <xslt:choose>
          <xslt:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
            <xslt:call-template name="tReadMarc382">
              <xslt:with-param name="pString" select="concat($pSeparator,substring-after(substring-after($pString,$pSeparator),$pSeparator))" />
              <xslt:with-param name="pSeparator" select="$pSeparator" />
            </xslt:call-template>
          </xslt:when>
        </xslt:choose>
      </xslt:when>
    </xslt:choose>
  </xslt:template>
</xslt:stylesheet>